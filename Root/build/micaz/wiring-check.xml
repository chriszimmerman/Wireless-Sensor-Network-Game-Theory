<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="41:AntiTheftRootAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403872a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40383c88"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40383c88"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404be408"/></to>
    </wire>
    <wire loc="42:AntiTheftRootAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x4038da38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c12bb0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c12bb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c541d0"/></to>
    </wire>
    <wire loc="43:AntiTheftRootAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40389180"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x403e5a90"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x403e5a90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40521560"/></to>
    </wire>
    <wire loc="44:AntiTheftRootAppC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x403c2980"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405253c0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405253c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405494e0"/></to>
    </wire>
    <wire loc="45:AntiTheftRootAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403d5648"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403ec010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404ea698"/></to>
    </wire>
    <wire loc="48:AntiTheftRootAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x403c9010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e29dc0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40e29dc0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e279c8"/></to>
    </wire>
    <wire loc="54:AntiTheftRootAppC.nc">
      <from><interface-ref name="SettingsReceive" scoped="" ref="0x403c6678"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f4fd38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f4fd38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c0ff10"/>
      <arguments>
        <value cst="I:54">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:AntiTheftRootAppC.nc">
      <from><interface-ref name="SettingsUpdate" scoped="" ref="0x403921e8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x40f512d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x40f512d0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x415a3840"/></to>
    </wire>
    <wire loc="61:AntiTheftRootAppC.nc">
      <from><interface-ref name="CollectionControl" scoped="" ref="0x403c7a58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f428f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40f428f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f93688"/></to>
    </wire>
    <wire loc="62:AntiTheftRootAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x403cd378"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40f5eb90"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40f5eb90"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40f88800"/></to>
    </wire>
    <wire loc="63:AntiTheftRootAppC.nc">
      <from><interface-ref name="AlertsForward" scoped="" ref="0x403d3b28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411da920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x411da920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4172c2d8"/></to>
    </wire>
    <wire loc="66:AntiTheftRootAppC.nc">
      <from><interface-ref name="TheftReceive" scoped="" ref="0x403c5318"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4120b1f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4120b1f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404fcd40"/>
      <arguments>
        <value cst="I:99">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416b6430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41671550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4167cd88"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411c6690"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4105c858"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4109c500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415e35d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40d629b0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40d5e4c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d40398"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c58df8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bb49a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b54b48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b64040"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b4e5f0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a5ff28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409ef1e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4096b380"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405f2010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41444010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40822128"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405a0418"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404be7a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402f0408"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402f0408"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403614f8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404bed68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403eb978"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403eb978"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403eac60"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404d6240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403f09c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e12960"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403f09c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406d0db8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403f0268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404cda88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403ee490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404cd6d8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ee088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404f2870"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ee088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403e97f0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403e97f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403f3760"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403e9bc0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403f09c8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40400cc0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40404010"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40404010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404526b0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403fa748"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403e9bc0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404222f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4049dee0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40414830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4045f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4045f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412e03b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40418ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4046d030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4046d030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412eb538"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x4041c0a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40472890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40472890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4133f228"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404034b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40451988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40451988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4122d538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4041ec08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404735d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404735d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41343de0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404018e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4044d888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4044d888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41242418"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4040e0a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4045b4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4045b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4128e228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40412750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40469170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40469170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412db228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40416ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4046cc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4046cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4132c538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403fc138"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40448968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40448968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412350b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40409750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404565d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404565d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41280228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4040dea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40459170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40459170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412890b0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40410670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40468e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40468e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d60b0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4041bea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4047b5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4047b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4133a0b0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404203d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a1dd8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40419a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4046fd30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4046fd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412ee010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404526b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41230010"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40407750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40454250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40454250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127b0b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40422ee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a63e8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40406c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4045c228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4045c228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41295de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404132f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4045fe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4045fe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412dfd70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404178e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4046d988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4046d988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4132f010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x4041ca98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4047c250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4047c250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4133ec08"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40403ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40450330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40450330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4122b010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4040a2f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40458250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40458250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41241de0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4040ea98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4045be48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4045be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4128dc08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40411210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40469ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40469ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412dac08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40415750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4046b6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4046b6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4132a010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403fcb30"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40447330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40447330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41234a88"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40408210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40456f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40456f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127fc08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4040c8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40459ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40459ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41288a88"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404238e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4047bf28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4047bf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41339a88"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4040bce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40460b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40460b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412e2938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404184b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4046e6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4046e6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412ed9e8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x4041d670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40473f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40473f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413417f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40420dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404ab3b0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40404a08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40451030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40451030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4122f9e8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40406210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40454ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40454ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127aa88"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4041e210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40474c28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40474c28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41344418"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4040f670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4045cb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4045cb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412907f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40413ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4046a7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4046a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412dd7f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404162f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4046c330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4046c330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4132e9e8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4041b4b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4047cba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4047cba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4133c6c0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403f2730"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40448010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40448010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412376c0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4040ace8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40458ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40458ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412827f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4040d4b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4045a7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4045a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4128b6c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40411c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404684f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404684f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d86c0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40421900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a38f0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404190a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046f3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4046f3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412f0538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4040b2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404644f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404644f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41286538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40405590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40447c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40447c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41232538"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40408c88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40455890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40455890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127d6c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40361d30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403609b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40366220"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40373498"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406447b8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404f2870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404ea350"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404e9400"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x404deaa8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404deaa8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403fcb30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404e9de8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404f34c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404f34c8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403fc138"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404e8820"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404f3ed0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404f3ed0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403f2730"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40521560"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4052caa0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x404fc380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40521e38"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40521e38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40bbc4e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x404fb3f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40520ed0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40520ed0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40bbb580"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40500388"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4051fe70"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4051fe70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40bba518"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x4051ac68"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a2f010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a2f010"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a27980"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40517d78"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405253c0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404fcd40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40520838"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40520838"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bbcea8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4050e308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40526b88"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40526b88"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40532ad8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4051f258"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4051f258"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40bbb8f0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x404f9650"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a2d9d8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a2d9d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a483a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4052caa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40baef18"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x4052eab8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40bb95a8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405368e8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40bbaf10"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40526330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40532280"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40532280"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a33620"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405494e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40bae8e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40532ad8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40a33ec8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40539df0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40549b00"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40549b00"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40ba3858"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4051c010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40549118"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40549118"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a30918"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x40bb56f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4053f658"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bb9df8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40533728"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40533728"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40b68b40"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bb85a0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40533eb0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40533eb0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40b67320"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40bb6700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4094f140"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40bb8938"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a33620"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a33620"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a28010"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bb71f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a28e38"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40bb7670"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x405951b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x405951b0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x405a0ee0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40bb6e40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405422a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405422a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4054e010"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40bb5db8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40baef18"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40bac9c0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4053bb98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b68090"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40b68090"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40b8be58"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40b68b40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40b8a9b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40bae8e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40bab600"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40533358"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b68770"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b68770"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40b8a5e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40a33ec8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40a288b8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4053f658"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b699a0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b699a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b8b718"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40b67320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40b89160"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40ba3858"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40ba2cb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a30918"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a27328"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40bac9c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40543198"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40543198"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4054f218"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b67af8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b42308"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40b42308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b3f940"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b42a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ba3158"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ba3158"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ba2010"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ba2010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b58d98"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40b58d98"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40baddf0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40baddf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405437a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405437a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4054f820"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b67748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bae518"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bae518"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bac5a0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bac5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b41d68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b41d68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b543d8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b57688"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40543ea0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40543ea0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409f20b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409f20b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409ee010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4054e800"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40590608"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40590608"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x405a07a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x405589c0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x4058d1e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x4058d1e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x4059fe90"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4054c420"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40944af8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4054c420"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409d36c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409d36c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409ef588"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40944af8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4096b720"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x405539e0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40941010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40941010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4096bc18"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x4054b278"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40941728"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40941728"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4096a3b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40557810"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a33620"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x4055d900"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x405616e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b4f948"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b4f948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b4b478"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x405600e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b29608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40b29608"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40826100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40561b28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x40568258"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x40569a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x405691d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x4058c030"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x4059e990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x405a7978"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x405f25d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x405f25d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4074fe78"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4059b3a8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x405f4e90"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x405f4e90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404018e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x4059bdb0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x4074acd0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x4074acd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404034b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x405a6840"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x40748128"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40748128"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x40404a08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x405a29c8"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x40759188"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40759188"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x407afb80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x405bb850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40911918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40911918"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407d4340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x405b9758"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x4090f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x4090f010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x405b9b70"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x4090fa18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x4090fa18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x405bb430"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40910880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40910880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x405bb010"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x4090fd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x4090fd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x405aa850"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x4090adb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4090adb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x405aadd8"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x40909f18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40909f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x405b1340"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x40908368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40908368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x405b1860"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x4090de50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4090de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x405b1d80"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x4090b2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4090b2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x405ab100"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x40906a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40906a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x405ae348"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x4090a880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4090a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x405ae840"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x4090b6e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4090b6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x405ba8e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4091a060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4091a060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407d4340"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x405ba030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40925798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40925798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407d4340"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405b0a68"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4094f140"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x405b3cc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x405b34e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405f2010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405ff7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x405ff7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40750bb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4074fe78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x413eaed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x413eaed8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x413e36b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x413df3b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x413e6c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x413e6c68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x413daa00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x413e0180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406f8668"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406f8668"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406f7e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x413d8548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4060e260"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4060e260"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40674410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x413d57e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40620b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40618208"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40671770"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4061e010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40670508"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40620b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40681450"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40620b08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4067f0b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40620b08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4067ecb0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x4067b888"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40628678"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40628678"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40632360"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40637c90"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40644c18"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4062b010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40632cc0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4061fe88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40635030"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406de220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4060e260"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4072c0e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4070c088"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4070c088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4070a890"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40715a58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4060e260"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x4074b890"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40406210"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x4074a2e8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40416ce8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x405f44b8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40411c08"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40749730"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x40412750"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40757a28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40764f00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40759898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40761608"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x407565a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4061e010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40761c00"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x407814f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x407814f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4079d840"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x407ac250"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x405f44b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x4076c890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40791d60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4076a338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407a2408"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x40781d78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407b4a08"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x4076b168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407a6010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4076abb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4079f5e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x4076c010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4077dbf8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4076b9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407a4228"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40782430"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x4077c980"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407a85f0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x4077cdf8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407a67c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x4077b2b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407a49e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x4077b728"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407a2bc0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x4077bba0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4079fda0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x4077a030"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407b5010"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x4077a4a8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407b3270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x4077a920"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x407abac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40910bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409096a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40909ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40903cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40904b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x4090f6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409042b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4090a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40907468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40910010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x407d4a90"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x407d4a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x407d19a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x4090e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x4090e840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x4090ec18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409046e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x4090bb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40903880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40903010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409078a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40906e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409087a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40920190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40910528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x4090da18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x4090a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40909270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x4090d010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x4090d6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409065c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x4090e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40906190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40903448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40907cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x4090f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40907030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40908bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x4090d368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40920a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x407d3340"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407e6c28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x407d3d88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407e56a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x407d2600"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407e5e48"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407d4340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407e61f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407e4630"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x407e2308"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40827e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40827e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40826100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x407e4a70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40823be8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40823be8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408f0570"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x407e3a80"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408ee330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x408ee330"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x4082fd48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x407dedc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408ee668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408ee668"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x4082b648"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407e2ab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x407f5818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40826100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40822758"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x4082b648"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40842d10"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x4082fd48"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40842370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x408238b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4082f9c8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4082f9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40842010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x408f0d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4082bd98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x408ed488"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404018e0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x4082b010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x408426f8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4082bd98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40840488"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x4083e158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408b1d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x408b1d40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41443350"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x408487b8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x408f3898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x408f3898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41443e98"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x4084b4d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40843e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40843e40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x408881c8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40848c38"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366ed0"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x4086d1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40883898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366ed0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40886010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404018e0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x408869e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4040a2f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x408854a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x4040ace8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40885e88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40409750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x408f3490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41443a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x414423a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x408f3d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x414427d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41444348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41442dc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40914e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40919368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409154b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40913cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x4092f190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40929448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x4092b2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40919d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4092ca00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40915d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409145c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x4092eb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4092f5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x4091a718"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x407d4a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40917b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40917ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40916308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4092ce38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409174e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40914190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409158f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40919010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40929010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x4092b6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x4092d010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4092c5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x4092fe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40929880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x4091ac30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40915080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40914a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4092fa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40913468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409196c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409138a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40916660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40916d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4092c190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4092dcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40917840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4092d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x4092bb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x4092d448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40919a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x4092e6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40917190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x4092e2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409169b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40928190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4093d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40924a40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4093fb68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4093c448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x4093c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40936b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40937a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409234e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40937190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4093e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4093ecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409392b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4093ccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40925e50"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x407d4a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40922260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409225b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40922990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409375c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40923b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x4093e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4093e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409246e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409366e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40937e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409396e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40938cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x4093b5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40935010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40924390"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x4093f730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x4093d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4093b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4093db00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40924d98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4093c010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40922ce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x4093f3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40938880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40938448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40923ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40938010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x409362b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40939b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40923190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x4093be38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40923840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x4093ba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x4093f080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409358e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40940800"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x4096aca8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40940c68"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x409691b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40969778"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x405f25d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40962d58"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x405f44b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40961830"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x405f4e90"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x4097d2f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x40749730"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x409626e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x40757a28"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4097dd30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409c66e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409c66e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407d4340"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x4097c4a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x409c6d98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409c6d98"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x407d4a90"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x4097bc48"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x409c5350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409c5350"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x4097a098"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x409c4190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409c4190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x4097a4c8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x409c44e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409c44e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x4097a8f8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x409c3260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409c3260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4097b760"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x409e2cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409e2cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4097ca68"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x409d98e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409d98e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4097b258"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409db190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409db190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4097ad38"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x409e2010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409e2010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409797b0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x409e0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409e0010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40979cd0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x409e0448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409e0448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40979370"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x409c2080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409c2080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40978bc8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x409da6e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409da6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40978220"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x409dba00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x409dba00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x409786e8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x409dbe38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x409dbe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40974970"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x409d3b60"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x409d3b60"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x409efa28"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40966188"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a33620"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x409669c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40965088"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a2f010"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40962010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a2b218"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a2b218"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a47af8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40974e98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409e15c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409c5a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409c2b68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x409e0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409dab20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409e2448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409de2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409e0cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409c35b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409c3990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409db5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409c4b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409e2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409c56a8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409de6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409ddcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409df5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409d9010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409c2730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409e1190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409df190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409e1b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409c5d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409c3ce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409c23d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409dd880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409dd448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409c4ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409dd010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x409da2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409deb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409dfe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409c4840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409dfa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x409f2550"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x409ee4a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a04398"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x409ee880"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x405f4e90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x409ed300"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x4074b890"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x409edd10"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x4074a2e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x409eb7e8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x40759898"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409ebea8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a31908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a31908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407d4340"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409ea668"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40b16190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b16190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409e9268"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40b22190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b22190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x409eadf0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40b22840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b22840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x409e96a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a33620"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x409e9ee0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409e7520"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a2f010"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x409e83a0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x405951b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409e5168"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40b1d270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b1d270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409e5688"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40b1d6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b1d6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409e6ca0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x40b21010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b21010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409e4510"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x40b18cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40b18cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x409e5b50"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40b19b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40b19b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x409e4030"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40b18010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40b18010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409e4a10"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b196e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b196e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409e4ef8"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40b25528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b25528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x409fd570"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a66e60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406f8668"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40a42708"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a664c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40a44180"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a77418"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a77418"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b102f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40a7f100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40aef808"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a5ff28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a76ad0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a76ad0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ac5640"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40b15b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a74a88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40acfe50"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40a730b0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40a730b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ac5a78"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b10c90"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40a72d20"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40a72d20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ac25b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40ac25b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x414cdeb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40ac5640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414ce010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40ac5a78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x414ce448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x414ca0c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4061fe88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x414c8278"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40628678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x414c8aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4062b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x414c54f0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40637c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40acd818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40b12da8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b0ce10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b05010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b05010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40a7f100"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40b1f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b25bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40b21e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40b1dae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b246c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b192b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40b206e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b1f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40b1b468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40b1df18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b25010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x407d4a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b224e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b22c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b24d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40b20b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b202b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b25880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40b18880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40b1b8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40b1ae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40b1c7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b21a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40b1f448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40b1c368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40b1fdb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b24010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b216c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40b1aa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40b1a5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b1a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40b18448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x407d3d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40b1bcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b24368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40b1b030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b24a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40b1cbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x407d2600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b21368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b16a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x407d3340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40b4f088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40b4eb10"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b2bda8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b4e5f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b64430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b42a78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40b64b00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b3e738"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40b3e738"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40826100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b63350"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b4f948"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b637f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40b57260"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40b54800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b52010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b57688"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b523d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b89550"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b67af8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b89cb8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b67748"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40b88060"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a33620"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b88880"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40b88d58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40bb4cd8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x40b9d3c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40bad5a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40baa6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40baa6a8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40826100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bc8510"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40532ad8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c541d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c4c1d0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c0f550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c0a108"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c0d288"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c09770"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c0ff10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c0a848"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c0c690"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c09e08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c0d978"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c0ab70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c58df8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c52dd8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c4eca8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c0cbc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c59360"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c53100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c59a18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c54a90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c4e7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40e05ad8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c53100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d09a90"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c54a90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d096d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40d08238"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c4e7a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c735e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c4eca8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d07230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c4eca8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d01260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c4eca8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d08720"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c71a80"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40d08bf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40c74960"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40c6ed08"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40d056a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40c70340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d1a010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d1a010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d15cb0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d29990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d1a490"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d1a490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d16648"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40c97d90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40c89788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40c98bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40c94a70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40d07e48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40d062b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d152b0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d161c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d161c8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d40ae8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d16648"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d40f00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d15cb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d406d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d140d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40db8610"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40db8610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e09170"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d49c88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d140d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40d3f7b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40d65688"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40d65688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40d62e00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40d3fbe8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40d65b98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40d65b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40d5f368"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40d49050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40d640b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40d640b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40d5f880"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40d63760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40d5d390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40d64cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40d5e910"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40d63268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40d5ee40"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40d5c010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403f0268"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40d5c750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366ed0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40e073b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40db2088"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40db2088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e130c0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e0d2f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40db1a58"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40db1a58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40da2010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40dacd78"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40dd1370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40dabb28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40dd0078"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40da8d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40dcd010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40da8d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40dccc08"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40da8d50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40dc9830"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e12d48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40db1a58"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40e279c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e1eb90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40e4d410"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x40e20708"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40e4df00"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40e50ad8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40e4b9e8"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x40e22668"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e4be20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e51ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40e51ed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415a0c90"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e4a518"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ea0818"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40ea0818"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404fcd40"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x40e4a900"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ece350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40ece350"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415ba528"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x40e490b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ecb988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40ecb988"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404fcd40"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e493f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ec6378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x415a0c90"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415977c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40e84580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4159c3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4159c3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e84c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4159ca88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4159ca88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40ea2870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4159b6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4159b6b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4050e308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41597e90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e6d100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41595540"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e6d100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40eac010"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40eac780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x404fc380"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eace28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40eaba50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40ea9190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40ea95c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ea0b30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e9f230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x415ba528"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415b2060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ece9e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x415babc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x415babc0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ecd150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x415b9310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x415b9310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40ecdd48"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x415b9f08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x415b9f08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4050e308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x415b2728"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e6d100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x415b2dc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ecbca0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eca3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x40f06450"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x415a4a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40e20708"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x415f21e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40e22668"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x415a4558"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40e50ad8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40f053c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x415f2980"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x415f15f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40f053c0"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40f53278"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40f53278"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x415e3980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x415e1100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x415db010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x415db010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b05010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x415de5b0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b4f948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x415dfc40"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x415d67f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x415df2e8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x415d7060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x415de9a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x415dd5f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f4e070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c0d288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f4e708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c0d978"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40f88800"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x411c87d8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40f6f4d0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40f8b060"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40f8b060"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x410598e8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40f74de8"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40f8c5b0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40f8c5b0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x4105bf10"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f76190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f8c908"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f8c908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41059250"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40f40210"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40f8def8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40f8def8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4105bb50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f41100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f93db8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f93db8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4105b030"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40f60e68"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40f8a918"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40f8a918"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x411c8cb0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f41b10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f8d848"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f8d848"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4105b770"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40f5e728"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40f88398"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40f88398"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x41057070"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40f66920"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40f8b838"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40f8b838"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x41058078"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40f93688"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4105cb70"/></to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40f93688"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411c7930"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40f93688"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4109ebd0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40f87100"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40f65c40"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40f87530"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40f90928"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40f83988"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x4109db10"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x410496c0"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40f87100"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x4104f640"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41064010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x41064010"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416718f8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x4104eb50"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4107bb18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x4107bb18"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4167b1e0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x41052a98"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41061408"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x4104b100"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x4108cdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Cache" scoped="" ref="0x4108cdc0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x416b67f8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x41053360"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x4109db10"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x411c69f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4109d090"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x411c5170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4109d770"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x411c5488"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x4109db10"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x411bc428"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x410d4300"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411c5dc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x411c4a30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x403e5a90"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x411c30c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x410ab838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x410ab838"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b05010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x411c0328"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x410a7670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x410a7670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b05010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x411be970"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40f87530"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x410477e8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40f87530"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x4104a4c8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x411c8cb0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x411bc030"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x41057070"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x410560f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411b7e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x411b7e20"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b05010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x411be578"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b4f948"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x410473f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b4f948"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x410574b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41125a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41125a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4169f800"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4104be58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41122968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41122968"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404fcd40"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x4104a1b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4111f470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4111f470"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x404fb3f0"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41052330"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41124150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41124150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4169fe98"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x41049150"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x411c87d8"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x41053c98"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x411c8220"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x41047ea0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x403e5a90"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41057b50"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41123410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41123410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4169b250"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41049ae8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x411247e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411247e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4169c580"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41048770"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ec010"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x410d6a28"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b4f948"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410d4698"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411f31f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x411f31f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416f09b8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x410d6300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411ef1f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x411ef1f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404fcd40"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x410d7ad0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x411f3890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411f3890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41743070"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x410d4e18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x411f3f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411f3f28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41743708"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x410d66d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4051c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x410454e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CtpPacket" scoped="" ref="0x416b4578"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40f8b838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4169f800"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41699ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4169fe98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4169c580"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4169b250"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4050e308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x416eb5b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e6d100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416ebc48"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41122c80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411213f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4111f788"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4111fe20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x411bcbb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x411bc780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x416f09b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4173c060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41743070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41743708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x411f1b30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41742330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41742330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4050e308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4173c728"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e6d100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4173cdc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411ef510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411efba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4120e010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c0d288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4120e6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c0d978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4120d330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c0c690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4172c9a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41219990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4172b070"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c0d978"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41219990"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41214068"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x412147d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c0f550"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41214e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c0d978"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41213a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c0d288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x41212190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x412125c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4120b510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40500388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4120bba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="AntiTheftRootC" loc="23:AntiTheftRootC.nc">
      <documentation loc="15:AntiTheftRootC.nc">
        <short>&#10; Root node code for the antitheft demo app, just acts as a bridge with the PC:&#10; - disseminates settings received from the PC&#10; - acts as a root forthe theft alert collection tree&#10; - forwards theft alerts received from the collection tree to the PC&#10;&#10; </short>
        <long>&#10; Root node code for the antitheft demo app, just acts as a bridge with the PC:&#10; - disseminates settings received from the PC&#10; - acts as a root forthe theft alert collection tree&#10; - forwards theft alerts received from the collection tree to the PC&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="48:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2009/09/16 00:51:51 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.8 $ $Date: 2009/10/28 16:18:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x4035cea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.1/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.1/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.22 $ $Date: 2009/10/28 21:09:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a6f848"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="32(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TThree" ref="0x4035cbc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TMicro" ref="0x4033b450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TThree" ref="0x4035cbc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x4035b1d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="39(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="39(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="35(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="39(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="39(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="35(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AntiTheftRootAppC.DisseminatorC" loc="49(AntiTheftRootAppC.DisseminatorC):/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="settings" ref="0x4037f110"/>
            <typename><typedef-ref name="settings_t" ref="0x4037fb08"/></typename>
          </type-tag>
          <value cst="I:42">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP" loc="45(AntiTheftRootAppC.DisseminatorC.DisseminatorP):/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e2cf00"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="43(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="43(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="36(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AntiTheftRootAppC.SettingsReceiver" loc="35(AntiTheftRootAppC.SettingsReceiver):/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:54">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="66:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos-2.1.1/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
            <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos-2.1.1/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010/01/20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4107c480"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos-2.1.1/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f7c498"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f7c720"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos-2.1.1/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010/01/20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4107c480"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos-2.1.1/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009/06/25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f7c498"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f7c720"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="36(CtpP.RoutingBeaconTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="36(CtpP.RouteUpdateTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="34:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="39(CtpP.AMSenderC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="39(CtpP.AMSenderC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="35(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="35(CtpP.AMReceiverC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="36(CtpP.AMSnooperC):/opt/tinyos-2.1.1/tos/system/AMSnooperC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="96(CtpP.Router):/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010/02/04 07:31:46 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="36(CtpP.RetxmitTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="39(CtpP.SendControl):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="39(CtpP.SendControl.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="35(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="35(CtpP.ReceiveControl):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftRootAppC.AlertsForwarder" loc="39(AntiTheftRootAppC.AlertsForwarder):/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP" loc="35(AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AntiTheftRootAppC.ReceiveTheft" loc="35(AntiTheftRootAppC.ReceiveTheft):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40428be8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40428e00" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40425030" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4042bf10" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40434158" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40434380" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40434570" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40478f28" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40481160" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40481388" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40481578" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x406ce478" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406ce478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x406ce698" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x406da428" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x406da428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x406da870" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406da870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x406daa30" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4070bf08" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4070bf08"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40708368" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40708368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4070f488" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4070f488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4070f8e8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4070f8e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4070fb50" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4070fb50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4070e010" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4070e010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4070e278" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4070e700" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4070e700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40728158" loc="41:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40728158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407285b8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407285b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40728820" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40728820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40728c90" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40728c90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40728ef8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x4077eb20" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x4077ed48" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x4079c010" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4079c200" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.1/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x408b2c38" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x408aca88" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a67478" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a67478"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40a6f848" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a6f848"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40a6fa08" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40a8cae0" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a8cae0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40a8cca0" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a75568" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a75568"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40acbb58" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40acbb58"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40acbd38" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e4e7a0" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e7f3a0" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40e7de38" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40e6c5f8" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40ed30b8" loc="35:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40e2cf00" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e2cf00"/></type-var>
        </typedef>
        <constant name="key" ref="0x40ebb120" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40eea010" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40eea010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40f045c0" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40f047d0" loc="44:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40f049b0" loc="45:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40f04bb8" loc="46:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40efe120" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40efe330" loc="44:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40efe510" loc="45:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40efe718" loc="46:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x40efe920" loc="47:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x40f33df0" loc="33:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMReceiverC" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f506f8" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.1/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x4107c480" loc="41:/opt/tinyos-2.1.1/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4107c480"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x4107c6a0" loc="41:/opt/tinyos-2.1.1/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.1/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010/01/20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x41078968" loc="53:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41078968"/></type-var>
        </typedef>
        <constant name="size" ref="0x41078b58" loc="53:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.1/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009/06/25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x41062440" loc="42:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x41062440"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x41062668" loc="42:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x4108dbd8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x41087708" loc="43:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="36:/opt/tinyos-2.1.1/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x41120cb0" loc="36:/opt/tinyos-2.1.1/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="96:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010/02/04 07:31:46 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x41153d50" loc="96:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x41152010" loc="96:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x41152250" loc="96:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x411dc358" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SettingsReceive" ref="0x403c6678" loc="32:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SettingsReceive" scoped="" ref="0x403c6678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403c6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x403cd378" loc="35:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x403cd378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x403cd550"/>
        <function-ref name="setRoot" scoped="" ref="0x403cd630"/>
        <function-ref name="unsetRoot" scoped="" ref="0x403cd710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403872a0" loc="27:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403872a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40387478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x4038da38" loc="28:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x4038da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4038dc10"/>
        <function-ref name="stopDone" scoped="" ref="0x4038dcf0"/>
        <function-ref name="start" scoped="" ref="0x4038ddd0"/>
        <function-ref name="stop" scoped="" ref="0x4038deb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40389180" loc="29:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40389180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40389358"/>
        <function-ref name="stopDone" scoped="" ref="0x40389438"/>
        <function-ref name="start" scoped="" ref="0x40389518"/>
        <function-ref name="stop" scoped="" ref="0x403895f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x403c2980" loc="30:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x403c2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x403c2b58"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x403c2c38"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x403c2d18"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x403c2df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SettingsUpdate" ref="0x403921e8" loc="31:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SettingsUpdate" scoped="" ref="0x403921e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="settings" ref="0x4037f110"/>
            <typename><typedef-ref name="settings_t" ref="0x4037fb08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40392810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionControl" ref="0x403c7a58" loc="33:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionControl" scoped="" ref="0x403c7a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x403c7c30"/>
        <function-ref name="stop" scoped="" ref="0x403c7d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x403c9010" loc="34:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x403c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x403c91e8"/>
        <function-ref name="stop" scoped="" ref="0x403c92c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TheftReceive" ref="0x403c5318" loc="37:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TheftReceive" scoped="" ref="0x403c5318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403c54f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403d5648" loc="39:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403d5648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403d5820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403d5900"/>
        <function-ref name="led1On" scoped="" ref="0x403d59e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403d5ac0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403d5ba0"/>
        <function-ref name="get" scoped="" ref="0x403d5c80"/>
        <function-ref name="led1Off" scoped="" ref="0x403d5d60"/>
        <function-ref name="led2Off" scoped="" ref="0x403ce0f8"/>
        <function-ref name="set" scoped="" ref="0x403d5e40"/>
        <function-ref name="led0On" scoped="" ref="0x403d5f20"/>
        <function-ref name="led2On" scoped="" ref="0x403ce018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertsForward" ref="0x403d3b28" loc="36:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertsForward" scoped="" ref="0x403d3b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403d3d00"/>
        <function-ref name="getPayload" scoped="" ref="0x403d3de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403d3ec0"/>
        <function-ref name="cancel" scoped="" ref="0x403c5010"/>
        <function-ref name="sendDone" scoped="" ref="0x403c50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x403e4900" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403e4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40383c88" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40383c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40383e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403f09c8" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403f09c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f0ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403eb978" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403eb978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ebb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403f0268" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403f0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403f0440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403f0520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403f0600"/>
        <function-ref name="actualMicro" scoped="" ref="0x403f06e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403f07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403ee088" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403ee088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ee260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403eac60" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403eac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403eae38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403ee490" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403ee490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ee668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403e9bc0" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403e9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e9d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403e97f0" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403e97f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e99c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403fa748" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403fa748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fa920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40400cc0" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40400cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400e98"/>
        <function-ref name="isInput" scoped="" ref="0x403fa010"/>
        <function-ref name="toggle" scoped="" ref="0x403fa0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403fa1d0"/>
        <function-ref name="get" scoped="" ref="0x403fa2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fa390"/>
        <function-ref name="set" scoped="" ref="0x403fa470"/>
        <function-ref name="clr" scoped="" ref="0x403fa550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403f3760" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403f3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f3938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404222f0" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404226c8"/>
        <function-ref name="isInput" scoped="" ref="0x404227a8"/>
        <function-ref name="toggle" scoped="" ref="0x40422888"/>
        <function-ref name="isOutput" scoped="" ref="0x40422968"/>
        <function-ref name="get" scoped="" ref="0x40422a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422b28"/>
        <function-ref name="set" scoped="" ref="0x40422c08"/>
        <function-ref name="clr" scoped="" ref="0x40422ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40414830" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40414830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414a08"/>
        <function-ref name="isInput" scoped="" ref="0x40414ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40414bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40414ca8"/>
        <function-ref name="get" scoped="" ref="0x40414d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414e68"/>
        <function-ref name="set" scoped="" ref="0x40413010"/>
        <function-ref name="clr" scoped="" ref="0x404130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40418ea8" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40418ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404170c0"/>
        <function-ref name="isInput" scoped="" ref="0x404171a0"/>
        <function-ref name="toggle" scoped="" ref="0x40417280"/>
        <function-ref name="isOutput" scoped="" ref="0x40417360"/>
        <function-ref name="get" scoped="" ref="0x40417440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417520"/>
        <function-ref name="set" scoped="" ref="0x40417600"/>
        <function-ref name="clr" scoped="" ref="0x404176e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x4041c0a0" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x4041c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c278"/>
        <function-ref name="isInput" scoped="" ref="0x4041c358"/>
        <function-ref name="toggle" scoped="" ref="0x4041c438"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c518"/>
        <function-ref name="get" scoped="" ref="0x4041c5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c6d8"/>
        <function-ref name="set" scoped="" ref="0x4041c7b8"/>
        <function-ref name="clr" scoped="" ref="0x4041c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404034b0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404034b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403688"/>
        <function-ref name="isInput" scoped="" ref="0x40403768"/>
        <function-ref name="toggle" scoped="" ref="0x40403848"/>
        <function-ref name="isOutput" scoped="" ref="0x40403928"/>
        <function-ref name="get" scoped="" ref="0x40403a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40403ae8"/>
        <function-ref name="set" scoped="" ref="0x40403bc8"/>
        <function-ref name="clr" scoped="" ref="0x40403ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4041ec08" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4041ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4041eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4041d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d0f0"/>
        <function-ref name="get" scoped="" ref="0x4041d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d2b0"/>
        <function-ref name="set" scoped="" ref="0x4041d390"/>
        <function-ref name="clr" scoped="" ref="0x4041d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404018e0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404018e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40401ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40401b98"/>
        <function-ref name="toggle" scoped="" ref="0x40401c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40401d58"/>
        <function-ref name="get" scoped="" ref="0x40401e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401f18"/>
        <function-ref name="set" scoped="" ref="0x4040a010"/>
        <function-ref name="clr" scoped="" ref="0x4040a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4040e0a0" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4040e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e278"/>
        <function-ref name="isInput" scoped="" ref="0x4040e358"/>
        <function-ref name="toggle" scoped="" ref="0x4040e438"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e518"/>
        <function-ref name="get" scoped="" ref="0x4040e5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e6d8"/>
        <function-ref name="set" scoped="" ref="0x4040e7b8"/>
        <function-ref name="clr" scoped="" ref="0x4040e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40412750" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40412750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412928"/>
        <function-ref name="isInput" scoped="" ref="0x40412a08"/>
        <function-ref name="toggle" scoped="" ref="0x40412ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40412bc8"/>
        <function-ref name="get" scoped="" ref="0x40412ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412d88"/>
        <function-ref name="set" scoped="" ref="0x40412e68"/>
        <function-ref name="clr" scoped="" ref="0x40411010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40416ce8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40416ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40415010"/>
        <function-ref name="toggle" scoped="" ref="0x404150f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404151d0"/>
        <function-ref name="get" scoped="" ref="0x404152b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415390"/>
        <function-ref name="set" scoped="" ref="0x40415470"/>
        <function-ref name="clr" scoped="" ref="0x40415550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403fc138" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403fc138"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fc310"/>
        <function-ref name="isInput" scoped="" ref="0x403fc3f0"/>
        <function-ref name="toggle" scoped="" ref="0x403fc4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403fc5b0"/>
        <function-ref name="get" scoped="" ref="0x403fc690"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fc770"/>
        <function-ref name="set" scoped="" ref="0x403fc850"/>
        <function-ref name="clr" scoped="" ref="0x403fc930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40409750" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40409750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409928"/>
        <function-ref name="isInput" scoped="" ref="0x40409a08"/>
        <function-ref name="toggle" scoped="" ref="0x40409ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40409bc8"/>
        <function-ref name="get" scoped="" ref="0x40409ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409d88"/>
        <function-ref name="set" scoped="" ref="0x40409e68"/>
        <function-ref name="clr" scoped="" ref="0x40408010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4040dea8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4040dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4040c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4040c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c360"/>
        <function-ref name="get" scoped="" ref="0x4040c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c520"/>
        <function-ref name="set" scoped="" ref="0x4040c600"/>
        <function-ref name="clr" scoped="" ref="0x4040c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40410670" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40410670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410848"/>
        <function-ref name="isInput" scoped="" ref="0x40410928"/>
        <function-ref name="toggle" scoped="" ref="0x40410a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40410ae8"/>
        <function-ref name="get" scoped="" ref="0x40410bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410ca8"/>
        <function-ref name="set" scoped="" ref="0x40410d88"/>
        <function-ref name="clr" scoped="" ref="0x40410e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4041bea8" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4041bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404230c0"/>
        <function-ref name="isInput" scoped="" ref="0x404231a0"/>
        <function-ref name="toggle" scoped="" ref="0x40423280"/>
        <function-ref name="isOutput" scoped="" ref="0x40423360"/>
        <function-ref name="get" scoped="" ref="0x40423440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423520"/>
        <function-ref name="set" scoped="" ref="0x40423600"/>
        <function-ref name="clr" scoped="" ref="0x404236e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404203d0" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404203d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404205a8"/>
        <function-ref name="isInput" scoped="" ref="0x40420688"/>
        <function-ref name="toggle" scoped="" ref="0x40420768"/>
        <function-ref name="isOutput" scoped="" ref="0x40420848"/>
        <function-ref name="get" scoped="" ref="0x40420928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420a08"/>
        <function-ref name="set" scoped="" ref="0x40420ae8"/>
        <function-ref name="clr" scoped="" ref="0x40420bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40419a98" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40419a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419c70"/>
        <function-ref name="isInput" scoped="" ref="0x40419d50"/>
        <function-ref name="toggle" scoped="" ref="0x40419e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40419f10"/>
        <function-ref name="get" scoped="" ref="0x40418010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404180f0"/>
        <function-ref name="set" scoped="" ref="0x404181d0"/>
        <function-ref name="clr" scoped="" ref="0x404182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40404010" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40404010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404041e8"/>
        <function-ref name="isInput" scoped="" ref="0x404042c8"/>
        <function-ref name="toggle" scoped="" ref="0x404043a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40404488"/>
        <function-ref name="get" scoped="" ref="0x40404568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404648"/>
        <function-ref name="set" scoped="" ref="0x40404728"/>
        <function-ref name="clr" scoped="" ref="0x40404808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40407750" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40407750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407928"/>
        <function-ref name="isInput" scoped="" ref="0x40407a08"/>
        <function-ref name="toggle" scoped="" ref="0x40407ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40407bc8"/>
        <function-ref name="get" scoped="" ref="0x40407ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407d88"/>
        <function-ref name="set" scoped="" ref="0x40407e68"/>
        <function-ref name="clr" scoped="" ref="0x40406010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40422ee8" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40422ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404210e0"/>
        <function-ref name="isInput" scoped="" ref="0x404211c0"/>
        <function-ref name="toggle" scoped="" ref="0x404212a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40421380"/>
        <function-ref name="get" scoped="" ref="0x40421460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421540"/>
        <function-ref name="set" scoped="" ref="0x40421620"/>
        <function-ref name="clr" scoped="" ref="0x40421700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40406c08" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40406c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406de0"/>
        <function-ref name="isInput" scoped="" ref="0x40406ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4040f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f0f0"/>
        <function-ref name="get" scoped="" ref="0x4040f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f2b0"/>
        <function-ref name="set" scoped="" ref="0x4040f390"/>
        <function-ref name="clr" scoped="" ref="0x4040f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404132f0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404134c8"/>
        <function-ref name="isInput" scoped="" ref="0x404135a8"/>
        <function-ref name="toggle" scoped="" ref="0x40413688"/>
        <function-ref name="isOutput" scoped="" ref="0x40413768"/>
        <function-ref name="get" scoped="" ref="0x40413848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413928"/>
        <function-ref name="set" scoped="" ref="0x40413a08"/>
        <function-ref name="clr" scoped="" ref="0x40413ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404178e0" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404178e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40417b98"/>
        <function-ref name="toggle" scoped="" ref="0x40417c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40417d58"/>
        <function-ref name="get" scoped="" ref="0x40417e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417f18"/>
        <function-ref name="set" scoped="" ref="0x40416010"/>
        <function-ref name="clr" scoped="" ref="0x404160f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x4041ca98" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x4041ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041cc70"/>
        <function-ref name="isInput" scoped="" ref="0x4041cd50"/>
        <function-ref name="toggle" scoped="" ref="0x4041ce30"/>
        <function-ref name="isOutput" scoped="" ref="0x4041cf10"/>
        <function-ref name="get" scoped="" ref="0x4041b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b0f0"/>
        <function-ref name="set" scoped="" ref="0x4041b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4041b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40403ea8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40403ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404010c0"/>
        <function-ref name="isInput" scoped="" ref="0x404011a0"/>
        <function-ref name="toggle" scoped="" ref="0x40401280"/>
        <function-ref name="isOutput" scoped="" ref="0x40401360"/>
        <function-ref name="get" scoped="" ref="0x40401440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401520"/>
        <function-ref name="set" scoped="" ref="0x40401600"/>
        <function-ref name="clr" scoped="" ref="0x404016e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4040a2f0" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4040a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a768"/>
        <function-ref name="get" scoped="" ref="0x4040a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040a928"/>
        <function-ref name="set" scoped="" ref="0x4040aa08"/>
        <function-ref name="clr" scoped="" ref="0x4040aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4040ea98" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4040ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040ec70"/>
        <function-ref name="isInput" scoped="" ref="0x4040ed50"/>
        <function-ref name="toggle" scoped="" ref="0x4040ee30"/>
        <function-ref name="isOutput" scoped="" ref="0x4040ef10"/>
        <function-ref name="get" scoped="" ref="0x4040d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d0f0"/>
        <function-ref name="set" scoped="" ref="0x4040d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4040d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40411210" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40411210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404113e8"/>
        <function-ref name="isInput" scoped="" ref="0x404114c8"/>
        <function-ref name="toggle" scoped="" ref="0x404115a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40411688"/>
        <function-ref name="get" scoped="" ref="0x40411768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411848"/>
        <function-ref name="set" scoped="" ref="0x40411928"/>
        <function-ref name="clr" scoped="" ref="0x40411a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40415750" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40415750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415928"/>
        <function-ref name="isInput" scoped="" ref="0x40415a08"/>
        <function-ref name="toggle" scoped="" ref="0x40415ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40415bc8"/>
        <function-ref name="get" scoped="" ref="0x40415ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415d88"/>
        <function-ref name="set" scoped="" ref="0x40415e68"/>
        <function-ref name="clr" scoped="" ref="0x4041e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403fcb30" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403fcb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fcd08"/>
        <function-ref name="isInput" scoped="" ref="0x403fcde8"/>
        <function-ref name="toggle" scoped="" ref="0x403fcec8"/>
        <function-ref name="isOutput" scoped="" ref="0x40405010"/>
        <function-ref name="get" scoped="" ref="0x404050f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404051d0"/>
        <function-ref name="set" scoped="" ref="0x404052b0"/>
        <function-ref name="clr" scoped="" ref="0x40405390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40408210" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40408210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408468"/>
        <function-ref name="isInput" scoped="" ref="0x40408548"/>
        <function-ref name="toggle" scoped="" ref="0x40408628"/>
        <function-ref name="isOutput" scoped="" ref="0x40408708"/>
        <function-ref name="get" scoped="" ref="0x404087e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404088c8"/>
        <function-ref name="set" scoped="" ref="0x404089a8"/>
        <function-ref name="clr" scoped="" ref="0x40408a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4040c8e0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4040c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040cab8"/>
        <function-ref name="isInput" scoped="" ref="0x4040cb98"/>
        <function-ref name="toggle" scoped="" ref="0x4040cc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4040cd58"/>
        <function-ref name="get" scoped="" ref="0x4040ce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040cf18"/>
        <function-ref name="set" scoped="" ref="0x4040b010"/>
        <function-ref name="clr" scoped="" ref="0x4040b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404238e0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404238e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40423b98"/>
        <function-ref name="toggle" scoped="" ref="0x40423c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40423d58"/>
        <function-ref name="get" scoped="" ref="0x40423e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423f18"/>
        <function-ref name="set" scoped="" ref="0x40422010"/>
        <function-ref name="clr" scoped="" ref="0x404220f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4040bce8" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4040bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414010"/>
        <function-ref name="isInput" scoped="" ref="0x404140f0"/>
        <function-ref name="toggle" scoped="" ref="0x404141d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404142b0"/>
        <function-ref name="get" scoped="" ref="0x40414390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414470"/>
        <function-ref name="set" scoped="" ref="0x40414550"/>
        <function-ref name="clr" scoped="" ref="0x40414630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404184b0" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404184b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418688"/>
        <function-ref name="isInput" scoped="" ref="0x40418768"/>
        <function-ref name="toggle" scoped="" ref="0x40418848"/>
        <function-ref name="isOutput" scoped="" ref="0x40418928"/>
        <function-ref name="get" scoped="" ref="0x40418a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418ae8"/>
        <function-ref name="set" scoped="" ref="0x40418bc8"/>
        <function-ref name="clr" scoped="" ref="0x40418ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x4041d670" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x4041d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d848"/>
        <function-ref name="isInput" scoped="" ref="0x4041d928"/>
        <function-ref name="toggle" scoped="" ref="0x4041da08"/>
        <function-ref name="isOutput" scoped="" ref="0x4041dae8"/>
        <function-ref name="get" scoped="" ref="0x4041dbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041dca8"/>
        <function-ref name="set" scoped="" ref="0x4041dd88"/>
        <function-ref name="clr" scoped="" ref="0x4041de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40420dc8" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40420dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f010"/>
        <function-ref name="isInput" scoped="" ref="0x4041f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4041f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f2b0"/>
        <function-ref name="get" scoped="" ref="0x4041f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f470"/>
        <function-ref name="set" scoped="" ref="0x4041f550"/>
        <function-ref name="clr" scoped="" ref="0x4041f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40404a08" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40404a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404be0"/>
        <function-ref name="isInput" scoped="" ref="0x40404cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40404da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40404e80"/>
        <function-ref name="get" scoped="" ref="0x40403010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404030f0"/>
        <function-ref name="set" scoped="" ref="0x404031d0"/>
        <function-ref name="clr" scoped="" ref="0x404032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40406210" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40406210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404063e8"/>
        <function-ref name="isInput" scoped="" ref="0x404064c8"/>
        <function-ref name="toggle" scoped="" ref="0x404065a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40406688"/>
        <function-ref name="get" scoped="" ref="0x40406768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406848"/>
        <function-ref name="set" scoped="" ref="0x40406928"/>
        <function-ref name="clr" scoped="" ref="0x40406a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4041e210" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4041e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4041e4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4041e5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e688"/>
        <function-ref name="get" scoped="" ref="0x4041e768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e848"/>
        <function-ref name="set" scoped="" ref="0x4041e928"/>
        <function-ref name="clr" scoped="" ref="0x4041ea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4040f670" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4040f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f848"/>
        <function-ref name="isInput" scoped="" ref="0x4040f928"/>
        <function-ref name="toggle" scoped="" ref="0x4040fa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4040fae8"/>
        <function-ref name="get" scoped="" ref="0x4040fbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040fca8"/>
        <function-ref name="set" scoped="" ref="0x4040fd88"/>
        <function-ref name="clr" scoped="" ref="0x4040fe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40413ce8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40413ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40412010"/>
        <function-ref name="toggle" scoped="" ref="0x404120f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404121d0"/>
        <function-ref name="get" scoped="" ref="0x404122b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412390"/>
        <function-ref name="set" scoped="" ref="0x40412470"/>
        <function-ref name="clr" scoped="" ref="0x40412550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404162f0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404164c8"/>
        <function-ref name="isInput" scoped="" ref="0x404165a8"/>
        <function-ref name="toggle" scoped="" ref="0x40416688"/>
        <function-ref name="isOutput" scoped="" ref="0x40416768"/>
        <function-ref name="get" scoped="" ref="0x40416848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40416928"/>
        <function-ref name="set" scoped="" ref="0x40416a08"/>
        <function-ref name="clr" scoped="" ref="0x40416ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4041b4b0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4041b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b688"/>
        <function-ref name="isInput" scoped="" ref="0x4041b768"/>
        <function-ref name="toggle" scoped="" ref="0x4041b848"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b928"/>
        <function-ref name="get" scoped="" ref="0x4041ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041bae8"/>
        <function-ref name="set" scoped="" ref="0x4041bbc8"/>
        <function-ref name="clr" scoped="" ref="0x4041bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403f2730" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403f2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2908"/>
        <function-ref name="isInput" scoped="" ref="0x403f29e8"/>
        <function-ref name="toggle" scoped="" ref="0x403f2ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2ba8"/>
        <function-ref name="get" scoped="" ref="0x403f2c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f2d68"/>
        <function-ref name="set" scoped="" ref="0x403f2e48"/>
        <function-ref name="clr" scoped="" ref="0x403f2f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4040ace8" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4040ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040aec0"/>
        <function-ref name="isInput" scoped="" ref="0x40409010"/>
        <function-ref name="toggle" scoped="" ref="0x404090f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404091d0"/>
        <function-ref name="get" scoped="" ref="0x404092b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409390"/>
        <function-ref name="set" scoped="" ref="0x40409470"/>
        <function-ref name="clr" scoped="" ref="0x40409550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4040d4b0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4040d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d688"/>
        <function-ref name="isInput" scoped="" ref="0x4040d768"/>
        <function-ref name="toggle" scoped="" ref="0x4040d848"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d928"/>
        <function-ref name="get" scoped="" ref="0x4040da08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040dae8"/>
        <function-ref name="set" scoped="" ref="0x4040dbc8"/>
        <function-ref name="clr" scoped="" ref="0x4040dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40411c08" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40411c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411de0"/>
        <function-ref name="isInput" scoped="" ref="0x40411ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40410010"/>
        <function-ref name="isOutput" scoped="" ref="0x404100f0"/>
        <function-ref name="get" scoped="" ref="0x404101d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404102b0"/>
        <function-ref name="set" scoped="" ref="0x40410390"/>
        <function-ref name="clr" scoped="" ref="0x40410470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40421900" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40421900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421ad8"/>
        <function-ref name="isInput" scoped="" ref="0x40421bb8"/>
        <function-ref name="toggle" scoped="" ref="0x40421c98"/>
        <function-ref name="isOutput" scoped="" ref="0x40421d78"/>
        <function-ref name="get" scoped="" ref="0x40421e58"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420010"/>
        <function-ref name="set" scoped="" ref="0x404200f0"/>
        <function-ref name="clr" scoped="" ref="0x404201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404190a0" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419278"/>
        <function-ref name="isInput" scoped="" ref="0x40419358"/>
        <function-ref name="toggle" scoped="" ref="0x40419438"/>
        <function-ref name="isOutput" scoped="" ref="0x40419518"/>
        <function-ref name="get" scoped="" ref="0x404195f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404196d8"/>
        <function-ref name="set" scoped="" ref="0x404197b8"/>
        <function-ref name="clr" scoped="" ref="0x40419898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4040b2f0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4040b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040b4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040b5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040b688"/>
        <function-ref name="isOutput" scoped="" ref="0x4040b768"/>
        <function-ref name="get" scoped="" ref="0x4040b848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040b928"/>
        <function-ref name="set" scoped="" ref="0x4040ba08"/>
        <function-ref name="clr" scoped="" ref="0x4040bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40405590" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40405590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405768"/>
        <function-ref name="isInput" scoped="" ref="0x40405848"/>
        <function-ref name="toggle" scoped="" ref="0x40405928"/>
        <function-ref name="isOutput" scoped="" ref="0x40405a08"/>
        <function-ref name="get" scoped="" ref="0x40405ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405bc8"/>
        <function-ref name="set" scoped="" ref="0x40405ca8"/>
        <function-ref name="clr" scoped="" ref="0x40405d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40408c88" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40408c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408e60"/>
        <function-ref name="isInput" scoped="" ref="0x40407010"/>
        <function-ref name="toggle" scoped="" ref="0x404070f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404071d0"/>
        <function-ref name="get" scoped="" ref="0x404072b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407390"/>
        <function-ref name="set" scoped="" ref="0x40407470"/>
        <function-ref name="clr" scoped="" ref="0x40407550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40447330" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40447330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447508"/>
        <function-ref name="isInput" scoped="" ref="0x404475e8"/>
        <function-ref name="toggle" scoped="" ref="0x404476c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404477a8"/>
        <function-ref name="get" scoped="" ref="0x40447888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447968"/>
        <function-ref name="set" scoped="" ref="0x40447a48"/>
        <function-ref name="clr" scoped="" ref="0x40447b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40451030" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40451030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451208"/>
        <function-ref name="isInput" scoped="" ref="0x404512e8"/>
        <function-ref name="toggle" scoped="" ref="0x404513c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404514a8"/>
        <function-ref name="get" scoped="" ref="0x40451588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451668"/>
        <function-ref name="set" scoped="" ref="0x40451748"/>
        <function-ref name="clr" scoped="" ref="0x40451828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40448010" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40448010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404481e8"/>
        <function-ref name="isInput" scoped="" ref="0x404482c8"/>
        <function-ref name="toggle" scoped="" ref="0x404483a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40448488"/>
        <function-ref name="get" scoped="" ref="0x40448568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448648"/>
        <function-ref name="set" scoped="" ref="0x40448728"/>
        <function-ref name="clr" scoped="" ref="0x40448808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40447c88" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40447c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447e60"/>
        <function-ref name="isInput" scoped="" ref="0x40452010"/>
        <function-ref name="toggle" scoped="" ref="0x404520f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404521d0"/>
        <function-ref name="get" scoped="" ref="0x404522b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452390"/>
        <function-ref name="set" scoped="" ref="0x40452470"/>
        <function-ref name="clr" scoped="" ref="0x40452550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40451988" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40451988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451b60"/>
        <function-ref name="isInput" scoped="" ref="0x40451c40"/>
        <function-ref name="toggle" scoped="" ref="0x40451d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40451e00"/>
        <function-ref name="get" scoped="" ref="0x40451ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450010"/>
        <function-ref name="set" scoped="" ref="0x404500f0"/>
        <function-ref name="clr" scoped="" ref="0x404501d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40448968" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40448968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448b40"/>
        <function-ref name="isInput" scoped="" ref="0x40448c20"/>
        <function-ref name="toggle" scoped="" ref="0x40448d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40448de0"/>
        <function-ref name="get" scoped="" ref="0x40448ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447010"/>
        <function-ref name="set" scoped="" ref="0x404470f0"/>
        <function-ref name="clr" scoped="" ref="0x404471d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404526b0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404526b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452888"/>
        <function-ref name="isInput" scoped="" ref="0x40452968"/>
        <function-ref name="toggle" scoped="" ref="0x40452a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40452b28"/>
        <function-ref name="get" scoped="" ref="0x40452c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452ce8"/>
        <function-ref name="set" scoped="" ref="0x40452dc8"/>
        <function-ref name="clr" scoped="" ref="0x40452ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40450330" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40450330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40450508"/>
        <function-ref name="isInput" scoped="" ref="0x404505e8"/>
        <function-ref name="toggle" scoped="" ref="0x404506c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404507a8"/>
        <function-ref name="get" scoped="" ref="0x40450888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450968"/>
        <function-ref name="set" scoped="" ref="0x40450a48"/>
        <function-ref name="clr" scoped="" ref="0x40450b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412376c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41237898"/>
        <function-ref name="isInput" scoped="" ref="0x41237978"/>
        <function-ref name="toggle" scoped="" ref="0x41237a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41237b38"/>
        <function-ref name="get" scoped="" ref="0x41237c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41237cf8"/>
        <function-ref name="set" scoped="" ref="0x41237dd8"/>
        <function-ref name="clr" scoped="" ref="0x41237eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412350b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412350b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41235288"/>
        <function-ref name="isInput" scoped="" ref="0x41235368"/>
        <function-ref name="toggle" scoped="" ref="0x41235448"/>
        <function-ref name="isOutput" scoped="" ref="0x41235528"/>
        <function-ref name="get" scoped="" ref="0x41235608"/>
        <function-ref name="makeOutput" scoped="" ref="0x412356e8"/>
        <function-ref name="set" scoped="" ref="0x412357c8"/>
        <function-ref name="clr" scoped="" ref="0x412358a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41234a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41234a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41234c60"/>
        <function-ref name="isInput" scoped="" ref="0x41234d40"/>
        <function-ref name="toggle" scoped="" ref="0x41234e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41234f00"/>
        <function-ref name="get" scoped="" ref="0x41233010"/>
        <function-ref name="makeOutput" scoped="" ref="0x412330f0"/>
        <function-ref name="set" scoped="" ref="0x412331d0"/>
        <function-ref name="clr" scoped="" ref="0x412332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41232538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41232538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41232710"/>
        <function-ref name="isInput" scoped="" ref="0x412327f0"/>
        <function-ref name="toggle" scoped="" ref="0x412328d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412329b0"/>
        <function-ref name="get" scoped="" ref="0x41232a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41232b70"/>
        <function-ref name="set" scoped="" ref="0x41232c50"/>
        <function-ref name="clr" scoped="" ref="0x41232d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41230010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41230010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412301e8"/>
        <function-ref name="isInput" scoped="" ref="0x412302c8"/>
        <function-ref name="toggle" scoped="" ref="0x412303a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41230488"/>
        <function-ref name="get" scoped="" ref="0x41230568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41230648"/>
        <function-ref name="set" scoped="" ref="0x41230728"/>
        <function-ref name="clr" scoped="" ref="0x41230808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4122f9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4122f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4122fca0"/>
        <function-ref name="toggle" scoped="" ref="0x4122fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4122fe60"/>
        <function-ref name="get" scoped="" ref="0x4122e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122e0f0"/>
        <function-ref name="set" scoped="" ref="0x4122e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4122e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4122d538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4122d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122d710"/>
        <function-ref name="isInput" scoped="" ref="0x4122d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4122d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4122d9b0"/>
        <function-ref name="get" scoped="" ref="0x4122da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122db70"/>
        <function-ref name="set" scoped="" ref="0x4122dc50"/>
        <function-ref name="clr" scoped="" ref="0x4122dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4122b010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4122b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4122b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4122b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4122b488"/>
        <function-ref name="get" scoped="" ref="0x4122b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122b648"/>
        <function-ref name="set" scoped="" ref="0x4122b728"/>
        <function-ref name="clr" scoped="" ref="0x4122b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40458ba8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40458ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40458d80"/>
        <function-ref name="isInput" scoped="" ref="0x40458e60"/>
        <function-ref name="toggle" scoped="" ref="0x40456010"/>
        <function-ref name="isOutput" scoped="" ref="0x404560f0"/>
        <function-ref name="get" scoped="" ref="0x404561d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404562b0"/>
        <function-ref name="set" scoped="" ref="0x40456390"/>
        <function-ref name="clr" scoped="" ref="0x40456470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40455890" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40455890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40455a68"/>
        <function-ref name="isInput" scoped="" ref="0x40455b48"/>
        <function-ref name="toggle" scoped="" ref="0x40455c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40455d08"/>
        <function-ref name="get" scoped="" ref="0x40455de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40455ec8"/>
        <function-ref name="set" scoped="" ref="0x40454010"/>
        <function-ref name="clr" scoped="" ref="0x404540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4044d888" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4044d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044da60"/>
        <function-ref name="isInput" scoped="" ref="0x4044db40"/>
        <function-ref name="toggle" scoped="" ref="0x4044dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x4044dd00"/>
        <function-ref name="get" scoped="" ref="0x4044dde0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044dec0"/>
        <function-ref name="set" scoped="" ref="0x40458010"/>
        <function-ref name="clr" scoped="" ref="0x404580f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404565d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404565d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404567a8"/>
        <function-ref name="isInput" scoped="" ref="0x40456888"/>
        <function-ref name="toggle" scoped="" ref="0x40456968"/>
        <function-ref name="isOutput" scoped="" ref="0x40456a48"/>
        <function-ref name="get" scoped="" ref="0x40456b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40456c08"/>
        <function-ref name="set" scoped="" ref="0x40456ce8"/>
        <function-ref name="clr" scoped="" ref="0x40456dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40454250" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40454250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454428"/>
        <function-ref name="isInput" scoped="" ref="0x40454508"/>
        <function-ref name="toggle" scoped="" ref="0x404545e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404546c8"/>
        <function-ref name="get" scoped="" ref="0x404547a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40454888"/>
        <function-ref name="set" scoped="" ref="0x40454968"/>
        <function-ref name="clr" scoped="" ref="0x40454a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40458250" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40458250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40458428"/>
        <function-ref name="isInput" scoped="" ref="0x40458508"/>
        <function-ref name="toggle" scoped="" ref="0x404585e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404586c8"/>
        <function-ref name="get" scoped="" ref="0x404587a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458888"/>
        <function-ref name="set" scoped="" ref="0x40458968"/>
        <function-ref name="clr" scoped="" ref="0x40458a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40456f28" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40456f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40455110"/>
        <function-ref name="isInput" scoped="" ref="0x404551f0"/>
        <function-ref name="toggle" scoped="" ref="0x404552d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404553b0"/>
        <function-ref name="get" scoped="" ref="0x40455490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40455570"/>
        <function-ref name="set" scoped="" ref="0x40455650"/>
        <function-ref name="clr" scoped="" ref="0x40455730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40454ba8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40454ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454d80"/>
        <function-ref name="isInput" scoped="" ref="0x40454e60"/>
        <function-ref name="toggle" scoped="" ref="0x40453010"/>
        <function-ref name="isOutput" scoped="" ref="0x404530f0"/>
        <function-ref name="get" scoped="" ref="0x404531d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404532b0"/>
        <function-ref name="set" scoped="" ref="0x40453390"/>
        <function-ref name="clr" scoped="" ref="0x40453470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41242418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41242418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412425f0"/>
        <function-ref name="isInput" scoped="" ref="0x412426d0"/>
        <function-ref name="toggle" scoped="" ref="0x412427b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41242890"/>
        <function-ref name="get" scoped="" ref="0x41242970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41242a50"/>
        <function-ref name="set" scoped="" ref="0x41242b30"/>
        <function-ref name="clr" scoped="" ref="0x41242c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41241de0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41241de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41283010"/>
        <function-ref name="isInput" scoped="" ref="0x412830f0"/>
        <function-ref name="toggle" scoped="" ref="0x412831d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412832b0"/>
        <function-ref name="get" scoped="" ref="0x41283390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41283470"/>
        <function-ref name="set" scoped="" ref="0x41283550"/>
        <function-ref name="clr" scoped="" ref="0x41283630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412827f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412827f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412829d0"/>
        <function-ref name="isInput" scoped="" ref="0x41282ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41282b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41282c70"/>
        <function-ref name="get" scoped="" ref="0x41282d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41282e30"/>
        <function-ref name="set" scoped="" ref="0x41282f10"/>
        <function-ref name="clr" scoped="" ref="0x41281010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41280228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41280228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41280400"/>
        <function-ref name="isInput" scoped="" ref="0x412804e0"/>
        <function-ref name="toggle" scoped="" ref="0x412805c0"/>
        <function-ref name="isOutput" scoped="" ref="0x412806a0"/>
        <function-ref name="get" scoped="" ref="0x41280780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41280860"/>
        <function-ref name="set" scoped="" ref="0x41280940"/>
        <function-ref name="clr" scoped="" ref="0x41280a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127fc08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4127fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4127e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4127e0f0"/>
        <function-ref name="get" scoped="" ref="0x4127e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127e2b0"/>
        <function-ref name="set" scoped="" ref="0x4127e390"/>
        <function-ref name="clr" scoped="" ref="0x4127e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127d6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127d898"/>
        <function-ref name="isInput" scoped="" ref="0x4127d978"/>
        <function-ref name="toggle" scoped="" ref="0x4127da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4127db38"/>
        <function-ref name="get" scoped="" ref="0x4127dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127dcf8"/>
        <function-ref name="set" scoped="" ref="0x4127ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4127deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127b0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127b288"/>
        <function-ref name="isInput" scoped="" ref="0x4127b368"/>
        <function-ref name="toggle" scoped="" ref="0x4127b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4127b528"/>
        <function-ref name="get" scoped="" ref="0x4127b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127b6e8"/>
        <function-ref name="set" scoped="" ref="0x4127b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4127b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127aa88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127ac60"/>
        <function-ref name="isInput" scoped="" ref="0x4127ad40"/>
        <function-ref name="toggle" scoped="" ref="0x4127ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x4127af00"/>
        <function-ref name="get" scoped="" ref="0x41279010"/>
        <function-ref name="makeOutput" scoped="" ref="0x412790f0"/>
        <function-ref name="set" scoped="" ref="0x412791d0"/>
        <function-ref name="clr" scoped="" ref="0x412792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4045b4f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4045b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4045b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4045b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b968"/>
        <function-ref name="get" scoped="" ref="0x4045ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045bb28"/>
        <function-ref name="set" scoped="" ref="0x4045bc08"/>
        <function-ref name="clr" scoped="" ref="0x4045bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40459170" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40459170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459348"/>
        <function-ref name="isInput" scoped="" ref="0x40459428"/>
        <function-ref name="toggle" scoped="" ref="0x40459508"/>
        <function-ref name="isOutput" scoped="" ref="0x404595e8"/>
        <function-ref name="get" scoped="" ref="0x404596c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404597a8"/>
        <function-ref name="set" scoped="" ref="0x40459888"/>
        <function-ref name="clr" scoped="" ref="0x40459968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4045c228" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4045c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c400"/>
        <function-ref name="isInput" scoped="" ref="0x4045c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4045c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c6a0"/>
        <function-ref name="get" scoped="" ref="0x4045c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c860"/>
        <function-ref name="set" scoped="" ref="0x4045c940"/>
        <function-ref name="clr" scoped="" ref="0x4045ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4045be48" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4045be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a050"/>
        <function-ref name="isInput" scoped="" ref="0x4045a130"/>
        <function-ref name="toggle" scoped="" ref="0x4045a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a2f0"/>
        <function-ref name="get" scoped="" ref="0x4045a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a4b0"/>
        <function-ref name="set" scoped="" ref="0x4045a590"/>
        <function-ref name="clr" scoped="" ref="0x4045a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40459ac8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40459ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40459d80"/>
        <function-ref name="toggle" scoped="" ref="0x40459e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40464010"/>
        <function-ref name="get" scoped="" ref="0x404640f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404641d0"/>
        <function-ref name="set" scoped="" ref="0x404642b0"/>
        <function-ref name="clr" scoped="" ref="0x40464390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4045cb80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4045cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045cd58"/>
        <function-ref name="isInput" scoped="" ref="0x4045ce38"/>
        <function-ref name="toggle" scoped="" ref="0x4045cf18"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b010"/>
        <function-ref name="get" scoped="" ref="0x4045b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045b1d0"/>
        <function-ref name="set" scoped="" ref="0x4045b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4045b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4045a7d0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4045a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4045aa88"/>
        <function-ref name="toggle" scoped="" ref="0x4045ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ac48"/>
        <function-ref name="get" scoped="" ref="0x4045ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045ae08"/>
        <function-ref name="set" scoped="" ref="0x4045aee8"/>
        <function-ref name="clr" scoped="" ref="0x40459010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404644f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404644f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404646c8"/>
        <function-ref name="isInput" scoped="" ref="0x404647a8"/>
        <function-ref name="toggle" scoped="" ref="0x40464888"/>
        <function-ref name="isOutput" scoped="" ref="0x40464968"/>
        <function-ref name="get" scoped="" ref="0x40464a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464b28"/>
        <function-ref name="set" scoped="" ref="0x40464c08"/>
        <function-ref name="clr" scoped="" ref="0x40464ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41295de8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41295de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41291010"/>
        <function-ref name="isInput" scoped="" ref="0x412910f0"/>
        <function-ref name="toggle" scoped="" ref="0x412911d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412912b0"/>
        <function-ref name="get" scoped="" ref="0x41291390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41291470"/>
        <function-ref name="set" scoped="" ref="0x41291550"/>
        <function-ref name="clr" scoped="" ref="0x41291630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412907f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412907f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412909d0"/>
        <function-ref name="isInput" scoped="" ref="0x41290ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41290b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41290c70"/>
        <function-ref name="get" scoped="" ref="0x41290d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41290e30"/>
        <function-ref name="set" scoped="" ref="0x41290f10"/>
        <function-ref name="clr" scoped="" ref="0x4128f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4128e228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4128e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4128e400"/>
        <function-ref name="isInput" scoped="" ref="0x4128e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4128e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4128e6a0"/>
        <function-ref name="get" scoped="" ref="0x4128e780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4128e860"/>
        <function-ref name="set" scoped="" ref="0x4128e940"/>
        <function-ref name="clr" scoped="" ref="0x4128ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4128dc08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4128dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4128dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4128dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4128c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4128c0f0"/>
        <function-ref name="get" scoped="" ref="0x4128c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4128c2b0"/>
        <function-ref name="set" scoped="" ref="0x4128c390"/>
        <function-ref name="clr" scoped="" ref="0x4128c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4128b6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4128b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4128b898"/>
        <function-ref name="isInput" scoped="" ref="0x4128b978"/>
        <function-ref name="toggle" scoped="" ref="0x4128ba58"/>
        <function-ref name="isOutput" scoped="" ref="0x4128bb38"/>
        <function-ref name="get" scoped="" ref="0x4128bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4128bcf8"/>
        <function-ref name="set" scoped="" ref="0x4128bdd8"/>
        <function-ref name="clr" scoped="" ref="0x4128beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412890b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412890b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41289288"/>
        <function-ref name="isInput" scoped="" ref="0x41289368"/>
        <function-ref name="toggle" scoped="" ref="0x41289448"/>
        <function-ref name="isOutput" scoped="" ref="0x41289528"/>
        <function-ref name="get" scoped="" ref="0x41289608"/>
        <function-ref name="makeOutput" scoped="" ref="0x412896e8"/>
        <function-ref name="set" scoped="" ref="0x412897c8"/>
        <function-ref name="clr" scoped="" ref="0x412898a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41288a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41288a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41288c60"/>
        <function-ref name="isInput" scoped="" ref="0x41288d40"/>
        <function-ref name="toggle" scoped="" ref="0x41288e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41288f00"/>
        <function-ref name="get" scoped="" ref="0x41287010"/>
        <function-ref name="makeOutput" scoped="" ref="0x412870f0"/>
        <function-ref name="set" scoped="" ref="0x412871d0"/>
        <function-ref name="clr" scoped="" ref="0x412872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41286538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41286538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41286710"/>
        <function-ref name="isInput" scoped="" ref="0x412867f0"/>
        <function-ref name="toggle" scoped="" ref="0x412868d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412869b0"/>
        <function-ref name="get" scoped="" ref="0x41286a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41286b70"/>
        <function-ref name="set" scoped="" ref="0x41286c50"/>
        <function-ref name="clr" scoped="" ref="0x41286d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4045fe48" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4045fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a050"/>
        <function-ref name="isInput" scoped="" ref="0x4046a130"/>
        <function-ref name="toggle" scoped="" ref="0x4046a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a2f0"/>
        <function-ref name="get" scoped="" ref="0x4046a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a4b0"/>
        <function-ref name="set" scoped="" ref="0x4046a590"/>
        <function-ref name="clr" scoped="" ref="0x4046a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40469ac8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40469ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40469d80"/>
        <function-ref name="toggle" scoped="" ref="0x40469e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40468010"/>
        <function-ref name="get" scoped="" ref="0x404680f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404681d0"/>
        <function-ref name="set" scoped="" ref="0x404682b0"/>
        <function-ref name="clr" scoped="" ref="0x40468390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40460b00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40460b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40460db8"/>
        <function-ref name="toggle" scoped="" ref="0x40460e98"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f010"/>
        <function-ref name="get" scoped="" ref="0x4045f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f1d0"/>
        <function-ref name="set" scoped="" ref="0x4045f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4045f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4046a7d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4046a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4046aa88"/>
        <function-ref name="toggle" scoped="" ref="0x4046ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ac48"/>
        <function-ref name="get" scoped="" ref="0x4046ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ae08"/>
        <function-ref name="set" scoped="" ref="0x4046aee8"/>
        <function-ref name="clr" scoped="" ref="0x40469010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404684f0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404684f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404686c8"/>
        <function-ref name="isInput" scoped="" ref="0x404687a8"/>
        <function-ref name="toggle" scoped="" ref="0x40468888"/>
        <function-ref name="isOutput" scoped="" ref="0x40468968"/>
        <function-ref name="get" scoped="" ref="0x40468a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468b28"/>
        <function-ref name="set" scoped="" ref="0x40468c08"/>
        <function-ref name="clr" scoped="" ref="0x40468ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4045f4f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4045f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4045f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4045f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f968"/>
        <function-ref name="get" scoped="" ref="0x4045fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045fb28"/>
        <function-ref name="set" scoped="" ref="0x4045fc08"/>
        <function-ref name="clr" scoped="" ref="0x4045fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40469170" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40469170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469348"/>
        <function-ref name="isInput" scoped="" ref="0x40469428"/>
        <function-ref name="toggle" scoped="" ref="0x40469508"/>
        <function-ref name="isOutput" scoped="" ref="0x404695e8"/>
        <function-ref name="get" scoped="" ref="0x404696c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404697a8"/>
        <function-ref name="set" scoped="" ref="0x40469888"/>
        <function-ref name="clr" scoped="" ref="0x40469968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40468e48" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40468e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467050"/>
        <function-ref name="isInput" scoped="" ref="0x40467130"/>
        <function-ref name="toggle" scoped="" ref="0x40467210"/>
        <function-ref name="isOutput" scoped="" ref="0x404672f0"/>
        <function-ref name="get" scoped="" ref="0x404673d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404674b0"/>
        <function-ref name="set" scoped="" ref="0x40467590"/>
        <function-ref name="clr" scoped="" ref="0x40467670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412e2938" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412e2938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412e2b10"/>
        <function-ref name="isInput" scoped="" ref="0x412e2bf0"/>
        <function-ref name="toggle" scoped="" ref="0x412e2cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x412e2db0"/>
        <function-ref name="get" scoped="" ref="0x412e2e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x412e1010"/>
        <function-ref name="set" scoped="" ref="0x412e10f0"/>
        <function-ref name="clr" scoped="" ref="0x412e11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412e03b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412e03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412e0588"/>
        <function-ref name="isInput" scoped="" ref="0x412e0668"/>
        <function-ref name="toggle" scoped="" ref="0x412e0748"/>
        <function-ref name="isOutput" scoped="" ref="0x412e0828"/>
        <function-ref name="get" scoped="" ref="0x412e0908"/>
        <function-ref name="makeOutput" scoped="" ref="0x412e09e8"/>
        <function-ref name="set" scoped="" ref="0x412e0ac8"/>
        <function-ref name="clr" scoped="" ref="0x412e0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412dfd70" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412dfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412de010"/>
        <function-ref name="isInput" scoped="" ref="0x412de0f0"/>
        <function-ref name="toggle" scoped="" ref="0x412de1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412de2b0"/>
        <function-ref name="get" scoped="" ref="0x412de390"/>
        <function-ref name="makeOutput" scoped="" ref="0x412de470"/>
        <function-ref name="set" scoped="" ref="0x412de550"/>
        <function-ref name="clr" scoped="" ref="0x412de630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412dd7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412dd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412dd9d0"/>
        <function-ref name="isInput" scoped="" ref="0x412ddab0"/>
        <function-ref name="toggle" scoped="" ref="0x412ddb90"/>
        <function-ref name="isOutput" scoped="" ref="0x412ddc70"/>
        <function-ref name="get" scoped="" ref="0x412ddd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x412dde30"/>
        <function-ref name="set" scoped="" ref="0x412ddf10"/>
        <function-ref name="clr" scoped="" ref="0x412dc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412db228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412db228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412db400"/>
        <function-ref name="isInput" scoped="" ref="0x412db4e0"/>
        <function-ref name="toggle" scoped="" ref="0x412db5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x412db6a0"/>
        <function-ref name="get" scoped="" ref="0x412db780"/>
        <function-ref name="makeOutput" scoped="" ref="0x412db860"/>
        <function-ref name="set" scoped="" ref="0x412db940"/>
        <function-ref name="clr" scoped="" ref="0x412dba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412dac08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412dac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412dade0"/>
        <function-ref name="isInput" scoped="" ref="0x412daec0"/>
        <function-ref name="toggle" scoped="" ref="0x412d9010"/>
        <function-ref name="isOutput" scoped="" ref="0x412d90f0"/>
        <function-ref name="get" scoped="" ref="0x412d91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d92b0"/>
        <function-ref name="set" scoped="" ref="0x412d9390"/>
        <function-ref name="clr" scoped="" ref="0x412d9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d86c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d8898"/>
        <function-ref name="isInput" scoped="" ref="0x412d8978"/>
        <function-ref name="toggle" scoped="" ref="0x412d8a58"/>
        <function-ref name="isOutput" scoped="" ref="0x412d8b38"/>
        <function-ref name="get" scoped="" ref="0x412d8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d8cf8"/>
        <function-ref name="set" scoped="" ref="0x412d8dd8"/>
        <function-ref name="clr" scoped="" ref="0x412d8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d60b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d6288"/>
        <function-ref name="isInput" scoped="" ref="0x412d6368"/>
        <function-ref name="toggle" scoped="" ref="0x412d6448"/>
        <function-ref name="isOutput" scoped="" ref="0x412d6528"/>
        <function-ref name="get" scoped="" ref="0x412d6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d66e8"/>
        <function-ref name="set" scoped="" ref="0x412d67c8"/>
        <function-ref name="clr" scoped="" ref="0x412d68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4046e6b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4046e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e888"/>
        <function-ref name="isInput" scoped="" ref="0x4046e968"/>
        <function-ref name="toggle" scoped="" ref="0x4046ea48"/>
        <function-ref name="isOutput" scoped="" ref="0x4046eb28"/>
        <function-ref name="get" scoped="" ref="0x4046ec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ece8"/>
        <function-ref name="set" scoped="" ref="0x4046edc8"/>
        <function-ref name="clr" scoped="" ref="0x4046eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4046c330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4046c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c508"/>
        <function-ref name="isInput" scoped="" ref="0x4046c5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4046c6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c7a8"/>
        <function-ref name="get" scoped="" ref="0x4046c888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c968"/>
        <function-ref name="set" scoped="" ref="0x4046ca48"/>
        <function-ref name="clr" scoped="" ref="0x4046cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046f3d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4046f690"/>
        <function-ref name="toggle" scoped="" ref="0x4046f770"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f850"/>
        <function-ref name="get" scoped="" ref="0x4046f930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046fa10"/>
        <function-ref name="set" scoped="" ref="0x4046faf0"/>
        <function-ref name="clr" scoped="" ref="0x4046fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4046d030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4046d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d208"/>
        <function-ref name="isInput" scoped="" ref="0x4046d2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4046d3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046d4a8"/>
        <function-ref name="get" scoped="" ref="0x4046d588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046d668"/>
        <function-ref name="set" scoped="" ref="0x4046d748"/>
        <function-ref name="clr" scoped="" ref="0x4046d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4046cc88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4046cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046ce60"/>
        <function-ref name="isInput" scoped="" ref="0x4046b010"/>
        <function-ref name="toggle" scoped="" ref="0x4046b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b1d0"/>
        <function-ref name="get" scoped="" ref="0x4046b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b390"/>
        <function-ref name="set" scoped="" ref="0x4046b470"/>
        <function-ref name="clr" scoped="" ref="0x4046b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4046fd30" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4046fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046ff08"/>
        <function-ref name="isInput" scoped="" ref="0x4046e010"/>
        <function-ref name="toggle" scoped="" ref="0x4046e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e1d0"/>
        <function-ref name="get" scoped="" ref="0x4046e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e390"/>
        <function-ref name="set" scoped="" ref="0x4046e470"/>
        <function-ref name="clr" scoped="" ref="0x4046e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4046d988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4046d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046db60"/>
        <function-ref name="isInput" scoped="" ref="0x4046dc40"/>
        <function-ref name="toggle" scoped="" ref="0x4046dd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4046de00"/>
        <function-ref name="get" scoped="" ref="0x4046dee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c010"/>
        <function-ref name="set" scoped="" ref="0x4046c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4046c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4046b6b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4046b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b888"/>
        <function-ref name="isInput" scoped="" ref="0x4046b968"/>
        <function-ref name="toggle" scoped="" ref="0x4046ba48"/>
        <function-ref name="isOutput" scoped="" ref="0x4046bb28"/>
        <function-ref name="get" scoped="" ref="0x4046bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046bce8"/>
        <function-ref name="set" scoped="" ref="0x4046bdc8"/>
        <function-ref name="clr" scoped="" ref="0x4046bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412f0538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412f0538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f0710"/>
        <function-ref name="isInput" scoped="" ref="0x412f07f0"/>
        <function-ref name="toggle" scoped="" ref="0x412f08d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412f09b0"/>
        <function-ref name="get" scoped="" ref="0x412f0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f0b70"/>
        <function-ref name="set" scoped="" ref="0x412f0c50"/>
        <function-ref name="clr" scoped="" ref="0x412f0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412ee010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412ee1e8"/>
        <function-ref name="isInput" scoped="" ref="0x412ee2c8"/>
        <function-ref name="toggle" scoped="" ref="0x412ee3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x412ee488"/>
        <function-ref name="get" scoped="" ref="0x412ee568"/>
        <function-ref name="makeOutput" scoped="" ref="0x412ee648"/>
        <function-ref name="set" scoped="" ref="0x412ee728"/>
        <function-ref name="clr" scoped="" ref="0x412ee808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412ed9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412ed9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412edbc0"/>
        <function-ref name="isInput" scoped="" ref="0x412edca0"/>
        <function-ref name="toggle" scoped="" ref="0x412edd80"/>
        <function-ref name="isOutput" scoped="" ref="0x412ede60"/>
        <function-ref name="get" scoped="" ref="0x412ec010"/>
        <function-ref name="makeOutput" scoped="" ref="0x412ec0f0"/>
        <function-ref name="set" scoped="" ref="0x412ec1d0"/>
        <function-ref name="clr" scoped="" ref="0x412ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412eb538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412eb538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412eb710"/>
        <function-ref name="isInput" scoped="" ref="0x412eb7f0"/>
        <function-ref name="toggle" scoped="" ref="0x412eb8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412eb9b0"/>
        <function-ref name="get" scoped="" ref="0x412eba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x412ebb70"/>
        <function-ref name="set" scoped="" ref="0x412ebc50"/>
        <function-ref name="clr" scoped="" ref="0x412ebd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4132f010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4132f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4132f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4132f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4132f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4132f488"/>
        <function-ref name="get" scoped="" ref="0x4132f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4132f648"/>
        <function-ref name="set" scoped="" ref="0x4132f728"/>
        <function-ref name="clr" scoped="" ref="0x4132f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4132e9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4132e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4132ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x4132eca0"/>
        <function-ref name="toggle" scoped="" ref="0x4132ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x4132ee60"/>
        <function-ref name="get" scoped="" ref="0x4132d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4132d0f0"/>
        <function-ref name="set" scoped="" ref="0x4132d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4132d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4132c538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4132c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4132c710"/>
        <function-ref name="isInput" scoped="" ref="0x4132c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4132c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4132c9b0"/>
        <function-ref name="get" scoped="" ref="0x4132ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4132cb70"/>
        <function-ref name="set" scoped="" ref="0x4132cc50"/>
        <function-ref name="clr" scoped="" ref="0x4132cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4132a010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4132a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4132a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4132a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4132a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4132a488"/>
        <function-ref name="get" scoped="" ref="0x4132a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4132a648"/>
        <function-ref name="set" scoped="" ref="0x4132a728"/>
        <function-ref name="clr" scoped="" ref="0x4132a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40473f28" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40473f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472110"/>
        <function-ref name="isInput" scoped="" ref="0x404721f0"/>
        <function-ref name="toggle" scoped="" ref="0x404722d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404723b0"/>
        <function-ref name="get" scoped="" ref="0x40472490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472570"/>
        <function-ref name="set" scoped="" ref="0x40472650"/>
        <function-ref name="clr" scoped="" ref="0x40472730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4047cba8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4047cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047cd80"/>
        <function-ref name="isInput" scoped="" ref="0x4047ce60"/>
        <function-ref name="toggle" scoped="" ref="0x4047b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b0f0"/>
        <function-ref name="get" scoped="" ref="0x4047b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b2b0"/>
        <function-ref name="set" scoped="" ref="0x4047b390"/>
        <function-ref name="clr" scoped="" ref="0x4047b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40474c28" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40474c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40474e00"/>
        <function-ref name="isInput" scoped="" ref="0x40474ee0"/>
        <function-ref name="toggle" scoped="" ref="0x40473010"/>
        <function-ref name="isOutput" scoped="" ref="0x404730f0"/>
        <function-ref name="get" scoped="" ref="0x404731d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404732b0"/>
        <function-ref name="set" scoped="" ref="0x40473390"/>
        <function-ref name="clr" scoped="" ref="0x40473470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40472890" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40472890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472a68"/>
        <function-ref name="isInput" scoped="" ref="0x40472b48"/>
        <function-ref name="toggle" scoped="" ref="0x40472c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40472d08"/>
        <function-ref name="get" scoped="" ref="0x40472de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472ec8"/>
        <function-ref name="set" scoped="" ref="0x4047c010"/>
        <function-ref name="clr" scoped="" ref="0x4047c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4047b5d0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4047b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b7a8"/>
        <function-ref name="isInput" scoped="" ref="0x4047b888"/>
        <function-ref name="toggle" scoped="" ref="0x4047b968"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ba48"/>
        <function-ref name="get" scoped="" ref="0x4047bb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047bc08"/>
        <function-ref name="set" scoped="" ref="0x4047bce8"/>
        <function-ref name="clr" scoped="" ref="0x4047bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404735d0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404735d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404737a8"/>
        <function-ref name="isInput" scoped="" ref="0x40473888"/>
        <function-ref name="toggle" scoped="" ref="0x40473968"/>
        <function-ref name="isOutput" scoped="" ref="0x40473a48"/>
        <function-ref name="get" scoped="" ref="0x40473b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473c08"/>
        <function-ref name="set" scoped="" ref="0x40473ce8"/>
        <function-ref name="clr" scoped="" ref="0x40473dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4047c250" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4047c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c428"/>
        <function-ref name="isInput" scoped="" ref="0x4047c508"/>
        <function-ref name="toggle" scoped="" ref="0x4047c5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c6c8"/>
        <function-ref name="get" scoped="" ref="0x4047c7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c888"/>
        <function-ref name="set" scoped="" ref="0x4047c968"/>
        <function-ref name="clr" scoped="" ref="0x4047ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4047bf28" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4047bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a110"/>
        <function-ref name="isInput" scoped="" ref="0x4047a1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4047a2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a3b0"/>
        <function-ref name="get" scoped="" ref="0x4047a490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a570"/>
        <function-ref name="set" scoped="" ref="0x4047a650"/>
        <function-ref name="clr" scoped="" ref="0x4047a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41344418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41344418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413445f0"/>
        <function-ref name="isInput" scoped="" ref="0x413446d0"/>
        <function-ref name="toggle" scoped="" ref="0x413447b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41344890"/>
        <function-ref name="get" scoped="" ref="0x41344970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41344a50"/>
        <function-ref name="set" scoped="" ref="0x41344b30"/>
        <function-ref name="clr" scoped="" ref="0x41344c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41343de0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41343de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41342010"/>
        <function-ref name="isInput" scoped="" ref="0x413420f0"/>
        <function-ref name="toggle" scoped="" ref="0x413421d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413422b0"/>
        <function-ref name="get" scoped="" ref="0x41342390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41342470"/>
        <function-ref name="set" scoped="" ref="0x41342550"/>
        <function-ref name="clr" scoped="" ref="0x41342630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413417f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413417f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413419d0"/>
        <function-ref name="isInput" scoped="" ref="0x41341ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41341b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41341c70"/>
        <function-ref name="get" scoped="" ref="0x41341d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41341e30"/>
        <function-ref name="set" scoped="" ref="0x41341f10"/>
        <function-ref name="clr" scoped="" ref="0x41340010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4133f228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4133f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133f400"/>
        <function-ref name="isInput" scoped="" ref="0x4133f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4133f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4133f6a0"/>
        <function-ref name="get" scoped="" ref="0x4133f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133f860"/>
        <function-ref name="set" scoped="" ref="0x4133f940"/>
        <function-ref name="clr" scoped="" ref="0x4133fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4133ec08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4133ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4133eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4133d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4133d0f0"/>
        <function-ref name="get" scoped="" ref="0x4133d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133d2b0"/>
        <function-ref name="set" scoped="" ref="0x4133d390"/>
        <function-ref name="clr" scoped="" ref="0x4133d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4133c6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4133c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133c898"/>
        <function-ref name="isInput" scoped="" ref="0x4133c978"/>
        <function-ref name="toggle" scoped="" ref="0x4133ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x4133cb38"/>
        <function-ref name="get" scoped="" ref="0x4133cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133ccf8"/>
        <function-ref name="set" scoped="" ref="0x4133cdd8"/>
        <function-ref name="clr" scoped="" ref="0x4133ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4133a0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4133a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133a288"/>
        <function-ref name="isInput" scoped="" ref="0x4133a368"/>
        <function-ref name="toggle" scoped="" ref="0x4133a448"/>
        <function-ref name="isOutput" scoped="" ref="0x4133a528"/>
        <function-ref name="get" scoped="" ref="0x4133a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133a6e8"/>
        <function-ref name="set" scoped="" ref="0x4133a7c8"/>
        <function-ref name="clr" scoped="" ref="0x4133a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41339a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41339a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41339c60"/>
        <function-ref name="isInput" scoped="" ref="0x41339d40"/>
        <function-ref name="toggle" scoped="" ref="0x41339e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41339f00"/>
        <function-ref name="get" scoped="" ref="0x41338010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413380f0"/>
        <function-ref name="set" scoped="" ref="0x413381d0"/>
        <function-ref name="clr" scoped="" ref="0x413382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40477e60" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40477e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482050"/>
        <function-ref name="isInput" scoped="" ref="0x40482130"/>
        <function-ref name="toggle" scoped="" ref="0x40482210"/>
        <function-ref name="isOutput" scoped="" ref="0x404822f0"/>
        <function-ref name="get" scoped="" ref="0x404823d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404824b0"/>
        <function-ref name="set" scoped="" ref="0x40482590"/>
        <function-ref name="clr" scoped="" ref="0x40482670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4048c458" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4048c458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c630"/>
        <function-ref name="isInput" scoped="" ref="0x4048c710"/>
        <function-ref name="toggle" scoped="" ref="0x4048c7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c8d0"/>
        <function-ref name="get" scoped="" ref="0x4048c9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ca90"/>
        <function-ref name="set" scoped="" ref="0x4048cb70"/>
        <function-ref name="clr" scoped="" ref="0x4048cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40489a30" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40489a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489c08"/>
        <function-ref name="isInput" scoped="" ref="0x40489ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40489dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40489ea8"/>
        <function-ref name="get" scoped="" ref="0x40494010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404940f0"/>
        <function-ref name="set" scoped="" ref="0x404941d0"/>
        <function-ref name="clr" scoped="" ref="0x404942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40492090" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40492090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492268"/>
        <function-ref name="isInput" scoped="" ref="0x40492348"/>
        <function-ref name="toggle" scoped="" ref="0x40492428"/>
        <function-ref name="isOutput" scoped="" ref="0x40492508"/>
        <function-ref name="get" scoped="" ref="0x404925e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404926c8"/>
        <function-ref name="set" scoped="" ref="0x404927a8"/>
        <function-ref name="clr" scoped="" ref="0x40492888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404906c0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404906c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490898"/>
        <function-ref name="isInput" scoped="" ref="0x40490978"/>
        <function-ref name="toggle" scoped="" ref="0x40490a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40490b38"/>
        <function-ref name="get" scoped="" ref="0x40490c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490cf8"/>
        <function-ref name="set" scoped="" ref="0x40490dd8"/>
        <function-ref name="clr" scoped="" ref="0x40490eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40499cb8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40499cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40499e90"/>
        <function-ref name="isInput" scoped="" ref="0x40498010"/>
        <function-ref name="toggle" scoped="" ref="0x404980f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404981d0"/>
        <function-ref name="get" scoped="" ref="0x404982b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498390"/>
        <function-ref name="set" scoped="" ref="0x40498470"/>
        <function-ref name="clr" scoped="" ref="0x40498550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404963b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404963b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496588"/>
        <function-ref name="isInput" scoped="" ref="0x40496668"/>
        <function-ref name="toggle" scoped="" ref="0x40496748"/>
        <function-ref name="isOutput" scoped="" ref="0x40496828"/>
        <function-ref name="get" scoped="" ref="0x40496908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404969e8"/>
        <function-ref name="set" scoped="" ref="0x40496ac8"/>
        <function-ref name="clr" scoped="" ref="0x40496ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049f978" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049fb50"/>
        <function-ref name="isInput" scoped="" ref="0x4049fc30"/>
        <function-ref name="toggle" scoped="" ref="0x4049fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x4049fdf0"/>
        <function-ref name="get" scoped="" ref="0x4049fed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e010"/>
        <function-ref name="set" scoped="" ref="0x4049e0f0"/>
        <function-ref name="clr" scoped="" ref="0x4049e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049dee0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049dee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4049c1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4049c2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049c380"/>
        <function-ref name="get" scoped="" ref="0x4049c460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049c540"/>
        <function-ref name="set" scoped="" ref="0x4049c620"/>
        <function-ref name="clr" scoped="" ref="0x4049c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a63e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a63e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a65c0"/>
        <function-ref name="isInput" scoped="" ref="0x404a66a0"/>
        <function-ref name="toggle" scoped="" ref="0x404a6780"/>
        <function-ref name="isOutput" scoped="" ref="0x404a6860"/>
        <function-ref name="get" scoped="" ref="0x404a6940"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a6a20"/>
        <function-ref name="set" scoped="" ref="0x404a6b00"/>
        <function-ref name="clr" scoped="" ref="0x404a6be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a38f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a3ac8"/>
        <function-ref name="isInput" scoped="" ref="0x404a3ba8"/>
        <function-ref name="toggle" scoped="" ref="0x404a3c88"/>
        <function-ref name="isOutput" scoped="" ref="0x404a3d68"/>
        <function-ref name="get" scoped="" ref="0x404a3e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a3f28"/>
        <function-ref name="set" scoped="" ref="0x404a2018"/>
        <function-ref name="clr" scoped="" ref="0x404a20f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a1dd8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a1dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad010"/>
        <function-ref name="isInput" scoped="" ref="0x404ad0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404ad1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad2b0"/>
        <function-ref name="get" scoped="" ref="0x404ad390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad470"/>
        <function-ref name="set" scoped="" ref="0x404ad550"/>
        <function-ref name="clr" scoped="" ref="0x404ad630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ab3b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ab3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab588"/>
        <function-ref name="isInput" scoped="" ref="0x404ab668"/>
        <function-ref name="toggle" scoped="" ref="0x404ab748"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab828"/>
        <function-ref name="get" scoped="" ref="0x404ab908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab9e8"/>
        <function-ref name="set" scoped="" ref="0x404abac8"/>
        <function-ref name="clr" scoped="" ref="0x404abba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404cd6d8" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404cd6d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e9ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e9ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cd8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404cda88" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404cda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404cdc60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404cdd40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404cde20"/>
        <function-ref name="actualMicro" scoped="" ref="0x404cdf00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404cc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404d6240" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404d6240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d6418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404be408" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404be408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404be5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404bed68" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404bed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404be7a0" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404be7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404be978"/>
        <function-ref name="taskLoop" scoped="" ref="0x404bea58"/>
        <function-ref name="runNextTask" scoped="" ref="0x404beb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402f7bc0" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402f7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f7d98"/>
        <function-ref name="runTask" scoped="" ref="0x402f7e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402f0408" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402f0408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402f05e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f06c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f07a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40361d30" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40361d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40361f08"/>
        <function-ref name="runTask" scoped="" ref="0x40360010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403609b8" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403609b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40360b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403614f8" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403614f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403616d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403617b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40361890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40373498" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40373498"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40373670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40366220" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40366220"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403663f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40366ed0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40366ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403760c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403ec010" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403ec1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403ec2c8"/>
        <function-ref name="led1On" scoped="" ref="0x403ec3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403ec488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403ec568"/>
        <function-ref name="get" scoped="" ref="0x403ec648"/>
        <function-ref name="led1Off" scoped="" ref="0x403ec728"/>
        <function-ref name="led2Off" scoped="" ref="0x403ecaa8"/>
        <function-ref name="set" scoped="" ref="0x403ec808"/>
        <function-ref name="led0On" scoped="" ref="0x403ec8e8"/>
        <function-ref name="led2On" scoped="" ref="0x403ec9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404e9400" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404e9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e95d8"/>
        <function-ref name="isInput" scoped="" ref="0x404e96b8"/>
        <function-ref name="toggle" scoped="" ref="0x404e9798"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9878"/>
        <function-ref name="get" scoped="" ref="0x404e9958"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9a38"/>
        <function-ref name="set" scoped="" ref="0x404e9b18"/>
        <function-ref name="clr" scoped="" ref="0x404e9bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404ea350" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404ea350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ea528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404e9de8" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404e9de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8010"/>
        <function-ref name="isInput" scoped="" ref="0x404e80f0"/>
        <function-ref name="toggle" scoped="" ref="0x404e81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e82b0"/>
        <function-ref name="get" scoped="" ref="0x404e8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8470"/>
        <function-ref name="set" scoped="" ref="0x404e8550"/>
        <function-ref name="clr" scoped="" ref="0x404e8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404ea698" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404ea698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404ea870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404ea950"/>
        <function-ref name="led1On" scoped="" ref="0x404eaa30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404eab10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404eabf0"/>
        <function-ref name="get" scoped="" ref="0x404eacd0"/>
        <function-ref name="led1Off" scoped="" ref="0x404eadb0"/>
        <function-ref name="led2Off" scoped="" ref="0x404e91d0"/>
        <function-ref name="set" scoped="" ref="0x404eae90"/>
        <function-ref name="led0On" scoped="" ref="0x404e9010"/>
        <function-ref name="led2On" scoped="" ref="0x404e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x404e8820" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404e8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e89f8"/>
        <function-ref name="isInput" scoped="" ref="0x404e8ad8"/>
        <function-ref name="toggle" scoped="" ref="0x404e8bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8c98"/>
        <function-ref name="get" scoped="" ref="0x404e8d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8e58"/>
        <function-ref name="set" scoped="" ref="0x404e7010"/>
        <function-ref name="clr" scoped="" ref="0x404e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x404deaa8" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404deaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dec80"/>
        <function-ref name="isInput" scoped="" ref="0x404ded60"/>
        <function-ref name="toggle" scoped="" ref="0x404dee40"/>
        <function-ref name="isOutput" scoped="" ref="0x404def20"/>
        <function-ref name="get" scoped="" ref="0x404f3018"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f30f8"/>
        <function-ref name="set" scoped="" ref="0x404f31d8"/>
        <function-ref name="clr" scoped="" ref="0x404f32b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404f34c8" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404f34c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f36a0"/>
        <function-ref name="isInput" scoped="" ref="0x404f3780"/>
        <function-ref name="toggle" scoped="" ref="0x404f3860"/>
        <function-ref name="isOutput" scoped="" ref="0x404f3940"/>
        <function-ref name="get" scoped="" ref="0x404f3a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f3b00"/>
        <function-ref name="set" scoped="" ref="0x404f3be0"/>
        <function-ref name="clr" scoped="" ref="0x404f3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404f2870" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404f2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404f2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404f3ed0" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404f3ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f20c0"/>
        <function-ref name="isInput" scoped="" ref="0x404f21a0"/>
        <function-ref name="toggle" scoped="" ref="0x404f2280"/>
        <function-ref name="isOutput" scoped="" ref="0x404f2360"/>
        <function-ref name="get" scoped="" ref="0x404f2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2520"/>
        <function-ref name="set" scoped="" ref="0x404f2600"/>
        <function-ref name="clr" scoped="" ref="0x404f26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x403e5a90" loc="50:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x403e5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403e5c68"/>
        <function-ref name="stopDone" scoped="" ref="0x403e5d48"/>
        <function-ref name="start" scoped="" ref="0x403e5e28"/>
        <function-ref name="stop" scoped="" ref="0x403e5f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x404fc380" loc="52:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x404fc380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404fc558"/>
        <function-ref name="getPayload" scoped="" ref="0x404fc638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404fc718"/>
        <function-ref name="cancel" scoped="" ref="0x404fc7f8"/>
        <function-ref name="sendDone" scoped="" ref="0x404fc8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x404fb3f0" loc="54:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x404fb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404fb5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40500388" loc="56:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40500388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40500560"/>
        <function-ref name="payloadLength" scoped="" ref="0x40500640"/>
        <function-ref name="getPayload" scoped="" ref="0x40500720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40500800"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405008e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x4051ac68" loc="59:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x4051ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x404fa7a0"/>
        <function-ref name="clear" scoped="" ref="0x404fab50"/>
        <function-ref name="isValid" scoped="" ref="0x404fa3f0"/>
        <function-ref name="set" scoped="" ref="0x404faf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40517d78" loc="61:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40517d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40516010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405160f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405161d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x404fcd40" loc="53:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404fcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404fcf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4050e308" loc="58:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4050e308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4050e4e0"/>
        <function-ref name="noAck" scoped="" ref="0x4050e5c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4050e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40513140" loc="57:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40513140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40513318"/>
        <function-ref name="source" scoped="" ref="0x405133f8"/>
        <function-ref name="address" scoped="" ref="0x405134d8"/>
        <function-ref name="destination" scoped="" ref="0x405135b8"/>
        <function-ref name="setSource" scoped="" ref="0x40513698"/>
        <function-ref name="setDestination" scoped="" ref="0x40513778"/>
        <function-ref name="type" scoped="" ref="0x40513858"/>
        <function-ref name="setType" scoped="" ref="0x40513938"/>
        <function-ref name="isForMe" scoped="" ref="0x40513a18"/>
        <function-ref name="setGroup" scoped="" ref="0x40513af8"/>
        <function-ref name="localGroup" scoped="" ref="0x40513bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x404f9650" loc="60:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x404f9650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40517170"/>
        <function-ref name="clear" scoped="" ref="0x40517520"/>
        <function-ref name="isValid" scoped="" ref="0x404f9da0"/>
        <function-ref name="set" scoped="" ref="0x405178d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40521560" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40521560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40521738"/>
        <function-ref name="stopDone" scoped="" ref="0x40521818"/>
        <function-ref name="start" scoped="" ref="0x405218f8"/>
        <function-ref name="stop" scoped="" ref="0x405219d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4052eab8" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4052eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4052ec90"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4052ed70"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4052ee50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40525010"/>
        <function-ref name="setCca" scoped="" ref="0x405250f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405251d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405368e8" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405368e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40536b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4051fe70" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4051fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4051e070"/>
        <function-ref name="payloadLength" scoped="" ref="0x4051e150"/>
        <function-ref name="getPayload" scoped="" ref="0x4051e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4051e310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4051e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40521e38" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40521e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40520050"/>
        <function-ref name="getPayload" scoped="" ref="0x40520130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40520210"/>
        <function-ref name="cancel" scoped="" ref="0x405202f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405203d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40520ed0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40520ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4051f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40526330" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40526330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40526508"/>
        <function-ref name="setNetwork" scoped="" ref="0x405265e8"/>
        <function-ref name="getRssi" scoped="" ref="0x405266c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x405267a8"/>
        <function-ref name="getPower" scoped="" ref="0x40526888"/>
        <function-ref name="getLqi" scoped="" ref="0x40526968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405253c0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405253c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40525598"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40525678"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40525758"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40525838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40520838" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40520838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40520a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40526b88" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40526b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40526d60"/>
        <function-ref name="noAck" scoped="" ref="0x40526e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x40526f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40539df0" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40539df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4052d010"/>
        <function-ref name="setRetries" scoped="" ref="0x4052d0f0"/>
        <function-ref name="getRetries" scoped="" ref="0x4052d1d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4052d2b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4052d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4051f258" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4051f258"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4051f430"/>
        <function-ref name="source" scoped="" ref="0x4051f510"/>
        <function-ref name="address" scoped="" ref="0x4051f5f0"/>
        <function-ref name="destination" scoped="" ref="0x4051f6d0"/>
        <function-ref name="setSource" scoped="" ref="0x4051f7b0"/>
        <function-ref name="setDestination" scoped="" ref="0x4051f890"/>
        <function-ref name="type" scoped="" ref="0x4051f970"/>
        <function-ref name="setType" scoped="" ref="0x4051fa50"/>
        <function-ref name="isForMe" scoped="" ref="0x4051fb30"/>
        <function-ref name="setGroup" scoped="" ref="0x4051fc10"/>
        <function-ref name="localGroup" scoped="" ref="0x4051fcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4051c010" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4051c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4051c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4052caa0" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4052caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4052cc78"/>
        <function-ref name="stopDone" scoped="" ref="0x4052cd58"/>
        <function-ref name="start" scoped="" ref="0x4052ce38"/>
        <function-ref name="stop" scoped="" ref="0x4052cf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40532280" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40532280"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40532458"/>
        <function-ref name="setNetwork" scoped="" ref="0x40532538"/>
        <function-ref name="getRssi" scoped="" ref="0x40532618"/>
        <function-ref name="getNetwork" scoped="" ref="0x405326f8"/>
        <function-ref name="getPower" scoped="" ref="0x405327d8"/>
        <function-ref name="getLqi" scoped="" ref="0x405328b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4053bb98" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4053bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4053bd70"/>
        <function-ref name="getPayload" scoped="" ref="0x4053be50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40533010"/>
        <function-ref name="cancel" scoped="" ref="0x405330f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405331d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40533728" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40533728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40533900"/>
        <function-ref name="getPayload" scoped="" ref="0x405339e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40533ac0"/>
        <function-ref name="cancel" scoped="" ref="0x40533ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x40533c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405494e0" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405494e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405496b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40549798"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40549878"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40549958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40533358" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40533358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40533530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40532ad8" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40532ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40532cb0"/>
        <function-ref name="noAck" scoped="" ref="0x40532d90"/>
        <function-ref name="wasAcked" scoped="" ref="0x40532e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4053f658" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4053f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4053f830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4053f910"/>
        <function-ref name="request" scoped="" ref="0x4053f9f0"/>
        <function-ref name="granted" scoped="" ref="0x4053fad0"/>
        <function-ref name="isOwner" scoped="" ref="0x4053fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40533eb0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40533eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405320c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40549b00" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40549b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40549cd8"/>
        <function-ref name="setRetries" scoped="" ref="0x40549db8"/>
        <function-ref name="getRetries" scoped="" ref="0x40549e98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40548010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405480f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40549118" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40549118"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405492f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40543198" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40543198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40543370"/>
        <function-ref name="stopDone" scoped="" ref="0x40543450"/>
        <function-ref name="start" scoped="" ref="0x40543530"/>
        <function-ref name="stop" scoped="" ref="0x40543610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405422a0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405422a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40542478"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40542558"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40542638"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40542718"/>
        <function-ref name="setCca" scoped="" ref="0x405427f8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405428d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405437a0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405437a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40543978"/>
        <function-ref name="getPayload" scoped="" ref="0x40543a58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40543b38"/>
        <function-ref name="cancel" scoped="" ref="0x40543c18"/>
        <function-ref name="sendDone" scoped="" ref="0x40543cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40543ea0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40543ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405420c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4054f218" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4054f218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4054f3f0"/>
        <function-ref name="stopDone" scoped="" ref="0x4054f4d0"/>
        <function-ref name="start" scoped="" ref="0x4054f5b0"/>
        <function-ref name="stop" scoped="" ref="0x4054f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4054e010" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4054e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4054e1e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4054e2c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4054e3a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4054e488"/>
        <function-ref name="setCca" scoped="" ref="0x4054e568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4054e648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x4054b278" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x4054b278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4054b450"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4054b530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4054b610"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4054b6f0"/>
        <function-ref name="setCca" scoped="" ref="0x4054b7d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4054b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40557810" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40557810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405579e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40557ac8"/>
        <function-ref name="getRssi" scoped="" ref="0x40557ba8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40557c88"/>
        <function-ref name="getPower" scoped="" ref="0x40557d68"/>
        <function-ref name="getLqi" scoped="" ref="0x40557e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x405539e0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x405539e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40553bb8"/>
        <function-ref name="cancel" scoped="" ref="0x40553c98"/>
        <function-ref name="modify" scoped="" ref="0x40553d78"/>
        <function-ref name="sendDone" scoped="" ref="0x40553e58"/>
        <function-ref name="resend" scoped="" ref="0x4054b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4054f820" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4054f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4054f9f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4054fad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4054fbb8"/>
        <function-ref name="cancel" scoped="" ref="0x4054fc98"/>
        <function-ref name="sendDone" scoped="" ref="0x4054fd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x405616e0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x405616e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x405618b8"/>
        <function-ref name="rand32" scoped="" ref="0x40561998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4054c420" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4054c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4054c5f8"/>
        <function-ref name="stop" scoped="" ref="0x4054c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x4055d900" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x4055d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x4055dad8"/>
        <function-ref name="getMetadata" scoped="" ref="0x4055dbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x405589c0" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x405589c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40558b98"/>
        <function-ref name="rfOff" scoped="" ref="0x40558c78"/>
        <function-ref name="rxOn" scoped="" ref="0x40558d58"/>
        <function-ref name="startVReg" scoped="" ref="0x40558e38"/>
        <function-ref name="stopVReg" scoped="" ref="0x40558f18"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4054c010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4054c0f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4054c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40561b28" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40561b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40561d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40561de0"/>
        <function-ref name="led1On" scoped="" ref="0x40561ec0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40557010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405570f0"/>
        <function-ref name="get" scoped="" ref="0x405571d0"/>
        <function-ref name="led1Off" scoped="" ref="0x405572b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40557630"/>
        <function-ref name="set" scoped="" ref="0x40557390"/>
        <function-ref name="led0On" scoped="" ref="0x40557470"/>
        <function-ref name="led2On" scoped="" ref="0x40557550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4054e800" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4054e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4054e9d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4054eab8"/>
        <function-ref name="request" scoped="" ref="0x4054eb98"/>
        <function-ref name="granted" scoped="" ref="0x4054ec78"/>
        <function-ref name="isOwner" scoped="" ref="0x4054ed58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x405600e0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x405600e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40560338"/>
        <function-ref name="toIdle" scoped="" ref="0x40560418"/>
        <function-ref name="isState" scoped="" ref="0x405604f8"/>
        <function-ref name="isIdle" scoped="" ref="0x405605d8"/>
        <function-ref name="requestState" scoped="" ref="0x405606b8"/>
        <function-ref name="forceState" scoped="" ref="0x40560798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x40568258" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x40568258"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40568430"/>
        <function-ref name="runTask" scoped="" ref="0x40568510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x40569a10" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x40569a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40569be8"/>
        <function-ref name="runTask" scoped="" ref="0x40569cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x405691d0" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x405691d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405693a8"/>
        <function-ref name="runTask" scoped="" ref="0x40569488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x405951b0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x405951b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40595388"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40595468"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40595548"/>
        <function-ref name="syncDone" scoped="" ref="0x40595628"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40595708"/>
        <function-ref name="setShortAddr" scoped="" ref="0x405957e8"/>
        <function-ref name="setChannel" scoped="" ref="0x405958c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x405959a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40595a88"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40595b68"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40595c48"/>
        <function-ref name="sync" scoped="" ref="0x40595d28"/>
        <function-ref name="getChannel" scoped="" ref="0x40595e08"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4058d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4058c030" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4058c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4058c658"/>
        <function-ref name="readDone" scoped="" ref="0x4058c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x4058d1e0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4058d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4058d3b8"/>
        <function-ref name="rfOff" scoped="" ref="0x4058d498"/>
        <function-ref name="rxOn" scoped="" ref="0x4058d578"/>
        <function-ref name="startVReg" scoped="" ref="0x4058d658"/>
        <function-ref name="stopVReg" scoped="" ref="0x4058d738"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4058d818"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4058d8f8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4058d9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40590608" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40590608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405907e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405908c0"/>
        <function-ref name="request" scoped="" ref="0x405909a0"/>
        <function-ref name="granted" scoped="" ref="0x40590a80"/>
        <function-ref name="isOwner" scoped="" ref="0x40590b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x405a0ee0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x405a0ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4059f0e0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4059f1c0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4059f2a0"/>
        <function-ref name="syncDone" scoped="" ref="0x4059f380"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x4059f460"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4059f540"/>
        <function-ref name="setChannel" scoped="" ref="0x4059f620"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4059f700"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4059f7e0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4059f8c0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4059f9a0"/>
        <function-ref name="sync" scoped="" ref="0x4059fa80"/>
        <function-ref name="getChannel" scoped="" ref="0x4059fb60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4059fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x405ae348" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x405ae348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405ae520"/>
        <function-ref name="write" scoped="" ref="0x405ae600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x405a7978" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x405a7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4059ce40"/>
        <function-ref name="fired" scoped="" ref="0x4059c610"/>
        <function-ref name="startAt" scoped="" ref="0x4059cb00"/>
        <function-ref name="isRunning" scoped="" ref="0x4059c888"/>
        <function-ref name="getAlarm" scoped="" ref="0x4059b0d8"/>
        <function-ref name="start" scoped="" ref="0x4059c0f8"/>
        <function-ref name="stop" scoped="" ref="0x4059c398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x405b1860" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x405b1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405b1a38"/>
        <function-ref name="write" scoped="" ref="0x405b1b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x4059bdb0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x4059bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a6010"/>
        <function-ref name="isInput" scoped="" ref="0x405a60f0"/>
        <function-ref name="toggle" scoped="" ref="0x405a61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405a62b0"/>
        <function-ref name="get" scoped="" ref="0x405a6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a6470"/>
        <function-ref name="set" scoped="" ref="0x405a6550"/>
        <function-ref name="clr" scoped="" ref="0x405a6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4059e990" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4059e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4059d010"/>
        <function-ref name="readDone" scoped="" ref="0x4059d268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x405b3cc8" loc="118:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x405b3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405b3ea0"/>
        <function-ref name="runTask" scoped="" ref="0x405c4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x405ae840" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x405ae840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405aea18"/>
        <function-ref name="write" scoped="" ref="0x405aeaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x405aadd8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x405aadd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405b1010"/>
        <function-ref name="write" scoped="" ref="0x405b10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x405b0a68" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405b0a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x405b0c40"/>
        <function-ref name="changed" scoped="" ref="0x405b0d20"/>
        <function-ref name="amGroup" scoped="" ref="0x405b0e00"/>
        <function-ref name="setAddress" scoped="" ref="0x405b0ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4059b3a8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4059b3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059b580"/>
        <function-ref name="isInput" scoped="" ref="0x4059b660"/>
        <function-ref name="toggle" scoped="" ref="0x4059b740"/>
        <function-ref name="isOutput" scoped="" ref="0x4059b820"/>
        <function-ref name="get" scoped="" ref="0x4059b900"/>
        <function-ref name="makeOutput" scoped="" ref="0x4059b9e0"/>
        <function-ref name="set" scoped="" ref="0x4059bac0"/>
        <function-ref name="clr" scoped="" ref="0x4059bba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x405bb010" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x405bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x405bb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x405a6840" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x405a6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a6a18"/>
        <function-ref name="isInput" scoped="" ref="0x405a6af8"/>
        <function-ref name="toggle" scoped="" ref="0x405a6bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x405a6cb8"/>
        <function-ref name="get" scoped="" ref="0x405a6d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a6e78"/>
        <function-ref name="set" scoped="" ref="0x405a5010"/>
        <function-ref name="clr" scoped="" ref="0x405a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405a0418" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405a0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a05f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x405b1d80" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x405b1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405ae010"/>
        <function-ref name="write" scoped="" ref="0x405ae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x405bb430" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x405bb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x405bb608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x405bb850" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x405bb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405bba28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405bbb08"/>
        <function-ref name="request" scoped="" ref="0x405bbbe8"/>
        <function-ref name="granted" scoped="" ref="0x405bbcc8"/>
        <function-ref name="isOwner" scoped="" ref="0x405bbda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x405ba8e0" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x405ba8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405baab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405bab98"/>
        <function-ref name="request" scoped="" ref="0x405bac78"/>
        <function-ref name="granted" scoped="" ref="0x405bad58"/>
        <function-ref name="isOwner" scoped="" ref="0x405bae38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x4059fe90" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4059fe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4059e080"/>
        <function-ref name="rfOff" scoped="" ref="0x4059e160"/>
        <function-ref name="rxOn" scoped="" ref="0x4059e240"/>
        <function-ref name="startVReg" scoped="" ref="0x4059e320"/>
        <function-ref name="stopVReg" scoped="" ref="0x4059e400"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4059e4e0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4059e5c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4059e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x405b1340" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x405b1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405b1518"/>
        <function-ref name="write" scoped="" ref="0x405b15f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x405aa850" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x405aa850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405aaaa8"/>
        <function-ref name="write" scoped="" ref="0x405aab88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x405b9758" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x405b9758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x405b9930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405b8010" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405b81e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405b82c8"/>
        <function-ref name="led1On" scoped="" ref="0x405b83a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405b8488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405b8568"/>
        <function-ref name="get" scoped="" ref="0x405b8648"/>
        <function-ref name="led1Off" scoped="" ref="0x405b8728"/>
        <function-ref name="led2Off" scoped="" ref="0x405b8aa8"/>
        <function-ref name="set" scoped="" ref="0x405b8808"/>
        <function-ref name="led0On" scoped="" ref="0x405b88e8"/>
        <function-ref name="led2On" scoped="" ref="0x405b89c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x405b34e8" loc="117:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x405b34e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405b36c0"/>
        <function-ref name="runTask" scoped="" ref="0x405b37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x405a07a8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405a07a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405a0980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405a0a60"/>
        <function-ref name="request" scoped="" ref="0x405a0b40"/>
        <function-ref name="granted" scoped="" ref="0x405a0c20"/>
        <function-ref name="isOwner" scoped="" ref="0x405a0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x405ab100" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x405ab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405ab2d8"/>
        <function-ref name="write" scoped="" ref="0x405ab3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x405a29c8" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x405a29c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405a2ba0"/>
        <function-ref name="disable" scoped="" ref="0x405a2c80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x405a2d60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x405a2e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x405ba030" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x405ba030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405ba308"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405ba3e8"/>
        <function-ref name="request" scoped="" ref="0x405ba4c8"/>
        <function-ref name="granted" scoped="" ref="0x405ba5a8"/>
        <function-ref name="isOwner" scoped="" ref="0x405ba688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x405b9b70" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x405b9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x405b9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405f2010" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x405f25d8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x405f25d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40603ab8"/>
        <function-ref name="fired" scoped="" ref="0x40603288"/>
        <function-ref name="startAt" scoped="" ref="0x40603778"/>
        <function-ref name="isRunning" scoped="" ref="0x40603500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40603d30"/>
        <function-ref name="start" scoped="" ref="0x405f2d28"/>
        <function-ref name="stop" scoped="" ref="0x40603010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4074fe78" loc="67:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4074fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405ff350"/>
        <function-ref name="fired" scoped="" ref="0x40600af8"/>
        <function-ref name="startAt" scoped="" ref="0x405ff010"/>
        <function-ref name="isRunning" scoped="" ref="0x40600d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x405ff5c8"/>
        <function-ref name="start" scoped="" ref="0x406005e0"/>
        <function-ref name="stop" scoped="" ref="0x40600880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405ff7f8" loc="68:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405ff7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405ff9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x413eaed8" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413eaed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413e73e8"/>
        <function-ref name="fired" scoped="" ref="0x413e9b98"/>
        <function-ref name="startAt" scoped="" ref="0x413e70a8"/>
        <function-ref name="isRunning" scoped="" ref="0x413e9e10"/>
        <function-ref name="getAlarm" scoped="" ref="0x413e7660"/>
        <function-ref name="start" scoped="" ref="0x413e9680"/>
        <function-ref name="stop" scoped="" ref="0x413e9920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x413e6c68" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413e6c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413e4150"/>
        <function-ref name="fired" scoped="" ref="0x413e5908"/>
        <function-ref name="startAt" scoped="" ref="0x413e5df8"/>
        <function-ref name="isRunning" scoped="" ref="0x413e5b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x413e43c8"/>
        <function-ref name="start" scoped="" ref="0x413e53f0"/>
        <function-ref name="stop" scoped="" ref="0x413e5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40618208" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40618208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406183e0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406184c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406185a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40618680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40618760"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40618840"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40618920"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40618a00"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40618ae0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40618bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4061e010" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4061e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4061da88"/>
        <function-ref name="test" scoped="" ref="0x4061d598"/>
        <function-ref name="get" scoped="" ref="0x4061e658"/>
        <function-ref name="captured" scoped="" ref="0x4061eb70"/>
        <function-ref name="reset" scoped="" ref="0x4061ee10"/>
        <function-ref name="isOn" scoped="" ref="0x4061d810"/>
        <function-ref name="set" scoped="" ref="0x4061e8d0"/>
        <function-ref name="start" scoped="" ref="0x4061d0a8"/>
        <function-ref name="stop" scoped="" ref="0x4061d320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40620b08" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40620b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4061f110"/>
        <function-ref name="fired" scoped="" ref="0x40625718"/>
        <function-ref name="get" scoped="" ref="0x40625200"/>
        <function-ref name="reset" scoped="" ref="0x40625990"/>
        <function-ref name="isOn" scoped="" ref="0x4061f388"/>
        <function-ref name="set" scoped="" ref="0x40625478"/>
        <function-ref name="start" scoped="" ref="0x40625c08"/>
        <function-ref name="stop" scoped="" ref="0x40625e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4060e260" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4060e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40612ca0"/>
        <function-ref name="test" scoped="" ref="0x406127b0"/>
        <function-ref name="get" scoped="" ref="0x4060e8a8"/>
        <function-ref name="setScale" scoped="" ref="0x40612f18"/>
        <function-ref name="getScale" scoped="" ref="0x4060d1d0"/>
        <function-ref name="reset" scoped="" ref="0x40612048"/>
        <function-ref name="overflow" scoped="" ref="0x4060edc0"/>
        <function-ref name="isOn" scoped="" ref="0x40612a28"/>
        <function-ref name="set" scoped="" ref="0x4060eb20"/>
        <function-ref name="start" scoped="" ref="0x406122c0"/>
        <function-ref name="stop" scoped="" ref="0x40612538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40628678" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40628678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40628850"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40628930"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40628a10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40628af0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40628bd0"/>
        <function-ref name="setControl" scoped="" ref="0x40628cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40637c90" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40637c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40637e68"/>
        <function-ref name="compareBusy" scoped="" ref="0x4063a010"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4063a0f0"/>
        <function-ref name="countBusy" scoped="" ref="0x4063a1d0"/>
        <function-ref name="getAssr" scoped="" ref="0x4063a2b0"/>
        <function-ref name="setAssr" scoped="" ref="0x4063a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4062b010" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4062b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4062a578"/>
        <function-ref name="fired" scoped="" ref="0x4062bb70"/>
        <function-ref name="get" scoped="" ref="0x4062b658"/>
        <function-ref name="reset" scoped="" ref="0x4062bde8"/>
        <function-ref name="isOn" scoped="" ref="0x4062a7f0"/>
        <function-ref name="set" scoped="" ref="0x4062b8d0"/>
        <function-ref name="start" scoped="" ref="0x4062a088"/>
        <function-ref name="stop" scoped="" ref="0x4062a300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4061fe88" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4061fe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4062e908"/>
        <function-ref name="test" scoped="" ref="0x4062e418"/>
        <function-ref name="get" scoped="" ref="0x4062f4f8"/>
        <function-ref name="setScale" scoped="" ref="0x4062eb80"/>
        <function-ref name="getScale" scoped="" ref="0x4062ee20"/>
        <function-ref name="reset" scoped="" ref="0x4062fc88"/>
        <function-ref name="overflow" scoped="" ref="0x4062fa10"/>
        <function-ref name="isOn" scoped="" ref="0x4062e690"/>
        <function-ref name="set" scoped="" ref="0x4062f770"/>
        <function-ref name="start" scoped="" ref="0x4062ff00"/>
        <function-ref name="stop" scoped="" ref="0x4062e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40632360" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40632360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40632538"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40632618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406326f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406327d8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406328b8"/>
        <function-ref name="setControl" scoped="" ref="0x40632998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406447b8" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406447b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40644990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40644c18" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40644c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40644df0"/>
        <function-ref name="compareBusy" scoped="" ref="0x40644ed0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40642010"/>
        <function-ref name="countBusy" scoped="" ref="0x406420f0"/>
        <function-ref name="getAssr" scoped="" ref="0x406421d0"/>
        <function-ref name="setAssr" scoped="" ref="0x406422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40632cc0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40632cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40644288"/>
        <function-ref name="fired" scoped="" ref="0x40645830"/>
        <function-ref name="get" scoped="" ref="0x40645318"/>
        <function-ref name="reset" scoped="" ref="0x40645aa8"/>
        <function-ref name="isOn" scoped="" ref="0x40644500"/>
        <function-ref name="set" scoped="" ref="0x40645590"/>
        <function-ref name="start" scoped="" ref="0x40645d20"/>
        <function-ref name="stop" scoped="" ref="0x40644010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40635030" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40635030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40633a88"/>
        <function-ref name="test" scoped="" ref="0x40633598"/>
        <function-ref name="get" scoped="" ref="0x40635678"/>
        <function-ref name="setScale" scoped="" ref="0x40633d00"/>
        <function-ref name="getScale" scoped="" ref="0x40632010"/>
        <function-ref name="reset" scoped="" ref="0x40635e08"/>
        <function-ref name="overflow" scoped="" ref="0x40635b90"/>
        <function-ref name="isOn" scoped="" ref="0x40633810"/>
        <function-ref name="set" scoped="" ref="0x406358f0"/>
        <function-ref name="start" scoped="" ref="0x406330a8"/>
        <function-ref name="stop" scoped="" ref="0x40633320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40671770" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40671770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40671948"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40671a28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40671b08"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40671be8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40671cc8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40671da8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40671e88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40670010"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406700f0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406701d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x4067b888" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x4067b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4067ba60"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4067bb40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4067bc20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4067bd00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4067bde0"/>
        <function-ref name="setControl" scoped="" ref="0x4067bec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40681450" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40681450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406809f0"/>
        <function-ref name="fired" scoped="" ref="0x40680010"/>
        <function-ref name="get" scoped="" ref="0x40681a98"/>
        <function-ref name="reset" scoped="" ref="0x40680288"/>
        <function-ref name="isOn" scoped="" ref="0x40680c68"/>
        <function-ref name="set" scoped="" ref="0x40681d10"/>
        <function-ref name="start" scoped="" ref="0x40680500"/>
        <function-ref name="stop" scoped="" ref="0x40680778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40670508" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40670508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40681010"/>
        <function-ref name="test" scoped="" ref="0x4066fa90"/>
        <function-ref name="get" scoped="" ref="0x40670b50"/>
        <function-ref name="captured" scoped="" ref="0x4066f088"/>
        <function-ref name="reset" scoped="" ref="0x4066f328"/>
        <function-ref name="isOn" scoped="" ref="0x4066fd08"/>
        <function-ref name="set" scoped="" ref="0x40670dc8"/>
        <function-ref name="start" scoped="" ref="0x4066f5a0"/>
        <function-ref name="stop" scoped="" ref="0x4066f818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4067f0b8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4067f0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4067e620"/>
        <function-ref name="fired" scoped="" ref="0x4067fc18"/>
        <function-ref name="get" scoped="" ref="0x4067f700"/>
        <function-ref name="reset" scoped="" ref="0x4067fe90"/>
        <function-ref name="isOn" scoped="" ref="0x4067e898"/>
        <function-ref name="set" scoped="" ref="0x4067f978"/>
        <function-ref name="start" scoped="" ref="0x4067e130"/>
        <function-ref name="stop" scoped="" ref="0x4067e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4067ecb0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4067ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4067b288"/>
        <function-ref name="fired" scoped="" ref="0x4067c820"/>
        <function-ref name="get" scoped="" ref="0x4067c308"/>
        <function-ref name="reset" scoped="" ref="0x4067ca98"/>
        <function-ref name="isOn" scoped="" ref="0x4067b500"/>
        <function-ref name="set" scoped="" ref="0x4067c580"/>
        <function-ref name="start" scoped="" ref="0x4067cd10"/>
        <function-ref name="stop" scoped="" ref="0x4067b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40674410" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40674410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40672ee0"/>
        <function-ref name="test" scoped="" ref="0x406729f0"/>
        <function-ref name="get" scoped="" ref="0x40674a58"/>
        <function-ref name="setScale" scoped="" ref="0x40671170"/>
        <function-ref name="getScale" scoped="" ref="0x40671410"/>
        <function-ref name="reset" scoped="" ref="0x40672288"/>
        <function-ref name="overflow" scoped="" ref="0x40672010"/>
        <function-ref name="isOn" scoped="" ref="0x40672c68"/>
        <function-ref name="set" scoped="" ref="0x40674cd0"/>
        <function-ref name="start" scoped="" ref="0x40672500"/>
        <function-ref name="stop" scoped="" ref="0x40672778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406d0db8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406d0db8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e9ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e9ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406de010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406de220" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406de220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406ddc68"/>
        <function-ref name="test" scoped="" ref="0x406dd778"/>
        <function-ref name="get" scoped="" ref="0x406de868"/>
        <function-ref name="setScale" scoped="" ref="0x406ddee0"/>
        <function-ref name="getScale" scoped="" ref="0x406dc1c0"/>
        <function-ref name="reset" scoped="" ref="0x406dd010"/>
        <function-ref name="overflow" scoped="" ref="0x406ded80"/>
        <function-ref name="isOn" scoped="" ref="0x406dd9f0"/>
        <function-ref name="set" scoped="" ref="0x406deae0"/>
        <function-ref name="start" scoped="" ref="0x406dd288"/>
        <function-ref name="stop" scoped="" ref="0x406dd500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x413daa00" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413daa00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402e98e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402e98e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413d8010"/>
        <function-ref name="fired" scoped="" ref="0x413d9718"/>
        <function-ref name="startAt" scoped="" ref="0x413d9c08"/>
        <function-ref name="isRunning" scoped="" ref="0x413d9990"/>
        <function-ref name="getAlarm" scoped="" ref="0x413d8288"/>
        <function-ref name="start" scoped="" ref="0x413d9200"/>
        <function-ref name="stop" scoped="" ref="0x413d94a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x413d57e8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x413d57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x413d4d58"/>
        <function-ref name="fired" scoped="" ref="0x413d4378"/>
        <function-ref name="get" scoped="" ref="0x413d5e30"/>
        <function-ref name="reset" scoped="" ref="0x413d45f0"/>
        <function-ref name="isOn" scoped="" ref="0x413d3010"/>
        <function-ref name="set" scoped="" ref="0x413d40d8"/>
        <function-ref name="start" scoped="" ref="0x413d4868"/>
        <function-ref name="stop" scoped="" ref="0x413d4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x413d8548" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x413d8548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x413d5010"/>
        <function-ref name="test" scoped="" ref="0x413d7ab8"/>
        <function-ref name="get" scoped="" ref="0x413d8b90"/>
        <function-ref name="setScale" scoped="" ref="0x413d5288"/>
        <function-ref name="getScale" scoped="" ref="0x413d5528"/>
        <function-ref name="reset" scoped="" ref="0x413d7350"/>
        <function-ref name="overflow" scoped="" ref="0x413d70d8"/>
        <function-ref name="isOn" scoped="" ref="0x413d7d30"/>
        <function-ref name="set" scoped="" ref="0x413d8e08"/>
        <function-ref name="start" scoped="" ref="0x413d75c8"/>
        <function-ref name="stop" scoped="" ref="0x413d7840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406f8668" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406f8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406f8db8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406fc2c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fc048"/>
        <function-ref name="overflow" scoped="" ref="0x406fc538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4070c088" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4070c088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070c7d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070ccc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070ca50"/>
        <function-ref name="overflow" scoped="" ref="0x4070b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4070a890" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4070a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40715010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40715500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40715288"/>
        <function-ref name="overflow" scoped="" ref="0x40715778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40715a58" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40715a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40713500"/>
        <function-ref name="test" scoped="" ref="0x40713010"/>
        <function-ref name="get" scoped="" ref="0x407140b8"/>
        <function-ref name="setScale" scoped="" ref="0x40713778"/>
        <function-ref name="getScale" scoped="" ref="0x40713a18"/>
        <function-ref name="reset" scoped="" ref="0x40714848"/>
        <function-ref name="overflow" scoped="" ref="0x407145d0"/>
        <function-ref name="isOn" scoped="" ref="0x40713288"/>
        <function-ref name="set" scoped="" ref="0x40714330"/>
        <function-ref name="start" scoped="" ref="0x40714ac0"/>
        <function-ref name="stop" scoped="" ref="0x40714d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4072c0e0" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4072c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4072c830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4072cd20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4072caa8"/>
        <function-ref name="overflow" scoped="" ref="0x4072a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406f7e60" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406f7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407105e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40710ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40710858"/>
        <function-ref name="overflow" scoped="" ref="0x40710d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x413e36b8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413e36b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413e1b80"/>
        <function-ref name="fired" scoped="" ref="0x413e1350"/>
        <function-ref name="startAt" scoped="" ref="0x413e1840"/>
        <function-ref name="isRunning" scoped="" ref="0x413e15c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x413e1df8"/>
        <function-ref name="start" scoped="" ref="0x413e3e08"/>
        <function-ref name="stop" scoped="" ref="0x413e10d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x413df3b8" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x413df3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="TOne" ref="0x4035c9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413de878"/>
        <function-ref name="fired" scoped="" ref="0x413de048"/>
        <function-ref name="startAt" scoped="" ref="0x413de538"/>
        <function-ref name="isRunning" scoped="" ref="0x413de2c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x413deaf0"/>
        <function-ref name="start" scoped="" ref="0x413dfb08"/>
        <function-ref name="stop" scoped="" ref="0x413dfda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x413e0180" loc="57:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x413e0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413e08d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x413e0dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x413e0b48"/>
        <function-ref name="overflow" scoped="" ref="0x413df048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40750bb0" loc="18:/opt/tinyos-2.1.1/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40750bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40750d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x4074b890" loc="68:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x4074b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074ba68"/>
        <function-ref name="isInput" scoped="" ref="0x4074bb48"/>
        <function-ref name="toggle" scoped="" ref="0x4074bc28"/>
        <function-ref name="isOutput" scoped="" ref="0x4074bd08"/>
        <function-ref name="get" scoped="" ref="0x4074bde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074bec8"/>
        <function-ref name="set" scoped="" ref="0x4074a010"/>
        <function-ref name="clr" scoped="" ref="0x4074a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x4074a2e8" loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x4074a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074a4c0"/>
        <function-ref name="isInput" scoped="" ref="0x4074a5a0"/>
        <function-ref name="toggle" scoped="" ref="0x4074a680"/>
        <function-ref name="isOutput" scoped="" ref="0x4074a760"/>
        <function-ref name="get" scoped="" ref="0x4074a840"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074a920"/>
        <function-ref name="set" scoped="" ref="0x4074aa00"/>
        <function-ref name="clr" scoped="" ref="0x4074aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x4074acd0" loc="70:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x4074acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074aea8"/>
        <function-ref name="isInput" scoped="" ref="0x40749010"/>
        <function-ref name="toggle" scoped="" ref="0x407490f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407491d0"/>
        <function-ref name="get" scoped="" ref="0x407492b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40749390"/>
        <function-ref name="set" scoped="" ref="0x40749470"/>
        <function-ref name="clr" scoped="" ref="0x40749550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x405f4e90" loc="67:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x405f4e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074b080"/>
        <function-ref name="isInput" scoped="" ref="0x4074b160"/>
        <function-ref name="toggle" scoped="" ref="0x4074b240"/>
        <function-ref name="isOutput" scoped="" ref="0x4074b320"/>
        <function-ref name="get" scoped="" ref="0x4074b400"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074b4e0"/>
        <function-ref name="set" scoped="" ref="0x4074b5c0"/>
        <function-ref name="clr" scoped="" ref="0x4074b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x40748128" loc="72:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40748128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40748300"/>
        <function-ref name="isInput" scoped="" ref="0x407483e0"/>
        <function-ref name="toggle" scoped="" ref="0x407484c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407485a0"/>
        <function-ref name="get" scoped="" ref="0x40748680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40748760"/>
        <function-ref name="set" scoped="" ref="0x40748840"/>
        <function-ref name="clr" scoped="" ref="0x40748920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x405f44b8" loc="66:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x405f44b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f4690"/>
        <function-ref name="isInput" scoped="" ref="0x405f4770"/>
        <function-ref name="toggle" scoped="" ref="0x405f4850"/>
        <function-ref name="isOutput" scoped="" ref="0x405f4930"/>
        <function-ref name="get" scoped="" ref="0x405f4a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f4af0"/>
        <function-ref name="set" scoped="" ref="0x405f4bd0"/>
        <function-ref name="clr" scoped="" ref="0x405f4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x40749730" loc="71:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40749730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40749908"/>
        <function-ref name="isInput" scoped="" ref="0x407499e8"/>
        <function-ref name="toggle" scoped="" ref="0x40749ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40749ba8"/>
        <function-ref name="get" scoped="" ref="0x40749c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40749d68"/>
        <function-ref name="set" scoped="" ref="0x40749e48"/>
        <function-ref name="clr" scoped="" ref="0x40749f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x40757a28" loc="39:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40757a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40757c00"/>
        <function-ref name="disable" scoped="" ref="0x40757ce0"/>
        <function-ref name="captured" scoped="" ref="0x40757dc0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40757ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x40759188" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40759188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40759360"/>
        <function-ref name="disable" scoped="" ref="0x40759440"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40759520"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40759600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x40759898" loc="41:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40759898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40759a70"/>
        <function-ref name="disable" scoped="" ref="0x40759b50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40759c30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40759d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40764f00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40764f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407560f0"/>
        <function-ref name="disable" scoped="" ref="0x407561d0"/>
        <function-ref name="captured" scoped="" ref="0x407562b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40756390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x407565a0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x407565a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40763048"/>
        <function-ref name="test" scoped="" ref="0x40755b38"/>
        <function-ref name="get" scoped="" ref="0x40756be8"/>
        <function-ref name="captured" scoped="" ref="0x40755130"/>
        <function-ref name="reset" scoped="" ref="0x407553d0"/>
        <function-ref name="isOn" scoped="" ref="0x40755db0"/>
        <function-ref name="set" scoped="" ref="0x40756e60"/>
        <function-ref name="start" scoped="" ref="0x40755648"/>
        <function-ref name="stop" scoped="" ref="0x407558c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40761c00" loc="9:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40761c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40761dd8"/>
        <function-ref name="fired" scoped="" ref="0x40761eb8"/>
        <function-ref name="disable" scoped="" ref="0x40760010"/>
        <function-ref name="edge" scoped="" ref="0x407600f0"/>
        <function-ref name="enable" scoped="" ref="0x407601d0"/>
        <function-ref name="getValue" scoped="" ref="0x407602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40761608" loc="8:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40761608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407617e0"/>
        <function-ref name="disable" scoped="" ref="0x407618c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407619a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40761a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x407814f8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x407814f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407816d0"/>
        <function-ref name="fired" scoped="" ref="0x407817b0"/>
        <function-ref name="disable" scoped="" ref="0x40781890"/>
        <function-ref name="edge" scoped="" ref="0x40781970"/>
        <function-ref name="enable" scoped="" ref="0x40781a50"/>
        <function-ref name="getValue" scoped="" ref="0x40781b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x4076c890" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x4076c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4076ca68"/>
        <function-ref name="fired" scoped="" ref="0x4076cb48"/>
        <function-ref name="disable" scoped="" ref="0x4076cc28"/>
        <function-ref name="edge" scoped="" ref="0x4076cd08"/>
        <function-ref name="enable" scoped="" ref="0x4076cde8"/>
        <function-ref name="getValue" scoped="" ref="0x4076cec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4076a338" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4076a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4076a510"/>
        <function-ref name="fired" scoped="" ref="0x4076a5f0"/>
        <function-ref name="disable" scoped="" ref="0x4076a6d0"/>
        <function-ref name="edge" scoped="" ref="0x4076a7b0"/>
        <function-ref name="enable" scoped="" ref="0x4076a890"/>
        <function-ref name="getValue" scoped="" ref="0x4076a970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x40781d78" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x40781d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40780010"/>
        <function-ref name="fired" scoped="" ref="0x407800f0"/>
        <function-ref name="disable" scoped="" ref="0x407801d0"/>
        <function-ref name="edge" scoped="" ref="0x407802b0"/>
        <function-ref name="enable" scoped="" ref="0x40780390"/>
        <function-ref name="getValue" scoped="" ref="0x40780470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x4076b168" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x4076b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4076b340"/>
        <function-ref name="fired" scoped="" ref="0x4076b420"/>
        <function-ref name="disable" scoped="" ref="0x4076b500"/>
        <function-ref name="edge" scoped="" ref="0x4076b5e0"/>
        <function-ref name="enable" scoped="" ref="0x4076b6c0"/>
        <function-ref name="getValue" scoped="" ref="0x4076b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4076abb8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4076abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4076ad90"/>
        <function-ref name="fired" scoped="" ref="0x4076ae70"/>
        <function-ref name="disable" scoped="" ref="0x40781010"/>
        <function-ref name="edge" scoped="" ref="0x407810f0"/>
        <function-ref name="enable" scoped="" ref="0x407811d0"/>
        <function-ref name="getValue" scoped="" ref="0x407812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x4076c010" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x4076c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4076c1e8"/>
        <function-ref name="fired" scoped="" ref="0x4076c2c8"/>
        <function-ref name="disable" scoped="" ref="0x4076c3a8"/>
        <function-ref name="edge" scoped="" ref="0x4076c488"/>
        <function-ref name="enable" scoped="" ref="0x4076c568"/>
        <function-ref name="getValue" scoped="" ref="0x4076c648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4076b9e8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4076b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4076bbc0"/>
        <function-ref name="fired" scoped="" ref="0x4076bca0"/>
        <function-ref name="disable" scoped="" ref="0x4076bd80"/>
        <function-ref name="edge" scoped="" ref="0x4076be60"/>
        <function-ref name="enable" scoped="" ref="0x4076a010"/>
        <function-ref name="getValue" scoped="" ref="0x4076a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x4077a4a8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x4077a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x4077cdf8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x4077cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x4077bba0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x4077bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077bd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x4077a920" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x4077a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077aaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x4077b2b0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x4077b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077b488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x4077a030" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x4077a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077a208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x4077c980" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x4077c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x4077b728" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x4077b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077b900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4077dbf8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4077dbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4077ddd0"/>
        <function-ref name="fired" scoped="" ref="0x4077deb0"/>
        <function-ref name="disable" scoped="" ref="0x40782010"/>
        <function-ref name="edge" scoped="" ref="0x407820f0"/>
        <function-ref name="enable" scoped="" ref="0x407821d0"/>
        <function-ref name="getValue" scoped="" ref="0x407822b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40782430" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40782430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40782608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40791d60" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40791d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407a8010"/>
        <function-ref name="fired" scoped="" ref="0x407a80f0"/>
        <function-ref name="disable" scoped="" ref="0x407a81d0"/>
        <function-ref name="edge" scoped="" ref="0x407a82b0"/>
        <function-ref name="enable" scoped="" ref="0x407a8390"/>
        <function-ref name="getValue" scoped="" ref="0x407a8470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407a85f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407a85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407a6010" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407a61e8"/>
        <function-ref name="fired" scoped="" ref="0x407a62c8"/>
        <function-ref name="disable" scoped="" ref="0x407a63a8"/>
        <function-ref name="edge" scoped="" ref="0x407a6488"/>
        <function-ref name="enable" scoped="" ref="0x407a6568"/>
        <function-ref name="getValue" scoped="" ref="0x407a6648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407a67c8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407a67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407a4228" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407a4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407a4400"/>
        <function-ref name="fired" scoped="" ref="0x407a44e0"/>
        <function-ref name="disable" scoped="" ref="0x407a45c0"/>
        <function-ref name="edge" scoped="" ref="0x407a46a0"/>
        <function-ref name="enable" scoped="" ref="0x407a4780"/>
        <function-ref name="getValue" scoped="" ref="0x407a4860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407a49e0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407a49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a4bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407a2408" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407a2408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407a25e0"/>
        <function-ref name="fired" scoped="" ref="0x407a26c0"/>
        <function-ref name="disable" scoped="" ref="0x407a27a0"/>
        <function-ref name="edge" scoped="" ref="0x407a2880"/>
        <function-ref name="enable" scoped="" ref="0x407a2960"/>
        <function-ref name="getValue" scoped="" ref="0x407a2a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407a2bc0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407a2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a2d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4079f5e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4079f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4079f7c0"/>
        <function-ref name="fired" scoped="" ref="0x4079f8a0"/>
        <function-ref name="disable" scoped="" ref="0x4079f980"/>
        <function-ref name="edge" scoped="" ref="0x4079fa60"/>
        <function-ref name="enable" scoped="" ref="0x4079fb40"/>
        <function-ref name="getValue" scoped="" ref="0x4079fc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4079fda0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4079fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4079e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4079d840" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4079d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4079da18"/>
        <function-ref name="fired" scoped="" ref="0x4079daf8"/>
        <function-ref name="disable" scoped="" ref="0x4079dbd8"/>
        <function-ref name="edge" scoped="" ref="0x4079dcb8"/>
        <function-ref name="enable" scoped="" ref="0x4079dd98"/>
        <function-ref name="getValue" scoped="" ref="0x4079de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407b5010" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407b5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407b51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407b4a08" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407b4a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407b4be0"/>
        <function-ref name="fired" scoped="" ref="0x407b4cc0"/>
        <function-ref name="disable" scoped="" ref="0x407b4da0"/>
        <function-ref name="edge" scoped="" ref="0x407b4e80"/>
        <function-ref name="enable" scoped="" ref="0x407b3010"/>
        <function-ref name="getValue" scoped="" ref="0x407b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407b3270" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407b3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407b3448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x407ac250" loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x407ac250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ac428"/>
        <function-ref name="isInput" scoped="" ref="0x407ac508"/>
        <function-ref name="toggle" scoped="" ref="0x407ac5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x407ac6c8"/>
        <function-ref name="get" scoped="" ref="0x407ac7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ac888"/>
        <function-ref name="set" scoped="" ref="0x407ac968"/>
        <function-ref name="clr" scoped="" ref="0x407aca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x407afb80" loc="47:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x407afb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407afd58"/>
        <function-ref name="disable" scoped="" ref="0x407afe38"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407aff18"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407ac010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x407abac0" loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x407abac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407abc98"/>
        <function-ref name="runTask" scoped="" ref="0x407abd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4090a880" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4090a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090ab58"/>
        <function-ref name="write" scoped="" ref="0x4090ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40910bd8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40910bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40910db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4090de50" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4090de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090b050"/>
        <function-ref name="write" scoped="" ref="0x4090b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409096a8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409096a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40909880"/>
        <function-ref name="write" scoped="" ref="0x40909960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40909ae0" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40909ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40909cb8"/>
        <function-ref name="write" scoped="" ref="0x40909d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40903cb8" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40903cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40903e90"/>
        <function-ref name="write" scoped="" ref="0x40920010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40904b20" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40904b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40904cf8"/>
        <function-ref name="write" scoped="" ref="0x40904dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x4090f6c0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x4090f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409042b0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40904488"/>
        <function-ref name="write" scoped="" ref="0x40904568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4090b6e8" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4090b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090b8c0"/>
        <function-ref name="write" scoped="" ref="0x4090b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4090a010" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4090a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090a1e8"/>
        <function-ref name="write" scoped="" ref="0x4090a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40907468" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40907468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40907640"/>
        <function-ref name="write" scoped="" ref="0x40907720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40909f18" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40909f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40908108"/>
        <function-ref name="write" scoped="" ref="0x409081e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40910010" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40910010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409101e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x409102c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409103a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x4090e4e8" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x4090e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x4090e840" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x4090e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x4090ec18" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x4090ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409046e8" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409046e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409048c0"/>
        <function-ref name="write" scoped="" ref="0x409049a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x4090fd70" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x4090fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x4090bb20" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x4090bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090bcf8"/>
        <function-ref name="write" scoped="" ref="0x4090bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4090b2b0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4090b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090b488"/>
        <function-ref name="write" scoped="" ref="0x4090b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40910880" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40910880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40910a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40903880" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40903880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40903a58"/>
        <function-ref name="write" scoped="" ref="0x40903b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40903010" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40903010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409031e8"/>
        <function-ref name="write" scoped="" ref="0x409032c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409078a0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409078a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40907a78"/>
        <function-ref name="write" scoped="" ref="0x40907b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40906e38" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40906e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40904050"/>
        <function-ref name="write" scoped="" ref="0x40904130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409087a0" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409087a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40908978"/>
        <function-ref name="write" scoped="" ref="0x40908a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40920190" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40920190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40920568"/>
        <function-ref name="writeDone" scoped="" ref="0x40920648"/>
        <function-ref name="write" scoped="" ref="0x40920728"/>
        <function-ref name="beginRead" scoped="" ref="0x40920808"/>
        <function-ref name="readDone" scoped="" ref="0x409208e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40910528" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40910528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40910700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x4090da18" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x4090da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090dbf0"/>
        <function-ref name="write" scoped="" ref="0x4090dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x4090a448" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x4090a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090a620"/>
        <function-ref name="write" scoped="" ref="0x4090a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40908368" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40908368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40908540"/>
        <function-ref name="write" scoped="" ref="0x40908620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4090adb8" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x4090adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40909010"/>
        <function-ref name="write" scoped="" ref="0x409090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x4090f010" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x4090f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40909270" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40909270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40909448"/>
        <function-ref name="write" scoped="" ref="0x40909528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40911918" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40911918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40911af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40911bd0"/>
        <function-ref name="request" scoped="" ref="0x40911cb0"/>
        <function-ref name="granted" scoped="" ref="0x40911d90"/>
        <function-ref name="isOwner" scoped="" ref="0x40911e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x4090d010" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x4090d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x4090d6c0" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x4090d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40906a00" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40906a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40906bd8"/>
        <function-ref name="write" scoped="" ref="0x40906cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409065c8" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409065c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409067a0"/>
        <function-ref name="write" scoped="" ref="0x40906880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x4090e190" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x4090e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40906190" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40906190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40906368"/>
        <function-ref name="write" scoped="" ref="0x40906448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40903448" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40903448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40903620"/>
        <function-ref name="write" scoped="" ref="0x40903700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40907cd8" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40907cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40907eb0"/>
        <function-ref name="write" scoped="" ref="0x40906010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x4090f368" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x4090f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090f540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40907030" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40907030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40907208"/>
        <function-ref name="write" scoped="" ref="0x409072e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x4090fa18" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x4090fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40908bd8" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40908bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40908db0"/>
        <function-ref name="write" scoped="" ref="0x40908e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x4090d368" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x4090d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4090d540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40920a68" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40920a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40920c40"/>
        <function-ref name="writeDone" scoped="" ref="0x40920d20"/>
        <function-ref name="write" scoped="" ref="0x40920e00"/>
        <function-ref name="beginRead" scoped="" ref="0x40920ee0"/>
        <function-ref name="readDone" scoped="" ref="0x4091f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x407d3340" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x407d3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x407d3518"/>
        <function-ref name="writeDone" scoped="" ref="0x407d35f8"/>
        <function-ref name="write" scoped="" ref="0x407d36d8"/>
        <function-ref name="beginRead" scoped="" ref="0x407d37b8"/>
        <function-ref name="readDone" scoped="" ref="0x407d3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x407d4a90" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x407d4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x407d4c68"/>
        <function-ref name="abortRelease" scoped="" ref="0x407d4d48"/>
        <function-ref name="attemptRelease" scoped="" ref="0x407d4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x407d3d88" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x407d3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407d2010"/>
        <function-ref name="write" scoped="" ref="0x407d20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x407d2600" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x407d2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407d27d8"/>
        <function-ref name="write" scoped="" ref="0x407d28b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407d4340" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407d4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407d4518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407d45f8"/>
        <function-ref name="request" scoped="" ref="0x407d46d8"/>
        <function-ref name="granted" scoped="" ref="0x407d47b8"/>
        <function-ref name="isOwner" scoped="" ref="0x407d4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x407d2dd8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x407d2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x407d1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x407dedc8" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x407dedc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e2010"/>
        <function-ref name="sendDone" scoped="" ref="0x407e20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x407e6c28" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x407e6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x407e6e00"/>
        <function-ref name="writeDone" scoped="" ref="0x407e6ee0"/>
        <function-ref name="write" scoped="" ref="0x407e5010"/>
        <function-ref name="beginRead" scoped="" ref="0x407e50f0"/>
        <function-ref name="readDone" scoped="" ref="0x407e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x407d19a8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x407d19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x407d1b80"/>
        <function-ref name="abortRelease" scoped="" ref="0x407d1c60"/>
        <function-ref name="attemptRelease" scoped="" ref="0x407d1d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x407e3a80" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x407e3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x407e3c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x407e2308" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x407e2308"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x407e24e0"/>
        <function-ref name="toIdle" scoped="" ref="0x407e25c0"/>
        <function-ref name="isState" scoped="" ref="0x407e26a0"/>
        <function-ref name="isIdle" scoped="" ref="0x407e2780"/>
        <function-ref name="requestState" scoped="" ref="0x407e2860"/>
        <function-ref name="forceState" scoped="" ref="0x407e2940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x407e4a70" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x407e4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407e4c48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e4d28"/>
        <function-ref name="request" scoped="" ref="0x407e4e08"/>
        <function-ref name="granted" scoped="" ref="0x407e4ee8"/>
        <function-ref name="isOwner" scoped="" ref="0x407e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x407e56a0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x407e56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407e5878"/>
        <function-ref name="write" scoped="" ref="0x407e5958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x407e5e48" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x407e5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407e4050"/>
        <function-ref name="write" scoped="" ref="0x407e4130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407e2ab0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407e2ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407e2c88"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407e2d68"/>
        <function-ref name="led1On" scoped="" ref="0x407e2e48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407e2f28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407e1018"/>
        <function-ref name="get" scoped="" ref="0x407e10f8"/>
        <function-ref name="led1Off" scoped="" ref="0x407e11d8"/>
        <function-ref name="led2Off" scoped="" ref="0x407e1558"/>
        <function-ref name="set" scoped="" ref="0x407e12b8"/>
        <function-ref name="led0On" scoped="" ref="0x407e1398"/>
        <function-ref name="led2On" scoped="" ref="0x407e1478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407e61f8" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407e61f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407e63d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e64b0"/>
        <function-ref name="request" scoped="" ref="0x407e6590"/>
        <function-ref name="granted" scoped="" ref="0x407e6670"/>
        <function-ref name="isOwner" scoped="" ref="0x407e6750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x407f5818" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x407f5818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407f59f0"/>
        <function-ref name="runTask" scoped="" ref="0x407f5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x407e4630" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x407e4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x407e4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40827e40" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40827e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40811050"/>
        <function-ref name="toIdle" scoped="" ref="0x40811130"/>
        <function-ref name="isState" scoped="" ref="0x40811210"/>
        <function-ref name="isIdle" scoped="" ref="0x408112f0"/>
        <function-ref name="requestState" scoped="" ref="0x408113d0"/>
        <function-ref name="forceState" scoped="" ref="0x408114b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40826100" loc="66:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40826100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408262d8"/>
        <function-ref name="toIdle" scoped="" ref="0x408263b8"/>
        <function-ref name="isState" scoped="" ref="0x40826498"/>
        <function-ref name="isIdle" scoped="" ref="0x40826578"/>
        <function-ref name="requestState" scoped="" ref="0x40826658"/>
        <function-ref name="forceState" scoped="" ref="0x40826738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40822128" loc="66:/opt/tinyos-2.1.1/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40822128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40822300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40822758" loc="67:/opt/tinyos-2.1.1/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40822758"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40822930"/>
        <function-ref name="toIdle" scoped="" ref="0x40822a10"/>
        <function-ref name="isState" scoped="" ref="0x40822af0"/>
        <function-ref name="isIdle" scoped="" ref="0x40822bd0"/>
        <function-ref name="requestState" scoped="" ref="0x40822cb0"/>
        <function-ref name="forceState" scoped="" ref="0x40822d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408ee668" loc="43:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408ee668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ee840"/>
        <function-ref name="sendDone" scoped="" ref="0x408ee920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408ee330" loc="42:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408ee330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408ee508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408238b0" loc="39:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408238b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40823a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40823be8" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40823be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40823dc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40823ea0"/>
        <function-ref name="request" scoped="" ref="0x408ee010"/>
        <function-ref name="granted" scoped="" ref="0x408ee0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x408ee1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x4082b648" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x4082b648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082b820"/>
        <function-ref name="sendDone" scoped="" ref="0x4082b900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x4082fd48" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4082fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4082ff20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4082f9c8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4082f9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4082fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x4082b010" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x4082b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x4082b1e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x4082b2c8"/>
        <function-ref name="splitRead" scoped="" ref="0x4082b3a8"/>
        <function-ref name="write" scoped="" ref="0x4082b488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4082bd98" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4082bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40846010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408460f0"/>
        <function-ref name="request" scoped="" ref="0x408461d0"/>
        <function-ref name="granted" scoped="" ref="0x408462b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40846390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x4086d1e0" loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x4086d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4086d3b8"/>
        <function-ref name="runTask" scoped="" ref="0x4086d498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40842d10" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40842d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40842ee8"/>
        <function-ref name="sendDone" scoped="" ref="0x40840010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x4083e158" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x4083e158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4083e330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4083e410"/>
        <function-ref name="request" scoped="" ref="0x4083e4f0"/>
        <function-ref name="granted" scoped="" ref="0x4083e5d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4083e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40842370" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40842370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40842548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40842010" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40842010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408421e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x4084b4d0" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x4084b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x4084b6a8"/>
        <function-ref name="sleep" scoped="" ref="0x4083fb10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x4084b868"/>
        <function-ref name="dataReady" scoped="" ref="0x4083fbf0"/>
        <function-ref name="initMaster" scoped="" ref="0x4084ba28"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4084bb08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4084bbe8"/>
        <function-ref name="read" scoped="" ref="0x4084bcc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4084bda8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4084be88"/>
        <function-ref name="setClock" scoped="" ref="0x4083f010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4083f0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4083f1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x4083f330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x4083f410"/>
        <function-ref name="write" scoped="" ref="0x4083f4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x4083f5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x4083f6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x4083f790"/>
        <function-ref name="getClock" scoped="" ref="0x4083f870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4083f950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x4084b788"/>
        <function-ref name="setClockPhase" scoped="" ref="0x4084b948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x4083fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x408426f8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x408426f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x408428d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x408429b0"/>
        <function-ref name="splitRead" scoped="" ref="0x40842a90"/>
        <function-ref name="write" scoped="" ref="0x40842b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40840488" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40840488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40840660"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40840740"/>
        <function-ref name="request" scoped="" ref="0x40840820"/>
        <function-ref name="granted" scoped="" ref="0x40840900"/>
        <function-ref name="isOwner" scoped="" ref="0x408409e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x408487b8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x408487b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40848990"/>
        <function-ref name="userId" scoped="" ref="0x40848a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40848c38" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40848c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40848e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40843e40" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40843e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x4088c050"/>
        <function-ref name="sleep" scoped="" ref="0x4088b470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x4088c210"/>
        <function-ref name="dataReady" scoped="" ref="0x4088b550"/>
        <function-ref name="initMaster" scoped="" ref="0x4088c3d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4088c4b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4088c590"/>
        <function-ref name="read" scoped="" ref="0x4088c670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4088c750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4088c830"/>
        <function-ref name="setClock" scoped="" ref="0x4088c910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4088c9f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4088cad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x4088cc30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x4088cd10"/>
        <function-ref name="write" scoped="" ref="0x4088cdf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x4088ced0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x4088b010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x4088b0f0"/>
        <function-ref name="getClock" scoped="" ref="0x4088b1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4088b2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x4088c130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x4088c2f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x4088b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40885e88" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40885e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40883070"/>
        <function-ref name="isInput" scoped="" ref="0x40883150"/>
        <function-ref name="toggle" scoped="" ref="0x40883230"/>
        <function-ref name="isOutput" scoped="" ref="0x40883310"/>
        <function-ref name="get" scoped="" ref="0x408833f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408834d0"/>
        <function-ref name="set" scoped="" ref="0x408835b0"/>
        <function-ref name="clr" scoped="" ref="0x40883690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x408869e8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x408869e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40886bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40886ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40886d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40886e60"/>
        <function-ref name="get" scoped="" ref="0x40885010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408850f0"/>
        <function-ref name="set" scoped="" ref="0x408851d0"/>
        <function-ref name="clr" scoped="" ref="0x408852b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40886010" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40886010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408861e8"/>
        <function-ref name="isInput" scoped="" ref="0x408862c8"/>
        <function-ref name="toggle" scoped="" ref="0x408863a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40886488"/>
        <function-ref name="get" scoped="" ref="0x40886568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40886648"/>
        <function-ref name="set" scoped="" ref="0x40886728"/>
        <function-ref name="clr" scoped="" ref="0x40886808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40884ac0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40884ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40884c98"/>
        <function-ref name="stop" scoped="" ref="0x40884d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40883898" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40883898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40883a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x408881c8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x408881c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408883a0"/>
        <function-ref name="sleep" scoped="" ref="0x408877f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40888560"/>
        <function-ref name="dataReady" scoped="" ref="0x408878d0"/>
        <function-ref name="initMaster" scoped="" ref="0x40888720"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40888800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408888e0"/>
        <function-ref name="read" scoped="" ref="0x408889c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40888aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40888b80"/>
        <function-ref name="setClock" scoped="" ref="0x40888c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40888d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40888e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40887010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408870f0"/>
        <function-ref name="write" scoped="" ref="0x408871d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x408872b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40887390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40887470"/>
        <function-ref name="getClock" scoped="" ref="0x40887550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40887630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40888480"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40888640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40887710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x408854a0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x408854a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40885678"/>
        <function-ref name="isInput" scoped="" ref="0x40885758"/>
        <function-ref name="toggle" scoped="" ref="0x40885838"/>
        <function-ref name="isOutput" scoped="" ref="0x40885918"/>
        <function-ref name="get" scoped="" ref="0x408859f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40885ad8"/>
        <function-ref name="set" scoped="" ref="0x40885bb8"/>
        <function-ref name="clr" scoped="" ref="0x40885c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x408f3490" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x408f3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x408f3678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x408f3758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x408f3d48" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x408f3d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x408f2010"/>
        <function-ref name="configure" scoped="" ref="0x408f20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408b1d40" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408b1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408b1f28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408f3018"/>
        <function-ref name="request" scoped="" ref="0x408f30f8"/>
        <function-ref name="granted" scoped="" ref="0x408f31d8"/>
        <function-ref name="isOwner" scoped="" ref="0x408f32b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x408f3898" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x408f3898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x408f3a70"/>
        <function-ref name="userId" scoped="" ref="0x408f3b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41444010" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41444010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414441e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41444348" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41444348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41444520"/>
        <function-ref name="isEmpty" scoped="" ref="0x41444600"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414446e0"/>
        <function-ref name="dequeue" scoped="" ref="0x414447c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41443a90" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41443a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41443c78"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41443d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x414423a8" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x414423a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41442590"/>
        <function-ref name="configure" scoped="" ref="0x41442670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x414427d0" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x414427d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x414429a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41442a88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41442b68"/>
        <function-ref name="dequeue" scoped="" ref="0x41442c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41443350" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41443350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41443538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41443618"/>
        <function-ref name="request" scoped="" ref="0x414436f8"/>
        <function-ref name="granted" scoped="" ref="0x414437d8"/>
        <function-ref name="isOwner" scoped="" ref="0x414438b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41443e98" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41443e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x414420c0"/>
        <function-ref name="userId" scoped="" ref="0x414421a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41442dc8" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41442dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41441010"/>
        <function-ref name="runTask" scoped="" ref="0x414410f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x408ed488" loc="45:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x408ed488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ed660"/>
        <function-ref name="isInput" scoped="" ref="0x408ed740"/>
        <function-ref name="toggle" scoped="" ref="0x408ed820"/>
        <function-ref name="isOutput" scoped="" ref="0x408ed900"/>
        <function-ref name="get" scoped="" ref="0x408ed9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408edac0"/>
        <function-ref name="set" scoped="" ref="0x408edba0"/>
        <function-ref name="clr" scoped="" ref="0x408edc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408f0570" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408f0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408f0748"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408f0828"/>
        <function-ref name="request" scoped="" ref="0x408f0908"/>
        <function-ref name="granted" scoped="" ref="0x408f09e8"/>
        <function-ref name="isOwner" scoped="" ref="0x408f0ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x408f0d30" loc="44:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x408f0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408f0f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408ed010"/>
        <function-ref name="request" scoped="" ref="0x408ed0f0"/>
        <function-ref name="granted" scoped="" ref="0x408ed1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x408ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40914e38" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40914e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40913208"/>
        <function-ref name="write" scoped="" ref="0x409132e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40919368" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40919368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40919540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409154b8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409154b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40915690"/>
        <function-ref name="write" scoped="" ref="0x40915770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40913cd8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40913cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40913eb0"/>
        <function-ref name="write" scoped="" ref="0x4092f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4092f190" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x4092f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092f368"/>
        <function-ref name="write" scoped="" ref="0x4092f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40929448" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40929448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40929620"/>
        <function-ref name="write" scoped="" ref="0x40929700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x4092b2b0" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x4092b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092b488"/>
        <function-ref name="write" scoped="" ref="0x4092b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40919d70" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40919d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40917010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4092ca00" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4092ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092cbd8"/>
        <function-ref name="write" scoped="" ref="0x4092ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40915d28" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40915d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40915f00"/>
        <function-ref name="write" scoped="" ref="0x40914010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409145c8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409145c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409147a0"/>
        <function-ref name="write" scoped="" ref="0x40914880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x4092eb20" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x4092eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092ecf8"/>
        <function-ref name="write" scoped="" ref="0x4092edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4092f5c8" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4092f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092f7a0"/>
        <function-ref name="write" scoped="" ref="0x4092f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4091a718" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4091a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4091a8f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x4091a9d0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4091aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40917b98" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40917b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40917d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40917ef0" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40917ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40916188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40916308" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40916308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409164e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x4092ce38" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4092ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092b050"/>
        <function-ref name="write" scoped="" ref="0x4092b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409174e8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409174e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409176c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40914190" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40914190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40914368"/>
        <function-ref name="write" scoped="" ref="0x40914448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409158f0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409158f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40915ac8"/>
        <function-ref name="write" scoped="" ref="0x40915ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40919010" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40919010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409191e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40929010" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40929010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409291e8"/>
        <function-ref name="write" scoped="" ref="0x409292c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x4092b6e8" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x4092b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092b8c0"/>
        <function-ref name="write" scoped="" ref="0x4092b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x4092d010" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x4092d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092d1e8"/>
        <function-ref name="write" scoped="" ref="0x4092d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4092c5c8" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4092c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092c7a0"/>
        <function-ref name="write" scoped="" ref="0x4092c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x4092fe38" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x4092fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092e050"/>
        <function-ref name="write" scoped="" ref="0x4092e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40929880" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40929880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40929c58"/>
        <function-ref name="writeDone" scoped="" ref="0x40929d38"/>
        <function-ref name="write" scoped="" ref="0x40929e18"/>
        <function-ref name="beginRead" scoped="" ref="0x40929ef8"/>
        <function-ref name="readDone" scoped="" ref="0x40928010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x4091ac30" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x4091ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4091ae08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40915080" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40915080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40915258"/>
        <function-ref name="write" scoped="" ref="0x40915338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40914a00" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40914a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40914bd8"/>
        <function-ref name="write" scoped="" ref="0x40914cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4092fa00" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4092fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092fbd8"/>
        <function-ref name="write" scoped="" ref="0x4092fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40913468" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40913468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40913640"/>
        <function-ref name="write" scoped="" ref="0x40913720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409196c0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40919898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409138a0" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409138a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40913a78"/>
        <function-ref name="write" scoped="" ref="0x40913b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4091a060" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4091a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4091a238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4091a318"/>
        <function-ref name="request" scoped="" ref="0x4091a3f8"/>
        <function-ref name="granted" scoped="" ref="0x4091a4d8"/>
        <function-ref name="isOwner" scoped="" ref="0x4091a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40916660" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40916660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40916838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40916d10" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40916d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40916ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4092c190" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4092c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092c368"/>
        <function-ref name="write" scoped="" ref="0x4092c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4092dcb8" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4092dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092de90"/>
        <function-ref name="write" scoped="" ref="0x4092c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40917840" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40917840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40917a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x4092d880" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4092d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092da58"/>
        <function-ref name="write" scoped="" ref="0x4092db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x4092bb20" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x4092bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092bcf8"/>
        <function-ref name="write" scoped="" ref="0x4092bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x4092d448" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x4092d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092d620"/>
        <function-ref name="write" scoped="" ref="0x4092d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40919a18" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40919a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40919bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x4092e6e8" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x4092e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092e8c0"/>
        <function-ref name="write" scoped="" ref="0x4092e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40917190" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40917190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40917368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x4092e2b0" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x4092e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092e488"/>
        <function-ref name="write" scoped="" ref="0x4092e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409169b8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409169b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40916b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40928190" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40928190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40928368"/>
        <function-ref name="writeDone" scoped="" ref="0x40928448"/>
        <function-ref name="write" scoped="" ref="0x40928528"/>
        <function-ref name="beginRead" scoped="" ref="0x40928608"/>
        <function-ref name="readDone" scoped="" ref="0x409286e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4093d5c8" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4093d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093d8a0"/>
        <function-ref name="write" scoped="" ref="0x4093d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40924a40" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40924a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40924c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4093fb68" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4093fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093fd40"/>
        <function-ref name="write" scoped="" ref="0x4093fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4093c448" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4093c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093c620"/>
        <function-ref name="write" scoped="" ref="0x4093c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4093c880" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x4093c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093ca58"/>
        <function-ref name="write" scoped="" ref="0x4093cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40936b20" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40936b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40936cf8"/>
        <function-ref name="write" scoped="" ref="0x40936dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40937a00" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40937a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40937bd8"/>
        <function-ref name="write" scoped="" ref="0x40937cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409234e8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409234e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409236c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40937190" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40937190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40937368"/>
        <function-ref name="write" scoped="" ref="0x40937448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4093e448" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4093e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093e620"/>
        <function-ref name="write" scoped="" ref="0x4093e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4093ecb8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4093ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093ee90"/>
        <function-ref name="write" scoped="" ref="0x4093d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409392b0" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409392b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40939488"/>
        <function-ref name="write" scoped="" ref="0x40939568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4093ccb8" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4093ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093ce90"/>
        <function-ref name="write" scoped="" ref="0x4093b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40925e50" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40925e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40924050"/>
        <function-ref name="abortRelease" scoped="" ref="0x40924130"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40924210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40922260" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40922260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40922438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409225b8" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409225b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40922810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40922990" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40922990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40922b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409375c8" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409375c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409377a0"/>
        <function-ref name="write" scoped="" ref="0x40937880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40923b98" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40923b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40923d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x4093e880" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x4093e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093ea58"/>
        <function-ref name="write" scoped="" ref="0x4093eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4093e010" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4093e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093e1e8"/>
        <function-ref name="write" scoped="" ref="0x4093e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409246e8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409246e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409248c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409366e8" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409366e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409368c0"/>
        <function-ref name="write" scoped="" ref="0x409369a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40937e38" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40937e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40936050"/>
        <function-ref name="write" scoped="" ref="0x40936130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409396e8" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409396e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409398c0"/>
        <function-ref name="write" scoped="" ref="0x409399a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40938cb8" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40938cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40938e90"/>
        <function-ref name="write" scoped="" ref="0x40937010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x4093b5c8" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x4093b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093b7a0"/>
        <function-ref name="write" scoped="" ref="0x4093b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40935010" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40935010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409353e8"/>
        <function-ref name="writeDone" scoped="" ref="0x409354c8"/>
        <function-ref name="write" scoped="" ref="0x409355a8"/>
        <function-ref name="beginRead" scoped="" ref="0x40935688"/>
        <function-ref name="readDone" scoped="" ref="0x40935768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40924390" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40924390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40924568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x4093f730" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x4093f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093f908"/>
        <function-ref name="write" scoped="" ref="0x4093f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x4093d190" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x4093d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093d368"/>
        <function-ref name="write" scoped="" ref="0x4093d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4093b190" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4093b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093b368"/>
        <function-ref name="write" scoped="" ref="0x4093b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4093db00" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x4093db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093dcd8"/>
        <function-ref name="write" scoped="" ref="0x4093ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40924d98" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40924d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40923010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4093c010" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x4093c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093c1e8"/>
        <function-ref name="write" scoped="" ref="0x4093c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40925798" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40925798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40925970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40925a50"/>
        <function-ref name="request" scoped="" ref="0x40925b30"/>
        <function-ref name="granted" scoped="" ref="0x40925c10"/>
        <function-ref name="isOwner" scoped="" ref="0x40925cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40922ce8" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40922ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40922ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x4093f3d8" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x4093f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4093f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40938880" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40938880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40938a58"/>
        <function-ref name="write" scoped="" ref="0x40938b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40938448" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40938448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40938620"/>
        <function-ref name="write" scoped="" ref="0x40938700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40923ef0" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40923ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409220e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40938010" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40938010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409381e8"/>
        <function-ref name="write" scoped="" ref="0x409382c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409362b0" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409362b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40936488"/>
        <function-ref name="write" scoped="" ref="0x40936568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40939b20" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40939b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40939cf8"/>
        <function-ref name="write" scoped="" ref="0x40939dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40923190" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40923190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40923368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x4093be38" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x4093be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40939050"/>
        <function-ref name="write" scoped="" ref="0x40939130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40923840" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40923840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40923a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x4093ba00" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x4093ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093bbd8"/>
        <function-ref name="write" scoped="" ref="0x4093bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x4093f080" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x4093f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4093f258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409358e8" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409358e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40935ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x40935ba0"/>
        <function-ref name="write" scoped="" ref="0x40935c80"/>
        <function-ref name="beginRead" scoped="" ref="0x40935d60"/>
        <function-ref name="readDone" scoped="" ref="0x40935e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x4094f140" loc="43:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4094f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4094f318"/>
        <function-ref name="changed" scoped="" ref="0x4094f3f8"/>
        <function-ref name="amGroup" scoped="" ref="0x4094f4d8"/>
        <function-ref name="setAddress" scoped="" ref="0x4094f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40941728" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40941728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40941900"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409419e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40941ac0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40941ba0"/>
        <function-ref name="setCca" scoped="" ref="0x40941c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40941d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40940800" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40940800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409409d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x40941010" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40941010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409411e8"/>
        <function-ref name="cancel" scoped="" ref="0x409412c8"/>
        <function-ref name="modify" scoped="" ref="0x409413a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40941488"/>
        <function-ref name="resend" scoped="" ref="0x40941568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40944af8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40944af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40944cd0"/>
        <function-ref name="stop" scoped="" ref="0x40944db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40940c68" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40940c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40940e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4096a3b0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4096a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4096a588"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4096a668"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4096a748"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4096a828"/>
        <function-ref name="setCca" scoped="" ref="0x4096a908"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4096a9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40965088" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40965088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40965b88"/>
        <function-ref name="clear" scoped="" ref="0x40963010"/>
        <function-ref name="isValid" scoped="" ref="0x409657d8"/>
        <function-ref name="set" scoped="" ref="0x409633c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40979cd0" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40979cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40979ea8"/>
        <function-ref name="write" scoped="" ref="0x40978010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40978220" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40978220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409783f8"/>
        <function-ref name="write" scoped="" ref="0x409784d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x4096aca8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x4096aca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x4096ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x4097a4c8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x4097a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4097a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x409626e0" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x409626e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409628b8"/>
        <function-ref name="disable" scoped="" ref="0x40962998"/>
        <function-ref name="captured" scoped="" ref="0x40962a78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40962b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40969778" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40969778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40967c38"/>
        <function-ref name="fired" scoped="" ref="0x40967408"/>
        <function-ref name="startAt" scoped="" ref="0x409678f8"/>
        <function-ref name="isRunning" scoped="" ref="0x40967680"/>
        <function-ref name="getAlarm" scoped="" ref="0x40967eb0"/>
        <function-ref name="start" scoped="" ref="0x40969ec8"/>
        <function-ref name="stop" scoped="" ref="0x40967190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40966188" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40966188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40966360"/>
        <function-ref name="setNetwork" scoped="" ref="0x40966440"/>
        <function-ref name="getRssi" scoped="" ref="0x40966520"/>
        <function-ref name="getNetwork" scoped="" ref="0x40966600"/>
        <function-ref name="getPower" scoped="" ref="0x409666e0"/>
        <function-ref name="getLqi" scoped="" ref="0x409667c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x4097b258" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4097b258"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097b430"/>
        <function-ref name="write" scoped="" ref="0x4097b510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x4097b760" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4097b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097b938"/>
        <function-ref name="write" scoped="" ref="0x4097ba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40974970" loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40974970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40974b48"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40974c28"/>
        <function-ref name="sfd" scoped="" ref="0x40974d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4096bc18" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4096bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096bdf0"/>
        <function-ref name="cancel" scoped="" ref="0x4096bed0"/>
        <function-ref name="modify" scoped="" ref="0x4096a010"/>
        <function-ref name="sendDone" scoped="" ref="0x4096a0f0"/>
        <function-ref name="resend" scoped="" ref="0x4096a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x4097c4a8" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4097c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4097c680"/>
        <function-ref name="abortRelease" scoped="" ref="0x4097c760"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4097c840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x4097a8f8" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x4097a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4097aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40961830" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40961830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40961a08"/>
        <function-ref name="isInput" scoped="" ref="0x40961ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40961bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40961ca8"/>
        <function-ref name="get" scoped="" ref="0x40961d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40961e68"/>
        <function-ref name="set" scoped="" ref="0x4097d010"/>
        <function-ref name="clr" scoped="" ref="0x4097d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4096b380" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4096b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4096b558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x409669c8" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x409669c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40966ba0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40966c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40962010" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40962010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409621e8"/>
        <function-ref name="isSet" scoped="" ref="0x409622c8"/>
        <function-ref name="cancel" scoped="" ref="0x409623a8"/>
        <function-ref name="set" scoped="" ref="0x40962488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x4097ad38" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4097ad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40979050"/>
        <function-ref name="write" scoped="" ref="0x40979130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4097dd30" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4097dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4097df08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4097c010"/>
        <function-ref name="request" scoped="" ref="0x4097c0f0"/>
        <function-ref name="granted" scoped="" ref="0x4097c1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4097c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40962d58" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40962d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40961010"/>
        <function-ref name="isInput" scoped="" ref="0x409610f0"/>
        <function-ref name="toggle" scoped="" ref="0x409611d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409612b0"/>
        <function-ref name="get" scoped="" ref="0x40961390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40961470"/>
        <function-ref name="set" scoped="" ref="0x40961550"/>
        <function-ref name="clr" scoped="" ref="0x40961630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x409786e8" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409786e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409788c0"/>
        <function-ref name="write" scoped="" ref="0x409789a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x40978bc8" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40978bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40978da0"/>
        <function-ref name="write" scoped="" ref="0x40978e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x4097bc48" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x4097bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4097be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x4097d2f0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x4097d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4097d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4097d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4097d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4097d768"/>
        <function-ref name="get" scoped="" ref="0x4097d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4097d928"/>
        <function-ref name="set" scoped="" ref="0x4097da08"/>
        <function-ref name="clr" scoped="" ref="0x4097dae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40974e98" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40974e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409760c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409761a0"/>
        <function-ref name="led1On" scoped="" ref="0x40976280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40976360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40976440"/>
        <function-ref name="get" scoped="" ref="0x40976520"/>
        <function-ref name="led1Off" scoped="" ref="0x40976600"/>
        <function-ref name="led2Off" scoped="" ref="0x40976980"/>
        <function-ref name="set" scoped="" ref="0x409766e0"/>
        <function-ref name="led0On" scoped="" ref="0x409767c0"/>
        <function-ref name="led2On" scoped="" ref="0x409768a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x409797b0" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409797b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40979988"/>
        <function-ref name="write" scoped="" ref="0x40979a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4096b720" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4096b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4096b8f8"/>
        <function-ref name="stop" scoped="" ref="0x4096b9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x4097ca68" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x4097ca68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4097cc40"/>
        <function-ref name="writeDone" scoped="" ref="0x4097cd20"/>
        <function-ref name="write" scoped="" ref="0x4097ce00"/>
        <function-ref name="beginRead" scoped="" ref="0x4097cee0"/>
        <function-ref name="readDone" scoped="" ref="0x4097b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x4097a098" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x4097a098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4097a270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x40979370" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40979370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40979548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409691b0" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409691b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40969388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409e15c8" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409e15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e18a0"/>
        <function-ref name="write" scoped="" ref="0x409e1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409c5a00" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409c5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409c2b68" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409c2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2d40"/>
        <function-ref name="write" scoped="" ref="0x409c2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409e0448" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409e0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e0620"/>
        <function-ref name="write" scoped="" ref="0x409e0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409e0880" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409e0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e0a58"/>
        <function-ref name="write" scoped="" ref="0x409e0b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409dab20" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409dab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dacf8"/>
        <function-ref name="write" scoped="" ref="0x409dadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409dba00" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409dba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dbbd8"/>
        <function-ref name="write" scoped="" ref="0x409dbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409c44e8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409c44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409db190" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409db190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db368"/>
        <function-ref name="write" scoped="" ref="0x409db448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409e2448" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409e2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e2620"/>
        <function-ref name="write" scoped="" ref="0x409e2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409e2cb8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409e2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e2e90"/>
        <function-ref name="write" scoped="" ref="0x409e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409de2b0" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409de2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409de488"/>
        <function-ref name="write" scoped="" ref="0x409de568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409e0cb8" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409e0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e0e90"/>
        <function-ref name="write" scoped="" ref="0x409df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409c6d98" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409c6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409c5010"/>
        <function-ref name="abortRelease" scoped="" ref="0x409c50f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409c51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409c3260" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409c3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409c35b8" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409c35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409c3990" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409c3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409db5c8" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409db5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db7a0"/>
        <function-ref name="write" scoped="" ref="0x409db880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409c4b98" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409c4b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409e2880" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409e2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e2a58"/>
        <function-ref name="write" scoped="" ref="0x409e2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409e2010" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e21e8"/>
        <function-ref name="write" scoped="" ref="0x409e22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409c56a8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409c56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409da6e8" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409da6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da8c0"/>
        <function-ref name="write" scoped="" ref="0x409da9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409dbe38" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409dbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da050"/>
        <function-ref name="write" scoped="" ref="0x409da130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409de6e8" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409de6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409de8c0"/>
        <function-ref name="write" scoped="" ref="0x409de9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409ddcb8" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409ddcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dde90"/>
        <function-ref name="write" scoped="" ref="0x409db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409df5c8" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409df5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409df7a0"/>
        <function-ref name="write" scoped="" ref="0x409df880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409d9010" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409d9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d93e8"/>
        <function-ref name="writeDone" scoped="" ref="0x409d94c8"/>
        <function-ref name="write" scoped="" ref="0x409d95a8"/>
        <function-ref name="beginRead" scoped="" ref="0x409d9688"/>
        <function-ref name="readDone" scoped="" ref="0x409d9768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409c5350" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409c5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409c2730" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409c2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2908"/>
        <function-ref name="write" scoped="" ref="0x409c29e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409e1190" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409e1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e1368"/>
        <function-ref name="write" scoped="" ref="0x409e1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409df190" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409df190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409df368"/>
        <function-ref name="write" scoped="" ref="0x409df448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409e1b00" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409e1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e1cd8"/>
        <function-ref name="write" scoped="" ref="0x409e1db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409c5d58" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409c5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409e0010" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e01e8"/>
        <function-ref name="write" scoped="" ref="0x409e02c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409c66e0" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409c66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409c68b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409c6998"/>
        <function-ref name="request" scoped="" ref="0x409c6a78"/>
        <function-ref name="granted" scoped="" ref="0x409c6b58"/>
        <function-ref name="isOwner" scoped="" ref="0x409c6c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409c3ce8" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409c3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409c23d8" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409c23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409dd880" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409dd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dda58"/>
        <function-ref name="write" scoped="" ref="0x409ddb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409dd448" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409dd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd620"/>
        <function-ref name="write" scoped="" ref="0x409dd700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409c4ef0" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409c4ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c30e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409dd010" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd1e8"/>
        <function-ref name="write" scoped="" ref="0x409dd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409da2b0" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409da2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da488"/>
        <function-ref name="write" scoped="" ref="0x409da568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409deb20" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409deb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409decf8"/>
        <function-ref name="write" scoped="" ref="0x409dedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409c4190" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409c4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409dfe38" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409dfe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409de050"/>
        <function-ref name="write" scoped="" ref="0x409de130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409c4840" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409c4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409dfa00" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409dfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dfbd8"/>
        <function-ref name="write" scoped="" ref="0x409dfcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409c2080" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409c2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c2258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409d98e8" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409d98e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d9ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x409d9ba0"/>
        <function-ref name="write" scoped="" ref="0x409d9c80"/>
        <function-ref name="beginRead" scoped="" ref="0x409d9d60"/>
        <function-ref name="readDone" scoped="" ref="0x409d9e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x409d3b60" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x409d3b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409d3d38"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x409d3e18"/>
        <function-ref name="sfd" scoped="" ref="0x409d3ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409f20b8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409f20b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409f2290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x409f2550" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x409f2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409f2728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409d36c0" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409d36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d3898"/>
        <function-ref name="stop" scoped="" ref="0x409d3978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x409ed300" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x409ed300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ed4d8"/>
        <function-ref name="isInput" scoped="" ref="0x409ed5b8"/>
        <function-ref name="toggle" scoped="" ref="0x409ed698"/>
        <function-ref name="isOutput" scoped="" ref="0x409ed778"/>
        <function-ref name="get" scoped="" ref="0x409ed858"/>
        <function-ref name="makeOutput" scoped="" ref="0x409ed938"/>
        <function-ref name="set" scoped="" ref="0x409eda18"/>
        <function-ref name="clr" scoped="" ref="0x409edaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x409e83a0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x409e83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x409e8578"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x409e8658"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x409e8738"/>
        <function-ref name="syncDone" scoped="" ref="0x409e8818"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x409e88f8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x409e89d8"/>
        <function-ref name="setChannel" scoped="" ref="0x409e8ab8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x409e8b98"/>
        <function-ref name="setPanAddr" scoped="" ref="0x409e8c78"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x409e8d58"/>
        <function-ref name="getShortAddr" scoped="" ref="0x409e8e38"/>
        <function-ref name="sync" scoped="" ref="0x409e8f18"/>
        <function-ref name="getChannel" scoped="" ref="0x409e7010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x409e7170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x409fd570" loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x409fd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409fd748"/>
        <function-ref name="runTask" scoped="" ref="0x409fd828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409e7520" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409e7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409e6048"/>
        <function-ref name="clear" scoped="" ref="0x409e63f8"/>
        <function-ref name="isValid" scoped="" ref="0x409e7c70"/>
        <function-ref name="set" scoped="" ref="0x409e67a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x409edd10" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x409edd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409edee8"/>
        <function-ref name="isInput" scoped="" ref="0x409eb010"/>
        <function-ref name="toggle" scoped="" ref="0x409eb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409eb1d0"/>
        <function-ref name="get" scoped="" ref="0x409eb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409eb390"/>
        <function-ref name="set" scoped="" ref="0x409eb470"/>
        <function-ref name="clr" scoped="" ref="0x409eb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x409e5688" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409e5688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e5860"/>
        <function-ref name="write" scoped="" ref="0x409e5940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x409e5b50" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409e5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e5d28"/>
        <function-ref name="write" scoped="" ref="0x409e5e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x409e4510" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409e4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e46e8"/>
        <function-ref name="write" scoped="" ref="0x409e47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x409e96a0" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x409e96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x409e9878"/>
        <function-ref name="setNetwork" scoped="" ref="0x409e9958"/>
        <function-ref name="getRssi" scoped="" ref="0x409e9a38"/>
        <function-ref name="getNetwork" scoped="" ref="0x409e9b18"/>
        <function-ref name="getPower" scoped="" ref="0x409e9bf8"/>
        <function-ref name="getLqi" scoped="" ref="0x409e9cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x409efa28" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x409efa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409efc00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x409efce0"/>
        <function-ref name="sfd" scoped="" ref="0x409efdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x409eadf0" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409eadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409e9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x409ee880" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x409ee880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409eea58"/>
        <function-ref name="isInput" scoped="" ref="0x409eeb38"/>
        <function-ref name="toggle" scoped="" ref="0x409eec18"/>
        <function-ref name="isOutput" scoped="" ref="0x409eecf8"/>
        <function-ref name="get" scoped="" ref="0x409eedd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409eeeb8"/>
        <function-ref name="set" scoped="" ref="0x409ed010"/>
        <function-ref name="clr" scoped="" ref="0x409ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x409e4a10" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409e4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e4be8"/>
        <function-ref name="write" scoped="" ref="0x409e4cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409ef1e8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409ef1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409ef3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x409e9ee0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x409e9ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x409e80e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x409e81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409ee010" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ee1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409ebea8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409ebea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409ea0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409ea1a0"/>
        <function-ref name="request" scoped="" ref="0x409ea280"/>
        <function-ref name="granted" scoped="" ref="0x409ea360"/>
        <function-ref name="isOwner" scoped="" ref="0x409ea440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x409e4030" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409e4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e4208"/>
        <function-ref name="write" scoped="" ref="0x409e42e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x409ea668" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409ea668"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409ea840"/>
        <function-ref name="writeDone" scoped="" ref="0x409ea920"/>
        <function-ref name="write" scoped="" ref="0x409eaa00"/>
        <function-ref name="beginRead" scoped="" ref="0x409eaae0"/>
        <function-ref name="readDone" scoped="" ref="0x409eabc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x409e4ef8" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409e4ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a04208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x409ee4a8" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x409ee4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409ee680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a04398" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a04398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a04570"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a04650"/>
        <function-ref name="led1On" scoped="" ref="0x40a04730"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a04810"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a048f0"/>
        <function-ref name="get" scoped="" ref="0x40a049d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40a04ab0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a04e30"/>
        <function-ref name="set" scoped="" ref="0x40a04b90"/>
        <function-ref name="led0On" scoped="" ref="0x40a04c70"/>
        <function-ref name="led2On" scoped="" ref="0x40a04d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x409e5168" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409e5168"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e5340"/>
        <function-ref name="write" scoped="" ref="0x409e5420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x409e6ca0" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409e6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409e6e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x409eb7e8" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x409eb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409eb9c0"/>
        <function-ref name="disable" scoped="" ref="0x409ebaa0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x409ebb80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x409ebc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x409e9268" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409e9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409e94c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409ef588" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409ef588"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409ef760"/>
        <function-ref name="stop" scoped="" ref="0x409ef840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a30918" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a30918"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a30af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40a33620" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a33620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a337f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40a338d8"/>
        <function-ref name="getRssi" scoped="" ref="0x40a339b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40a33a98"/>
        <function-ref name="getPower" scoped="" ref="0x40a33b78"/>
        <function-ref name="getLqi" scoped="" ref="0x40a33c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40a2f010" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a2f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a2fb10"/>
        <function-ref name="clear" scoped="" ref="0x40a2fec0"/>
        <function-ref name="isValid" scoped="" ref="0x40a2f760"/>
        <function-ref name="set" scoped="" ref="0x40a2d2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40a30468" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a30468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a30640"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a30720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a2b218" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a2b218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2b3f0"/>
        <function-ref name="isSet" scoped="" ref="0x40a2b4d0"/>
        <function-ref name="cancel" scoped="" ref="0x40a2b5b0"/>
        <function-ref name="set" scoped="" ref="0x40a2b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a2d9d8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a2d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a2c5b0"/>
        <function-ref name="clear" scoped="" ref="0x40a2c960"/>
        <function-ref name="isValid" scoped="" ref="0x40a2c200"/>
        <function-ref name="set" scoped="" ref="0x40a2cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40a33ec8" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40a33ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a300c0"/>
        <function-ref name="noAck" scoped="" ref="0x40a301a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a30280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a27328" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a27328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a27500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40a28010" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a28010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a281e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40a282c8"/>
        <function-ref name="getRssi" scoped="" ref="0x40a283a8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40a28488"/>
        <function-ref name="getPower" scoped="" ref="0x40a28568"/>
        <function-ref name="getLqi" scoped="" ref="0x40a28648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40a451c0" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a451c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a45398"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a45478"/>
        <function-ref name="getPayload" scoped="" ref="0x40a45558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a45638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a45718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40a27980" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a27980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a494a8"/>
        <function-ref name="clear" scoped="" ref="0x40a49858"/>
        <function-ref name="isValid" scoped="" ref="0x40a490f8"/>
        <function-ref name="set" scoped="" ref="0x40a49c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40a28e38" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a28e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a27050"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a27130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a47af8" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a47af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a47cd0"/>
        <function-ref name="isSet" scoped="" ref="0x40a47db0"/>
        <function-ref name="cancel" scoped="" ref="0x40a47e90"/>
        <function-ref name="set" scoped="" ref="0x40a45010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40a42708" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40a42708"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a42d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40a44180" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40a44180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a483a0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a483a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a48ea0"/>
        <function-ref name="clear" scoped="" ref="0x40a47280"/>
        <function-ref name="isValid" scoped="" ref="0x40a48af0"/>
        <function-ref name="set" scoped="" ref="0x40a47630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40a288b8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40a288b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a28a90"/>
        <function-ref name="noAck" scoped="" ref="0x40a28b70"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a28c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a664c8" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a664c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a66b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a66e60" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a66e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033de10"/>
            <typename><typedef-ref name="T32khz" ref="0x4033b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a605e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a60ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a60858"/>
        <function-ref name="overflow" scoped="" ref="0x40a60d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40a7f100" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40a7f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a7ebe0"/>
        <function-ref name="fired" scoped="" ref="0x40a7fe80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a7e5a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a7e348"/>
        <function-ref name="getdt" scoped="" ref="0x40a770b8"/>
        <function-ref name="gett0" scoped="" ref="0x40a7ee38"/>
        <function-ref name="isRunning" scoped="" ref="0x40a7e0f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a7f728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a7e8c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a7f9a8"/>
        <function-ref name="stop" scoped="" ref="0x40a7fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a77418" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a77418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a77a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a5ff28" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a5ff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a80110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40a72d20" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40a72d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a70498"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a70988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a70710"/>
        <function-ref name="overflow" scoped="" ref="0x40a70c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a76ad0" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a76ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a76ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40a730b0" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40a730b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a725c8"/>
        <function-ref name="fired" scoped="" ref="0x40a73d18"/>
        <function-ref name="startAt" scoped="" ref="0x40a72288"/>
        <function-ref name="isRunning" scoped="" ref="0x40a72010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a72840"/>
        <function-ref name="start" scoped="" ref="0x40a73800"/>
        <function-ref name="stop" scoped="" ref="0x40a73aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ac5a78" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ac5a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ac2010"/>
        <function-ref name="fired" scoped="" ref="0x40ac3718"/>
        <function-ref name="startAt" scoped="" ref="0x40ac3c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40ac3990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ac2288"/>
        <function-ref name="start" scoped="" ref="0x40ac3200"/>
        <function-ref name="stop" scoped="" ref="0x40ac34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ac5640" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ac5640"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e9ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e9ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ac5818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ac25b8" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ac25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ac2d08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ac1288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ac1010"/>
        <function-ref name="overflow" scoped="" ref="0x40ac1500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x414c8278" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x414c8278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x414c8450"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x414c8530"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x414c8610"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x414c86f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x414c87d0"/>
        <function-ref name="setControl" scoped="" ref="0x414c88b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x414ce448" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x414ce448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414cd908"/>
        <function-ref name="fired" scoped="" ref="0x414cd0d8"/>
        <function-ref name="startAt" scoped="" ref="0x414cd5c8"/>
        <function-ref name="isRunning" scoped="" ref="0x414cd350"/>
        <function-ref name="getAlarm" scoped="" ref="0x414cdb80"/>
        <function-ref name="start" scoped="" ref="0x414ceb98"/>
        <function-ref name="stop" scoped="" ref="0x414cee38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414ce010" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414ce1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x414cdeb0" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x414cdeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414cc610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414ccb00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414cc888"/>
        <function-ref name="overflow" scoped="" ref="0x414ccd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x414c54f0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x414c54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x414c56c8"/>
        <function-ref name="compareBusy" scoped="" ref="0x414c57a8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x414c5888"/>
        <function-ref name="countBusy" scoped="" ref="0x414c5968"/>
        <function-ref name="getAssr" scoped="" ref="0x414c5a48"/>
        <function-ref name="setAssr" scoped="" ref="0x414c5b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x414c8aa0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x414c8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x414c5048"/>
        <function-ref name="fired" scoped="" ref="0x414c7638"/>
        <function-ref name="get" scoped="" ref="0x414c7120"/>
        <function-ref name="reset" scoped="" ref="0x414c78b0"/>
        <function-ref name="isOn" scoped="" ref="0x414c52c0"/>
        <function-ref name="set" scoped="" ref="0x414c7398"/>
        <function-ref name="start" scoped="" ref="0x414c7b28"/>
        <function-ref name="stop" scoped="" ref="0x414c7da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x414ca0c0" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x414ca0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x414c9b10"/>
        <function-ref name="test" scoped="" ref="0x414c9620"/>
        <function-ref name="get" scoped="" ref="0x414ca708"/>
        <function-ref name="setScale" scoped="" ref="0x414c9d88"/>
        <function-ref name="getScale" scoped="" ref="0x414c8048"/>
        <function-ref name="reset" scoped="" ref="0x414cae98"/>
        <function-ref name="overflow" scoped="" ref="0x414cac20"/>
        <function-ref name="isOn" scoped="" ref="0x414c9898"/>
        <function-ref name="set" scoped="" ref="0x414ca980"/>
        <function-ref name="start" scoped="" ref="0x414c9130"/>
        <function-ref name="stop" scoped="" ref="0x414c93a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40acd818" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40acd818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40acd9f0"/>
        <function-ref name="runTask" scoped="" ref="0x40acdad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40acfe50" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40acfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40acd350"/>
        <function-ref name="fired" scoped="" ref="0x40aceaf8"/>
        <function-ref name="startAt" scoped="" ref="0x40acd010"/>
        <function-ref name="isRunning" scoped="" ref="0x40aced70"/>
        <function-ref name="getAlarm" scoped="" ref="0x40acd5c8"/>
        <function-ref name="start" scoped="" ref="0x40ace5e0"/>
        <function-ref name="stop" scoped="" ref="0x40ace880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a74a88" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a74a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40acf650"/>
        <function-ref name="fired" scoped="" ref="0x40ad0830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40acf010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ad0ce0"/>
        <function-ref name="getdt" scoped="" ref="0x40acfb00"/>
        <function-ref name="gett0" scoped="" ref="0x40acf8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40ad0a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ad00d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40acf330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ad0358"/>
        <function-ref name="stop" scoped="" ref="0x40ad05d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40b12da8" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40b12da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b11010"/>
        <function-ref name="runTask" scoped="" ref="0x40b110f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40b15b78" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40b15b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b126a8"/>
        <function-ref name="fired" scoped="" ref="0x40b14938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b12068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b14de8"/>
        <function-ref name="getdt" scoped="" ref="0x40b12b58"/>
        <function-ref name="gett0" scoped="" ref="0x40b12900"/>
        <function-ref name="isRunning" scoped="" ref="0x40b14b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b141e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b12388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b14460"/>
        <function-ref name="stop" scoped="" ref="0x40b146e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40aef808" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40aef808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b153b8"/>
        <function-ref name="fired" scoped="" ref="0x40af1608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40af1d40"/>
        <function-ref name="isOneShot" scoped="" ref="0x40af1ad8"/>
        <function-ref name="getdt" scoped="" ref="0x40b15888"/>
        <function-ref name="gett0" scoped="" ref="0x40b15620"/>
        <function-ref name="isRunning" scoped="" ref="0x40af1870"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40aefe40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b15088"/>
        <function-ref name="startOneShot" scoped="" ref="0x40af1110"/>
        <function-ref name="stop" scoped="" ref="0x40af13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b102f8" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b102f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b10940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b10c90" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b10c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b0f3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b0f8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b0f668"/>
        <function-ref name="overflow" scoped="" ref="0x40b0fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b0ce10" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b0ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b27900"/>
        <function-ref name="fired" scoped="" ref="0x40b0bba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b272c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b27068"/>
        <function-ref name="getdt" scoped="" ref="0x40b27db0"/>
        <function-ref name="gett0" scoped="" ref="0x40b27b58"/>
        <function-ref name="isRunning" scoped="" ref="0x40b0bdf8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b0b448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b275e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b0b6c8"/>
        <function-ref name="stop" scoped="" ref="0x40b0b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b05010" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b05010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b03b00"/>
        <function-ref name="fired" scoped="" ref="0x40b05d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b034c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b03268"/>
        <function-ref name="getdt" scoped="" ref="0x40b28010"/>
        <function-ref name="gett0" scoped="" ref="0x40b03d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40b03010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b05638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b037e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b058b8"/>
        <function-ref name="stop" scoped="" ref="0x40b05b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40b1f880" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40b1f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1fb58"/>
        <function-ref name="write" scoped="" ref="0x40b1fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b25bd8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b25bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b25db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40b21e50" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40b21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b20050"/>
        <function-ref name="write" scoped="" ref="0x40b20130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40b1d6a8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b1d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1d880"/>
        <function-ref name="write" scoped="" ref="0x40b1d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40b1dae0" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40b1dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1dcb8"/>
        <function-ref name="write" scoped="" ref="0x40b1dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40b18cb8" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40b18cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b18e90"/>
        <function-ref name="write" scoped="" ref="0x40b16010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40b19b20" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40b19b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b19cf8"/>
        <function-ref name="write" scoped="" ref="0x40b19dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b246c0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b246c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b24898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b192b0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b192b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b19488"/>
        <function-ref name="write" scoped="" ref="0x40b19568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40b206e8" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40b206e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b208c0"/>
        <function-ref name="write" scoped="" ref="0x40b209a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40b1f010" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b1f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1f1e8"/>
        <function-ref name="write" scoped="" ref="0x40b1f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40b1b468" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40b1b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1b640"/>
        <function-ref name="write" scoped="" ref="0x40b1b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40b1df18" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40b1df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1c108"/>
        <function-ref name="write" scoped="" ref="0x40b1c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b25010" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b251e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b252c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b253a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b224e8" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b224e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b226c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b22840" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b22840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b22a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b22c18" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b22c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b22df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40b196e8" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b196e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b198c0"/>
        <function-ref name="write" scoped="" ref="0x40b199a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b24d70" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b24d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b22010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40b20b20" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40b20b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b20cf8"/>
        <function-ref name="write" scoped="" ref="0x40b20dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40b202b0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b202b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b20488"/>
        <function-ref name="write" scoped="" ref="0x40b20568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b25880" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b25880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b25a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40b18880" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40b18880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b18a58"/>
        <function-ref name="write" scoped="" ref="0x40b18b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40b18010" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40b18010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b181e8"/>
        <function-ref name="write" scoped="" ref="0x40b182c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40b1b8a0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40b1b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1ba78"/>
        <function-ref name="write" scoped="" ref="0x40b1bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40b1ae38" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40b1ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b19050"/>
        <function-ref name="write" scoped="" ref="0x40b19130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40b1c7a0" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40b1c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1c978"/>
        <function-ref name="write" scoped="" ref="0x40b1ca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b16190" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b16190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b16568"/>
        <function-ref name="writeDone" scoped="" ref="0x40b16648"/>
        <function-ref name="write" scoped="" ref="0x40b16728"/>
        <function-ref name="beginRead" scoped="" ref="0x40b16808"/>
        <function-ref name="readDone" scoped="" ref="0x40b168e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b25528" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b25528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b25700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b21a18" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b21a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b21bf0"/>
        <function-ref name="write" scoped="" ref="0x40b21cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40b1f448" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40b1f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1f620"/>
        <function-ref name="write" scoped="" ref="0x40b1f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40b1c368" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40b1c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1c540"/>
        <function-ref name="write" scoped="" ref="0x40b1c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40b1fdb8" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40b1fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1d010"/>
        <function-ref name="write" scoped="" ref="0x40b1d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b24010" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b241e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40b1d270" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b1d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1d448"/>
        <function-ref name="write" scoped="" ref="0x40b1d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a31908" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a31908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a31ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a31bc0"/>
        <function-ref name="request" scoped="" ref="0x40a31ca0"/>
        <function-ref name="granted" scoped="" ref="0x40a31d80"/>
        <function-ref name="isOwner" scoped="" ref="0x40a31e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b21010" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b21010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b211e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b216c0" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b216c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b21898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40b1aa00" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40b1aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1abd8"/>
        <function-ref name="write" scoped="" ref="0x40b1acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40b1a5c8" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40b1a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1a7a0"/>
        <function-ref name="write" scoped="" ref="0x40b1a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b22190" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b22190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b22368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40b1a190" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b1a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1a368"/>
        <function-ref name="write" scoped="" ref="0x40b1a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40b18448" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40b18448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b18620"/>
        <function-ref name="write" scoped="" ref="0x40b18700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40b1bcd8" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40b1bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1beb0"/>
        <function-ref name="write" scoped="" ref="0x40b1a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b24368" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b24368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b24540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40b1b030" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40b1b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1b208"/>
        <function-ref name="write" scoped="" ref="0x40b1b2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b24a18" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b24a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b24bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40b1cbd8" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40b1cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1cdb0"/>
        <function-ref name="write" scoped="" ref="0x40b1ce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b21368" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b21368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b21540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b16a68" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b16a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b16c40"/>
        <function-ref name="writeDone" scoped="" ref="0x40b16d20"/>
        <function-ref name="write" scoped="" ref="0x40b16e00"/>
        <function-ref name="beginRead" scoped="" ref="0x40b16ee0"/>
        <function-ref name="readDone" scoped="" ref="0x40b3c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40b4f948" loc="35:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b4f948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b4fb20"/>
        <function-ref name="rand32" scoped="" ref="0x40b4fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40b4f088" loc="34:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40b4f088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b4f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b2bda8" loc="33:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b2bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b50010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40b4b478" loc="37:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b4b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b4b650"/>
        <function-ref name="rand32" scoped="" ref="0x40b4b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40b4eb10" loc="36:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40b4eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b4b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b4e5f0" loc="35:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b4e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b4e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b29608" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b29608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b297e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40b298c0"/>
        <function-ref name="isState" scoped="" ref="0x40b299a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40b29a80"/>
        <function-ref name="requestState" scoped="" ref="0x40b29b60"/>
        <function-ref name="forceState" scoped="" ref="0x40b29c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b42a78" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b42a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b42c50"/>
        <function-ref name="getPayload" scoped="" ref="0x40b42d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b42e10"/>
        <function-ref name="cancel" scoped="" ref="0x40b42ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b3f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b42308" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b42308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b424e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b425c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b426a0"/>
        <function-ref name="cancel" scoped="" ref="0x40b42780"/>
        <function-ref name="sendDone" scoped="" ref="0x40b42860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b64430" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b64430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b64608"/>
        <function-ref name="getPayload" scoped="" ref="0x40b646e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b647c8"/>
        <function-ref name="cancel" scoped="" ref="0x40b648a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b64988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b3f940" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b3f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b3fb18"/>
        <function-ref name="getPayload" scoped="" ref="0x40b3fbf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b3fcd8"/>
        <function-ref name="cancel" scoped="" ref="0x40b3fdb8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b3fe98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40b63350" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b63350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b63528"/>
        <function-ref name="rand32" scoped="" ref="0x40b63608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b64040" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b64040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b64218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40b637f0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b637f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40b639c8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40b63aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40b64b00" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b64b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b64cd8"/>
        <function-ref name="toIdle" scoped="" ref="0x40b64db8"/>
        <function-ref name="isState" scoped="" ref="0x40b64e98"/>
        <function-ref name="isIdle" scoped="" ref="0x40b63010"/>
        <function-ref name="requestState" scoped="" ref="0x40b630f0"/>
        <function-ref name="forceState" scoped="" ref="0x40b631d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b3e738" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b3e738"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b3e910"/>
        <function-ref name="toIdle" scoped="" ref="0x40b3e9f0"/>
        <function-ref name="isState" scoped="" ref="0x40b3ead0"/>
        <function-ref name="isIdle" scoped="" ref="0x40b3ebb0"/>
        <function-ref name="requestState" scoped="" ref="0x40b3ec90"/>
        <function-ref name="forceState" scoped="" ref="0x40b3ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b57688" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b57688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b57860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b41d68" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b41d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b57010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40b57260" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40b57260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b57438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b52010" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b52010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b521e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b54b48" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b54b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b54d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b543d8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b543d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b545b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40b523d0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b523d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40b525a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40b52688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40b54800" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40b54800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b549d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b67748" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b67748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b67920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b67af8" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b67af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b67cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b67db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b67e90"/>
        <function-ref name="cancel" scoped="" ref="0x40b66010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b660f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b68090" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b68090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b68268"/>
        <function-ref name="getPayload" scoped="" ref="0x40b68348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b68428"/>
        <function-ref name="cancel" scoped="" ref="0x40b68508"/>
        <function-ref name="sendDone" scoped="" ref="0x40b685e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40b68b40" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40b68b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b68d18"/>
        <function-ref name="getPayload" scoped="" ref="0x40b68df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b68ed8"/>
        <function-ref name="cancel" scoped="" ref="0x40b67010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b670f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b68770" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b68770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b68948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b699a0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b699a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b69b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b69c58"/>
        <function-ref name="request" scoped="" ref="0x40b69d38"/>
        <function-ref name="granted" scoped="" ref="0x40b69e18"/>
        <function-ref name="isOwner" scoped="" ref="0x40b69ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40b67320" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40b67320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b674f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b89550" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b89550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b89728"/>
        <function-ref name="getPayload" scoped="" ref="0x40b89808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b898e8"/>
        <function-ref name="cancel" scoped="" ref="0x40b899c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b89aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b89cb8" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b89cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b89e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x40b9d3c0" loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x40b9d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b9d598"/>
        <function-ref name="runTask" scoped="" ref="0x40b9d678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40b88060" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40b88060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40b88238"/>
        <function-ref name="setNetwork" scoped="" ref="0x40b88318"/>
        <function-ref name="getRssi" scoped="" ref="0x40b883f8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40b884d8"/>
        <function-ref name="getPower" scoped="" ref="0x40b885b8"/>
        <function-ref name="getLqi" scoped="" ref="0x40b88698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40b8a9b8" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40b8a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b8ab90"/>
        <function-ref name="getPayload" scoped="" ref="0x40b8ac70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b8ad50"/>
        <function-ref name="cancel" scoped="" ref="0x40b8ae30"/>
        <function-ref name="sendDone" scoped="" ref="0x40b8af10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40b88d58" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40b88d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40b87010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40b870f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40b871d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40b872b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40b88880" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b88880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40b88a58"/>
        <function-ref name="getMetadata" scoped="" ref="0x40b88b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40b8a5e8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40b8a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b8a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b8b718" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b8b718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b8b8f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b8b9d0"/>
        <function-ref name="request" scoped="" ref="0x40b8bab0"/>
        <function-ref name="granted" scoped="" ref="0x40b8bb90"/>
        <function-ref name="isOwner" scoped="" ref="0x40b8bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40b8be58" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40b8be58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b8a050"/>
        <function-ref name="getPayload" scoped="" ref="0x40b8a130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b8a210"/>
        <function-ref name="cancel" scoped="" ref="0x40b8a2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b8a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40b89160" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40b89160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b89338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bb49a0" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bb49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bb4b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40bb4cd8" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40bb4cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40bb4eb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40bb3010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40bb30f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40bb31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40baef18" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40baef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bad108"/>
        <function-ref name="stopDone" scoped="" ref="0x40bad1e8"/>
        <function-ref name="start" scoped="" ref="0x40bad2c8"/>
        <function-ref name="stop" scoped="" ref="0x40bad3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40baddf0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40baddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bac010"/>
        <function-ref name="getPayload" scoped="" ref="0x40bac0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bac1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40bac2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bac390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bac5a0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bac5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bac778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b58d98" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b58d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bae010"/>
        <function-ref name="getPayload" scoped="" ref="0x40bae0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bae1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40bae2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bae390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40bae8e0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40bae8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40baeab8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40baeb98"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40baec78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40baed58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40bad5a0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40bad5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bad778"/>
        <function-ref name="toIdle" scoped="" ref="0x40bad858"/>
        <function-ref name="isState" scoped="" ref="0x40bad938"/>
        <function-ref name="isIdle" scoped="" ref="0x40bada18"/>
        <function-ref name="requestState" scoped="" ref="0x40badaf8"/>
        <function-ref name="forceState" scoped="" ref="0x40badbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40bac9c0" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40bac9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bacb98"/>
        <function-ref name="stopDone" scoped="" ref="0x40bacc78"/>
        <function-ref name="start" scoped="" ref="0x40bacd58"/>
        <function-ref name="stop" scoped="" ref="0x40bace38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bae518" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bae518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bae6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40bab600" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40bab600"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40bab7d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40bab8b8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40bab998"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40baba78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40baa6a8" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40baa6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40baa880"/>
        <function-ref name="toIdle" scoped="" ref="0x40baa960"/>
        <function-ref name="isState" scoped="" ref="0x40baaa40"/>
        <function-ref name="isIdle" scoped="" ref="0x40baab20"/>
        <function-ref name="requestState" scoped="" ref="0x40baac00"/>
        <function-ref name="forceState" scoped="" ref="0x40baace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ba2010" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ba2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba21e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba22c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba23a8"/>
        <function-ref name="cancel" scoped="" ref="0x40ba2488"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ba3158" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ba3158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba3330"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba3410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba34f0"/>
        <function-ref name="cancel" scoped="" ref="0x40ba35d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba36b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40ba3858" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40ba3858"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40ba3a30"/>
        <function-ref name="setRetries" scoped="" ref="0x40ba3b10"/>
        <function-ref name="getRetries" scoped="" ref="0x40ba3bf0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40ba3cd0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40ba3db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40bc8510" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bc8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bc86e8"/>
        <function-ref name="noAck" scoped="" ref="0x40bc87c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bc88a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40ba2cb0" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40ba2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40ba2e88"/>
        <function-ref name="setRetries" scoped="" ref="0x40bc8010"/>
        <function-ref name="getRetries" scoped="" ref="0x40bc80f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40bc81d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40bc82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bb85a0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bb85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb8778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bb9df8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bb9df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb8010"/>
        <function-ref name="getPayload" scoped="" ref="0x40bb80f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb81d0"/>
        <function-ref name="cancel" scoped="" ref="0x40bb82b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb8390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40bb7670" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40bb7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40bb7848"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40bb7928"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40bb7a08"/>
        <function-ref name="syncDone" scoped="" ref="0x40bb7ae8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40bb7bc8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40bb7ca8"/>
        <function-ref name="setChannel" scoped="" ref="0x40bb7d88"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40bb7e68"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40bb6010"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40bb60f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40bb61d0"/>
        <function-ref name="sync" scoped="" ref="0x40bb62b0"/>
        <function-ref name="getChannel" scoped="" ref="0x40bb6390"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40bb64f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40bb95a8" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40bb95a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40bb9780"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40bb9860"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40bb9940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40bb9a20"/>
        <function-ref name="setCca" scoped="" ref="0x40bb9b00"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40bb9be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40bbaf10" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40bbaf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40bb9108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40bb6e40" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40bb6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40bb5050"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40bb5130"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40bb5210"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40bb52f0"/>
        <function-ref name="setCca" scoped="" ref="0x40bb53d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40bb54b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40bba518" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bba518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bba6f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bba7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bba8b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bba990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bbaa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40bbc4e8" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40bbc4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bbc6c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bbc7a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bbc880"/>
        <function-ref name="cancel" scoped="" ref="0x40bbc960"/>
        <function-ref name="sendDone" scoped="" ref="0x40bbca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40bbb580" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40bbb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bbb758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40bb8938" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40bb8938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40bb8b10"/>
        <function-ref name="setNetwork" scoped="" ref="0x40bb8bf0"/>
        <function-ref name="getRssi" scoped="" ref="0x40bb8cd0"/>
        <function-ref name="getNetwork" scoped="" ref="0x40bb8db0"/>
        <function-ref name="getPower" scoped="" ref="0x40bb8e90"/>
        <function-ref name="getLqi" scoped="" ref="0x40bb7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40bb6700" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40bb6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40bb6958"/>
        <function-ref name="changed" scoped="" ref="0x40bb6a38"/>
        <function-ref name="amGroup" scoped="" ref="0x40bb6b18"/>
        <function-ref name="setAddress" scoped="" ref="0x40bb6bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bb71f8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bb71f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bb73d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bb74b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bbcea8" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bbcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bbb0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bb5db8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bb5db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bde010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bde0f0"/>
        <function-ref name="led1On" scoped="" ref="0x40bde1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bde2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bde390"/>
        <function-ref name="get" scoped="" ref="0x40bde470"/>
        <function-ref name="led1Off" scoped="" ref="0x40bde550"/>
        <function-ref name="led2Off" scoped="" ref="0x40bde8d0"/>
        <function-ref name="set" scoped="" ref="0x40bde630"/>
        <function-ref name="led0On" scoped="" ref="0x40bde710"/>
        <function-ref name="led2On" scoped="" ref="0x40bde7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bbb8f0" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bbb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bbbac8"/>
        <function-ref name="source" scoped="" ref="0x40bbbba8"/>
        <function-ref name="address" scoped="" ref="0x40bbbc88"/>
        <function-ref name="destination" scoped="" ref="0x40bbbd68"/>
        <function-ref name="setSource" scoped="" ref="0x40bbbe48"/>
        <function-ref name="setDestination" scoped="" ref="0x40bbbf28"/>
        <function-ref name="type" scoped="" ref="0x40bba018"/>
        <function-ref name="setType" scoped="" ref="0x40bba0f8"/>
        <function-ref name="isForMe" scoped="" ref="0x40bba1d8"/>
        <function-ref name="setGroup" scoped="" ref="0x40bba2b8"/>
        <function-ref name="localGroup" scoped="" ref="0x40bba398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x40bb56f0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x40bb56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bb58c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bb59a8"/>
        <function-ref name="request" scoped="" ref="0x40bb5a88"/>
        <function-ref name="granted" scoped="" ref="0x40bb5b68"/>
        <function-ref name="isOwner" scoped="" ref="0x40bb5c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c12bb0" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c12bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c12d88"/>
        <function-ref name="stopDone" scoped="" ref="0x40c12e68"/>
        <function-ref name="start" scoped="" ref="0x40c0f010"/>
        <function-ref name="stop" scoped="" ref="0x40c0f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c0f550" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c0f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c0f728"/>
        <function-ref name="getPayload" scoped="" ref="0x40c0f808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c0f8e8"/>
        <function-ref name="cancel" scoped="" ref="0x40c0f9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c0faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c0d288" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c0d288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c0d460"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c0d540"/>
        <function-ref name="getPayload" scoped="" ref="0x40c0d620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c0d700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c0d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c0ff10" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c0ff10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c0d108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c0cbc8" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c0cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c0cda0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c0ce80"/>
        <function-ref name="led1On" scoped="" ref="0x40c0b010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c0b0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c0b1d0"/>
        <function-ref name="get" scoped="" ref="0x40c0b2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c0b390"/>
        <function-ref name="led2Off" scoped="" ref="0x40c0b710"/>
        <function-ref name="set" scoped="" ref="0x40c0b470"/>
        <function-ref name="led0On" scoped="" ref="0x40c0b550"/>
        <function-ref name="led2On" scoped="" ref="0x40c0b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c0c690" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c0c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c0c868"/>
        <function-ref name="noAck" scoped="" ref="0x40c0c948"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c0ca28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c0d978" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c0d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c0db50"/>
        <function-ref name="source" scoped="" ref="0x40c0dc30"/>
        <function-ref name="address" scoped="" ref="0x40c0dd10"/>
        <function-ref name="destination" scoped="" ref="0x40c0ddf0"/>
        <function-ref name="setSource" scoped="" ref="0x40c0ded0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c0c010"/>
        <function-ref name="type" scoped="" ref="0x40c0c0f0"/>
        <function-ref name="setType" scoped="" ref="0x40c0c1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40c0c2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40c0c390"/>
        <function-ref name="localGroup" scoped="" ref="0x40c0c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c59360" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c59360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c59538"/>
        <function-ref name="getPayload" scoped="" ref="0x40c59618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c596f8"/>
        <function-ref name="cancel" scoped="" ref="0x40c597d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c598b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c59a18" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c59a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c59bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c0a108" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c0a108"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c0a2f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c0a3d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c0a4b0"/>
        <function-ref name="cancel" scoped="" ref="0x40c0a590"/>
        <function-ref name="sendDone" scoped="" ref="0x40c0a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c09770" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c09770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c09948"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c09a28"/>
        <function-ref name="getPayload" scoped="" ref="0x40c09b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c09be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c09cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c0a848" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c0a848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c0aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c09e08" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c09e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c59010"/>
        <function-ref name="noAck" scoped="" ref="0x40c590f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c591d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c0ab70" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c0ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c0ad48"/>
        <function-ref name="source" scoped="" ref="0x40c0ae28"/>
        <function-ref name="address" scoped="" ref="0x40c0af08"/>
        <function-ref name="destination" scoped="" ref="0x40c09010"/>
        <function-ref name="setSource" scoped="" ref="0x40c090f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c091d0"/>
        <function-ref name="type" scoped="" ref="0x40c092b0"/>
        <function-ref name="setType" scoped="" ref="0x40c09390"/>
        <function-ref name="isForMe" scoped="" ref="0x40c09470"/>
        <function-ref name="setGroup" scoped="" ref="0x40c09550"/>
        <function-ref name="localGroup" scoped="" ref="0x40c09630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c541d0" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c541d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c543a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40c54488"/>
        <function-ref name="start" scoped="" ref="0x40c54568"/>
        <function-ref name="stop" scoped="" ref="0x40c54648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c53100" loc="41:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403bad70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c532d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c533b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c53498"/>
        <function-ref name="cancel" scoped="" ref="0x40c53578"/>
        <function-ref name="sendDone" scoped="" ref="0x40c53658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c58df8" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c58df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c54010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c54a90" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c54a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403bad70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c54c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c4eca8" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c4eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c4ee80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c52010"/>
        <function-ref name="led1On" scoped="" ref="0x40c520f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c521d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c522b0"/>
        <function-ref name="get" scoped="" ref="0x40c52390"/>
        <function-ref name="led1Off" scoped="" ref="0x40c52470"/>
        <function-ref name="led2Off" scoped="" ref="0x40c527f0"/>
        <function-ref name="set" scoped="" ref="0x40c52550"/>
        <function-ref name="led0On" scoped="" ref="0x40c52630"/>
        <function-ref name="led2On" scoped="" ref="0x40c52710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40c4e7a0" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c4e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403bad70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40c4e978"/>
        <function-ref name="offset" scoped="" ref="0x40c4ea58"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40c4eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c4c1d0" loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c4c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c4c3a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40c4c488"/>
        <function-ref name="start" scoped="" ref="0x40c4c568"/>
        <function-ref name="stop" scoped="" ref="0x40c4c648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40c97d90" loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40c97d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c95010"/>
        <function-ref name="runTask" scoped="" ref="0x40c950f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40c70340" loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40c70340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c70518"/>
        <function-ref name="stop" scoped="" ref="0x40c705f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40c89788" loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40c89788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c89960"/>
        <function-ref name="runTask" scoped="" ref="0x40c89a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c52dd8" loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c52dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c4c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40c6a350" loc="73:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40c6a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40c6a528"/>
        <function-ref name="flush" scoped="" ref="0x40c6a608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40c98bd0" loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40c98bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c98da8"/>
        <function-ref name="runTask" scoped="" ref="0x40c98e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40c6ed08" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40c6ed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40c6eee0"/>
        <function-ref name="resetSend" scoped="" ref="0x40c73010"/>
        <function-ref name="dataReceived" scoped="" ref="0x40c730f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40c731d0"/>
        <function-ref name="putData" scoped="" ref="0x40c732b0"/>
        <function-ref name="putDone" scoped="" ref="0x40c73390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40c73470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c735e0" loc="71:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c735e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c737b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c73898"/>
        <function-ref name="led1On" scoped="" ref="0x40c73978"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c73a58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c73b38"/>
        <function-ref name="get" scoped="" ref="0x40c73c18"/>
        <function-ref name="led1Off" scoped="" ref="0x40c73cf8"/>
        <function-ref name="led2Off" scoped="" ref="0x40c700f0"/>
        <function-ref name="set" scoped="" ref="0x40c73dd8"/>
        <function-ref name="led0On" scoped="" ref="0x40c73eb8"/>
        <function-ref name="led2On" scoped="" ref="0x40c70010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40c94a70" loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40c94a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c94c48"/>
        <function-ref name="runTask" scoped="" ref="0x40c94d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40c74960" loc="65:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40c74960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40c74b38"/>
        <function-ref name="nextByte" scoped="" ref="0x40c74c18"/>
        <function-ref name="startSend" scoped="" ref="0x40c74cf8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40c74dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40c71a80" loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c71a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40c71c58"/>
        <function-ref name="byteReceived" scoped="" ref="0x40c71d38"/>
        <function-ref name="endPacket" scoped="" ref="0x40c71e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40d07e48" loc="264:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40d07e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d06050"/>
        <function-ref name="runTask" scoped="" ref="0x40d06130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d09a90" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d09a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403bad70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d09c78"/>
        <function-ref name="getPayload" scoped="" ref="0x40d09d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d09e38"/>
        <function-ref name="cancel" scoped="" ref="0x40d09f18"/>
        <function-ref name="sendDone" scoped="" ref="0x40d08010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40d062b0" loc="147:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40d062b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d06488"/>
        <function-ref name="runTask" scoped="" ref="0x40d06568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d096d0" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d096d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403bad70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d098b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40d08238" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40d08238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403bad70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40d08420"/>
        <function-ref name="offset" scoped="" ref="0x40d08500"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40d085e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d07230" loc="46:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d07230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d07408"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d074e8"/>
        <function-ref name="led1On" scoped="" ref="0x40d075c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d076a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d07788"/>
        <function-ref name="get" scoped="" ref="0x40d07868"/>
        <function-ref name="led1Off" scoped="" ref="0x40d07948"/>
        <function-ref name="led2On" scoped="" ref="0x40d07cc8"/>
        <function-ref name="set" scoped="" ref="0x40d07b08"/>
        <function-ref name="led2Off" scoped="" ref="0x40d07a28"/>
        <function-ref name="led0On" scoped="" ref="0x40d07be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40d08bf8" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40d08bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40d08dd0"/>
        <function-ref name="nextByte" scoped="" ref="0x40d08eb0"/>
        <function-ref name="startSend" scoped="" ref="0x40d07010"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40d070f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40d08720" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d08720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40d088f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x40d089d8"/>
        <function-ref name="endPacket" scoped="" ref="0x40d08ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40d29990" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d29990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d29b68"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d29c48"/>
        <function-ref name="receive" scoped="" ref="0x40d29d28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d29e08"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d29ee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d01010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d010f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40d056a8" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40d056a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40d05880"/>
        <function-ref name="resetSend" scoped="" ref="0x40d05960"/>
        <function-ref name="dataReceived" scoped="" ref="0x40d05a40"/>
        <function-ref name="resetReceive" scoped="" ref="0x40d05b20"/>
        <function-ref name="putData" scoped="" ref="0x40d05c00"/>
        <function-ref name="putDone" scoped="" ref="0x40d05ce0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40d05dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d01260" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d01260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d01438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d01518"/>
        <function-ref name="led1On" scoped="" ref="0x40d015f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d016d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d017b8"/>
        <function-ref name="get" scoped="" ref="0x40d01898"/>
        <function-ref name="led1Off" scoped="" ref="0x40d01978"/>
        <function-ref name="led2Off" scoped="" ref="0x40d01cf8"/>
        <function-ref name="set" scoped="" ref="0x40d01a58"/>
        <function-ref name="led0On" scoped="" ref="0x40d01b38"/>
        <function-ref name="led2On" scoped="" ref="0x40d01c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d152b0" loc="42:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d15488"/>
        <function-ref name="receive" scoped="" ref="0x40d15568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d1a490" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d1a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d1a668"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d1a748"/>
        <function-ref name="receive" scoped="" ref="0x40d1a828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d1a908"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d1a9e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d1aac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d1aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d1a010" loc="40:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d1a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d1a1e8"/>
        <function-ref name="stop" scoped="" ref="0x40d1a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d161c8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d161c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d163a0"/>
        <function-ref name="receive" scoped="" ref="0x40d16480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d16648" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d16648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d16820"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d16900"/>
        <function-ref name="receive" scoped="" ref="0x40d169e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d16ac0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d16ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d16c80"/>
        <function-ref name="sendDone" scoped="" ref="0x40d16d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d140d0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d140d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TMicro" ref="0x4033b450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d14820"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d14d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d14a98"/>
        <function-ref name="overflow" scoped="" ref="0x40d41010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d15cb0" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d15cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d15e88"/>
        <function-ref name="stop" scoped="" ref="0x40d16010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d40ae8" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d40ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d40cc0"/>
        <function-ref name="receive" scoped="" ref="0x40d40da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40d3f7b0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40d3f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d3f988"/>
        <function-ref name="stop" scoped="" ref="0x40d3fa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d40398" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d40398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d40570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d40f00" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d40f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d3f0f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d3f1d0"/>
        <function-ref name="receive" scoped="" ref="0x40d3f2b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d3f390"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d3f470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d3f550"/>
        <function-ref name="sendDone" scoped="" ref="0x40d3f630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d49c88" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d49c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TMicro" ref="0x4033b450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d473f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d478e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d47668"/>
        <function-ref name="overflow" scoped="" ref="0x40d47b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40d49050" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40d49050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d49228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d49308"/>
        <function-ref name="rxDone" scoped="" ref="0x40d493e8"/>
        <function-ref name="txDone" scoped="" ref="0x40d494c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d495a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d49688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d49768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d49848"/>
        <function-ref name="tx" scoped="" ref="0x40d49928"/>
        <function-ref name="rx" scoped="" ref="0x40d49a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d406d0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d406d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d408a8"/>
        <function-ref name="stop" scoped="" ref="0x40d40988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40d3fbe8" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40d3fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d3fdc0"/>
        <function-ref name="stop" scoped="" ref="0x40d3fea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40d640b8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40d640b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d64290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d64370"/>
        <function-ref name="rxDone" scoped="" ref="0x40d64450"/>
        <function-ref name="txDone" scoped="" ref="0x40d64530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d64610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d646f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d647d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d648b0"/>
        <function-ref name="tx" scoped="" ref="0x40d64990"/>
        <function-ref name="rx" scoped="" ref="0x40d64a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40d63760" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40d63760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d63938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d63a18"/>
        <function-ref name="rxDone" scoped="" ref="0x40d63af8"/>
        <function-ref name="txDone" scoped="" ref="0x40d63bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d63cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d63d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d63e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d62010"/>
        <function-ref name="tx" scoped="" ref="0x40d620f0"/>
        <function-ref name="rx" scoped="" ref="0x40d621d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40d65b98" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40d65b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d65d70"/>
        <function-ref name="stop" scoped="" ref="0x40d65e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40d64cc8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40d64cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d64ea0"/>
        <function-ref name="stop" scoped="" ref="0x40d63010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40d63268" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40d63268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d63440"/>
        <function-ref name="stop" scoped="" ref="0x40d63520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40d65688" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40d65688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d65860"/>
        <function-ref name="stop" scoped="" ref="0x40d65940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40d629b0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40d629b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d62b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40d5f880" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40d5f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d5fa58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d5fb38"/>
        <function-ref name="rxDone" scoped="" ref="0x40d5fc18"/>
        <function-ref name="txDone" scoped="" ref="0x40d5fcf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d5fdd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d5feb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d5e010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d5e0f0"/>
        <function-ref name="tx" scoped="" ref="0x40d5e1d0"/>
        <function-ref name="rx" scoped="" ref="0x40d5e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40d5e4c0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40d5e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d5e698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40d5d390" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40d5d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d5d568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d5d648"/>
        <function-ref name="rxDone" scoped="" ref="0x40d5d728"/>
        <function-ref name="txDone" scoped="" ref="0x40d5d808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d5d8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d5d9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d5daa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d5db88"/>
        <function-ref name="tx" scoped="" ref="0x40d5dc68"/>
        <function-ref name="rx" scoped="" ref="0x40d5dd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40d5f368" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40d5f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d5f540"/>
        <function-ref name="stop" scoped="" ref="0x40d5f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40d5e910" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40d5e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d5eae8"/>
        <function-ref name="stop" scoped="" ref="0x40d5ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40d5ee40" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40d5ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d5d050"/>
        <function-ref name="stop" scoped="" ref="0x40d5d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40d5c010" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40d5c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40d5c1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40d5c2c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40d5c3a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40d5c488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40d5c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40d5c750" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40d5c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40d5c928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40d62e00" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40d62e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d5f010"/>
        <function-ref name="stop" scoped="" ref="0x40d5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40db8610" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40db8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TMicro" ref="0x4033b450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db8d60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40db5288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40db5010"/>
        <function-ref name="overflow" scoped="" ref="0x40db5500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40db2088" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40db2088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TThree" ref="0x4035cbc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db27d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40db2cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40db2a50"/>
        <function-ref name="overflow" scoped="" ref="0x40db1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40dacd78" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40dacd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40dab010"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40dab0f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40dab1d0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40dab2b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40dab390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40dab470"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40dab550"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40dab630"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40dab710"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40dab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40dabb28" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40dabb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40da8640"/>
        <function-ref name="test" scoped="" ref="0x40da8150"/>
        <function-ref name="get" scoped="" ref="0x40daa200"/>
        <function-ref name="captured" scoped="" ref="0x40daa718"/>
        <function-ref name="reset" scoped="" ref="0x40daa9b8"/>
        <function-ref name="isOn" scoped="" ref="0x40da83c8"/>
        <function-ref name="set" scoped="" ref="0x40daa478"/>
        <function-ref name="start" scoped="" ref="0x40daac30"/>
        <function-ref name="stop" scoped="" ref="0x40daaea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40da8d50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40da8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40da6300"/>
        <function-ref name="fired" scoped="" ref="0x40da78f8"/>
        <function-ref name="get" scoped="" ref="0x40da73e0"/>
        <function-ref name="reset" scoped="" ref="0x40da7b70"/>
        <function-ref name="isOn" scoped="" ref="0x40da6578"/>
        <function-ref name="set" scoped="" ref="0x40da7658"/>
        <function-ref name="start" scoped="" ref="0x40da7de8"/>
        <function-ref name="stop" scoped="" ref="0x40da6088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40db1a58" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40db1a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40dac500"/>
        <function-ref name="test" scoped="" ref="0x40dac010"/>
        <function-ref name="get" scoped="" ref="0x40dad0b8"/>
        <function-ref name="setScale" scoped="" ref="0x40dac778"/>
        <function-ref name="getScale" scoped="" ref="0x40daca18"/>
        <function-ref name="reset" scoped="" ref="0x40dad848"/>
        <function-ref name="overflow" scoped="" ref="0x40dad5d0"/>
        <function-ref name="isOn" scoped="" ref="0x40dac288"/>
        <function-ref name="set" scoped="" ref="0x40dad330"/>
        <function-ref name="start" scoped="" ref="0x40dadac0"/>
        <function-ref name="stop" scoped="" ref="0x40dadd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40dd1370" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40dd1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40dd1548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40dd1628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40dd1708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40dd17e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40dd18c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40dd19a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40dd1a88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40dd1b68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40dd1c48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40dd1d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40dcd010" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40dcd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40dcc578"/>
        <function-ref name="fired" scoped="" ref="0x40dcdb70"/>
        <function-ref name="get" scoped="" ref="0x40dcd658"/>
        <function-ref name="reset" scoped="" ref="0x40dcdde8"/>
        <function-ref name="isOn" scoped="" ref="0x40dcc7f0"/>
        <function-ref name="set" scoped="" ref="0x40dcd8d0"/>
        <function-ref name="start" scoped="" ref="0x40dcc088"/>
        <function-ref name="stop" scoped="" ref="0x40dcc300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40dd0078" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40dd0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40dceaf0"/>
        <function-ref name="test" scoped="" ref="0x40dce600"/>
        <function-ref name="get" scoped="" ref="0x40dd06c0"/>
        <function-ref name="captured" scoped="" ref="0x40dd0bd8"/>
        <function-ref name="reset" scoped="" ref="0x40dd0e78"/>
        <function-ref name="isOn" scoped="" ref="0x40dce878"/>
        <function-ref name="set" scoped="" ref="0x40dd0938"/>
        <function-ref name="start" scoped="" ref="0x40dce110"/>
        <function-ref name="stop" scoped="" ref="0x40dce388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40dccc08" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40dccc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40dc91a0"/>
        <function-ref name="fired" scoped="" ref="0x40dca790"/>
        <function-ref name="get" scoped="" ref="0x40dca278"/>
        <function-ref name="reset" scoped="" ref="0x40dcaa08"/>
        <function-ref name="isOn" scoped="" ref="0x40dc9418"/>
        <function-ref name="set" scoped="" ref="0x40dca4f0"/>
        <function-ref name="start" scoped="" ref="0x40dcac80"/>
        <function-ref name="stop" scoped="" ref="0x40dcaef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40dc9830" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40dc9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40dc8d90"/>
        <function-ref name="fired" scoped="" ref="0x40dc83b0"/>
        <function-ref name="get" scoped="" ref="0x40dc9e78"/>
        <function-ref name="reset" scoped="" ref="0x40dc8628"/>
        <function-ref name="isOn" scoped="" ref="0x40dc7048"/>
        <function-ref name="set" scoped="" ref="0x40dc8110"/>
        <function-ref name="start" scoped="" ref="0x40dc88a0"/>
        <function-ref name="stop" scoped="" ref="0x40dc8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40da2010" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40da2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40dd2a68"/>
        <function-ref name="test" scoped="" ref="0x40dd2578"/>
        <function-ref name="get" scoped="" ref="0x40da2658"/>
        <function-ref name="setScale" scoped="" ref="0x40dd2ce0"/>
        <function-ref name="getScale" scoped="" ref="0x40dd1010"/>
        <function-ref name="reset" scoped="" ref="0x40da2de8"/>
        <function-ref name="overflow" scoped="" ref="0x40da2b70"/>
        <function-ref name="isOn" scoped="" ref="0x40dd27f0"/>
        <function-ref name="set" scoped="" ref="0x40da28d0"/>
        <function-ref name="start" scoped="" ref="0x40dd2088"/>
        <function-ref name="stop" scoped="" ref="0x40dd2300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e12960" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e12960"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e9ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e9ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e12b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e12d48" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e12d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e107f0"/>
        <function-ref name="test" scoped="" ref="0x40e10300"/>
        <function-ref name="get" scoped="" ref="0x40e113e0"/>
        <function-ref name="setScale" scoped="" ref="0x40e10a68"/>
        <function-ref name="getScale" scoped="" ref="0x40e10d08"/>
        <function-ref name="reset" scoped="" ref="0x40e11b70"/>
        <function-ref name="overflow" scoped="" ref="0x40e118f8"/>
        <function-ref name="isOn" scoped="" ref="0x40e10578"/>
        <function-ref name="set" scoped="" ref="0x40e11658"/>
        <function-ref name="start" scoped="" ref="0x40e11de8"/>
        <function-ref name="stop" scoped="" ref="0x40e10088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e130c0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TThree" ref="0x4035cbc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e13810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e13d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e13a88"/>
        <function-ref name="overflow" scoped="" ref="0x40e0d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e0d2f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e0d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e0cd30"/>
        <function-ref name="test" scoped="" ref="0x40e0c840"/>
        <function-ref name="get" scoped="" ref="0x40e0d938"/>
        <function-ref name="setScale" scoped="" ref="0x40e0a010"/>
        <function-ref name="getScale" scoped="" ref="0x40e0a2b0"/>
        <function-ref name="reset" scoped="" ref="0x40e0c0d8"/>
        <function-ref name="overflow" scoped="" ref="0x40e0de50"/>
        <function-ref name="isOn" scoped="" ref="0x40e0cab8"/>
        <function-ref name="set" scoped="" ref="0x40e0dbb0"/>
        <function-ref name="start" scoped="" ref="0x40e0c350"/>
        <function-ref name="stop" scoped="" ref="0x40e0c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40e073b8" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40e073b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TThree" ref="0x4035cbc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e07b08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e06010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e07d80"/>
        <function-ref name="overflow" scoped="" ref="0x40e06288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e09170" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e09170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033b288"/>
            <typename><typedef-ref name="TMicro" ref="0x4033b450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e098c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e09db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e09b38"/>
        <function-ref name="overflow" scoped="" ref="0x40e07048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40e05ad8" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40e05ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40e05cb0"/>
        <function-ref name="offset" scoped="" ref="0x40e05d90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40e05e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e29dc0" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e29dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e27010"/>
        <function-ref name="stop" scoped="" ref="0x40e270f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40e50ad8" loc="52:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40e50ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40e50cb0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40e50d90"/>
        <function-ref name="reset" scoped="" ref="0x40e50e70"/>
        <function-ref name="start" scoped="" ref="0x40e22010"/>
        <function-ref name="stop" scoped="" ref="0x40e220f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40e20708" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40e20708"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40e209c0"/>
        <function-ref name="stop" scoped="" ref="0x40e20d40"/>
        <function-ref name="newData" scoped="" ref="0x40e20aa0"/>
        <function-ref name="start" scoped="" ref="0x40e20b80"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40e20c60"/>
        <function-ref name="requestData" scoped="" ref="0x40e208e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e279c8" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e279c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e27ba0"/>
        <function-ref name="stop" scoped="" ref="0x40e27c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40e22668" loc="53:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40e22668"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e22840"/>
        <function-ref name="stop" scoped="" ref="0x40e22920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x40e490b0" loc="57:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x40e490b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e49288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x40e4a900" loc="56:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x40e4a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e4aad8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e4abb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e4ac98"/>
        <function-ref name="cancel" scoped="" ref="0x40e4ad78"/>
        <function-ref name="sendDone" scoped="" ref="0x40e4ae58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40e4be20" loc="53:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e4be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e4a010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e4a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e4a1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e4a2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e4a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40e4df00" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40e4df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40e4b0f0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40e4b1d0"/>
        <function-ref name="reset" scoped="" ref="0x40e4b2b0"/>
        <function-ref name="start" scoped="" ref="0x40e4b390"/>
        <function-ref name="stop" scoped="" ref="0x40e4b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40e4d410" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40e4d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40e4d6c8"/>
        <function-ref name="stop" scoped="" ref="0x40e4da48"/>
        <function-ref name="newData" scoped="" ref="0x40e4d7a8"/>
        <function-ref name="start" scoped="" ref="0x40e4d888"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40e4d968"/>
        <function-ref name="requestData" scoped="" ref="0x40e4d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40e4a518" loc="54:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e4a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e4a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e493f8" loc="59:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e493f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e495d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e496b0"/>
        <function-ref name="led1On" scoped="" ref="0x40e49790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e49870"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e49950"/>
        <function-ref name="get" scoped="" ref="0x40e49a30"/>
        <function-ref name="led1Off" scoped="" ref="0x40e49b10"/>
        <function-ref name="led2Off" scoped="" ref="0x40e49e90"/>
        <function-ref name="set" scoped="" ref="0x40e49bf0"/>
        <function-ref name="led0On" scoped="" ref="0x40e49cd0"/>
        <function-ref name="led2On" scoped="" ref="0x40e49db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e1eb90" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e1eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e1ed68"/>
        <function-ref name="stop" scoped="" ref="0x40e1ee48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40e4b9e8" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40e4b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e4bbc0"/>
        <function-ref name="stop" scoped="" ref="0x40e4bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e51ed8" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e51ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e840c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e841a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e84280"/>
        <function-ref name="cancel" scoped="" ref="0x40e84360"/>
        <function-ref name="sendDone" scoped="" ref="0x40e84440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e84580" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e84580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e84758"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e84838"/>
        <function-ref name="getPayload" scoped="" ref="0x40e84918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e849f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e84c18" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e84c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e84df0"/>
        <function-ref name="source" scoped="" ref="0x40e84ed0"/>
        <function-ref name="address" scoped="" ref="0x40ea2010"/>
        <function-ref name="destination" scoped="" ref="0x40ea20f0"/>
        <function-ref name="setSource" scoped="" ref="0x40ea21d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40ea22b0"/>
        <function-ref name="type" scoped="" ref="0x40ea2390"/>
        <function-ref name="setType" scoped="" ref="0x40ea2470"/>
        <function-ref name="isForMe" scoped="" ref="0x40ea2550"/>
        <function-ref name="setGroup" scoped="" ref="0x40ea2630"/>
        <function-ref name="localGroup" scoped="" ref="0x40ea2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ea2870" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ea2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ea2a48"/>
        <function-ref name="noAck" scoped="" ref="0x40ea2b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ea2c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415a0c90" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415a0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415a0e68"/>
        <function-ref name="getPayload" scoped="" ref="0x4159c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4159c0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4159c1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4159c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4159c3f0" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4159c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4159c5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4159c6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x4159c788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4159c868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4159c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4159ca88" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4159ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4159cc60"/>
        <function-ref name="source" scoped="" ref="0x4159cd40"/>
        <function-ref name="address" scoped="" ref="0x4159ce20"/>
        <function-ref name="destination" scoped="" ref="0x4159cf00"/>
        <function-ref name="setSource" scoped="" ref="0x4159b010"/>
        <function-ref name="setDestination" scoped="" ref="0x4159b0f0"/>
        <function-ref name="type" scoped="" ref="0x4159b1d0"/>
        <function-ref name="setType" scoped="" ref="0x4159b2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x4159b390"/>
        <function-ref name="setGroup" scoped="" ref="0x4159b470"/>
        <function-ref name="localGroup" scoped="" ref="0x4159b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4159b6b0" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4159b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4159b888"/>
        <function-ref name="noAck" scoped="" ref="0x4159b968"/>
        <function-ref name="wasAcked" scoped="" ref="0x4159ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415977c8" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415977c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415979a0"/>
        <function-ref name="getPayload" scoped="" ref="0x41597a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41597b60"/>
        <function-ref name="cancel" scoped="" ref="0x41597c40"/>
        <function-ref name="sendDone" scoped="" ref="0x41597d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41597e90" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41597e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41595080"/>
        <function-ref name="getPayload" scoped="" ref="0x41595160"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41595240"/>
        <function-ref name="cancel" scoped="" ref="0x41595320"/>
        <function-ref name="sendDone" scoped="" ref="0x41595400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41595540" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41595540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41595718"/>
        <function-ref name="source" scoped="" ref="0x415957f8"/>
        <function-ref name="address" scoped="" ref="0x415958d8"/>
        <function-ref name="destination" scoped="" ref="0x415959b8"/>
        <function-ref name="setSource" scoped="" ref="0x41595a98"/>
        <function-ref name="setDestination" scoped="" ref="0x41595b78"/>
        <function-ref name="type" scoped="" ref="0x41595c58"/>
        <function-ref name="setType" scoped="" ref="0x41595d38"/>
        <function-ref name="isForMe" scoped="" ref="0x41595e18"/>
        <function-ref name="setGroup" scoped="" ref="0x41595ef8"/>
        <function-ref name="localGroup" scoped="" ref="0x41594010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e6d100" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e6d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e6d2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e6d3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e6d498"/>
        <function-ref name="cancel" scoped="" ref="0x40e6d578"/>
        <function-ref name="sendDone" scoped="" ref="0x40e6d658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40eac780" loc="40:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40eac780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eac968"/>
        <function-ref name="getPayload" scoped="" ref="0x40eaca48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eacb28"/>
        <function-ref name="cancel" scoped="" ref="0x40eacc08"/>
        <function-ref name="sendDone" scoped="" ref="0x40eacce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40eac010" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40eac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eac1f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40eac2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eac3b8"/>
        <function-ref name="cancel" scoped="" ref="0x40eac498"/>
        <function-ref name="sendDone" scoped="" ref="0x40eac578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40eaba50" loc="42:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40eaba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eabc28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eabd08"/>
        <function-ref name="getPayload" scoped="" ref="0x40eabde8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eabec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ea9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40ea9190" loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40ea9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea9368"/>
        <function-ref name="runTask" scoped="" ref="0x40ea9448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40ea95c8" loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40ea95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea97a0"/>
        <function-ref name="runTask" scoped="" ref="0x40ea9880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40eace28" loc="41:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eace28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eab050"/>
        <function-ref name="source" scoped="" ref="0x40eab130"/>
        <function-ref name="address" scoped="" ref="0x40eab210"/>
        <function-ref name="destination" scoped="" ref="0x40eab2f0"/>
        <function-ref name="setSource" scoped="" ref="0x40eab3d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40eab4b0"/>
        <function-ref name="type" scoped="" ref="0x40eab590"/>
        <function-ref name="setType" scoped="" ref="0x40eab670"/>
        <function-ref name="isForMe" scoped="" ref="0x40eab750"/>
        <function-ref name="setGroup" scoped="" ref="0x40eab830"/>
        <function-ref name="localGroup" scoped="" ref="0x40eab910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ea0b30" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ea0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ea0d08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ea0de8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ea0ec8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9f010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e9f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ea0818" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ea0818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ea09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e9f230" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e9f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e9f408"/>
        <function-ref name="source" scoped="" ref="0x40e9f4e8"/>
        <function-ref name="address" scoped="" ref="0x40e9f5c8"/>
        <function-ref name="destination" scoped="" ref="0x40e9f6a8"/>
        <function-ref name="setSource" scoped="" ref="0x40e9f788"/>
        <function-ref name="setDestination" scoped="" ref="0x40e9f868"/>
        <function-ref name="type" scoped="" ref="0x40e9f948"/>
        <function-ref name="setType" scoped="" ref="0x40e9fa28"/>
        <function-ref name="isForMe" scoped="" ref="0x40e9fb08"/>
        <function-ref name="setGroup" scoped="" ref="0x40e9fbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x40e9fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ece350" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ece350"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ece528"/>
        <function-ref name="getPayload" scoped="" ref="0x40ece608"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ece6e8"/>
        <function-ref name="cancel" scoped="" ref="0x40ece7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ece8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ece9e8" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ece9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecebc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ececa0"/>
        <function-ref name="getPayload" scoped="" ref="0x40eced80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ecee60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ecd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ecd150" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ecd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ecd328"/>
        <function-ref name="source" scoped="" ref="0x40ecd408"/>
        <function-ref name="address" scoped="" ref="0x40ecd4e8"/>
        <function-ref name="destination" scoped="" ref="0x40ecd5c8"/>
        <function-ref name="setSource" scoped="" ref="0x40ecd6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40ecd788"/>
        <function-ref name="type" scoped="" ref="0x40ecd868"/>
        <function-ref name="setType" scoped="" ref="0x40ecd948"/>
        <function-ref name="isForMe" scoped="" ref="0x40ecda28"/>
        <function-ref name="setGroup" scoped="" ref="0x40ecdb08"/>
        <function-ref name="localGroup" scoped="" ref="0x40ecdbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ecdd48" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ecdd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ecdf20"/>
        <function-ref name="noAck" scoped="" ref="0x40ecc018"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ecc0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415ba528" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415ba528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415ba700"/>
        <function-ref name="getPayload" scoped="" ref="0x415ba7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415ba8c0"/>
        <function-ref name="cancel" scoped="" ref="0x415ba9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x415baa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415babc0" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415babc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415bad98"/>
        <function-ref name="payloadLength" scoped="" ref="0x415bae78"/>
        <function-ref name="getPayload" scoped="" ref="0x415b9010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415b90f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415b91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x415b9310" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415b9310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415b94e8"/>
        <function-ref name="source" scoped="" ref="0x415b95c8"/>
        <function-ref name="address" scoped="" ref="0x415b96a8"/>
        <function-ref name="destination" scoped="" ref="0x415b9788"/>
        <function-ref name="setSource" scoped="" ref="0x415b9868"/>
        <function-ref name="setDestination" scoped="" ref="0x415b9948"/>
        <function-ref name="type" scoped="" ref="0x415b9a28"/>
        <function-ref name="setType" scoped="" ref="0x415b9b08"/>
        <function-ref name="isForMe" scoped="" ref="0x415b9be8"/>
        <function-ref name="setGroup" scoped="" ref="0x415b9cc8"/>
        <function-ref name="localGroup" scoped="" ref="0x415b9da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x415b9f08" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x415b9f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x415b70f0"/>
        <function-ref name="noAck" scoped="" ref="0x415b71d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x415b72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415b2060" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415b2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415b2238"/>
        <function-ref name="getPayload" scoped="" ref="0x415b2318"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415b23f8"/>
        <function-ref name="cancel" scoped="" ref="0x415b24d8"/>
        <function-ref name="sendDone" scoped="" ref="0x415b25b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x415b2728" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415b2728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415b2900"/>
        <function-ref name="getPayload" scoped="" ref="0x415b29e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415b2ac0"/>
        <function-ref name="cancel" scoped="" ref="0x415b2ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x415b2c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x415b2dc0" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415b2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415b1010"/>
        <function-ref name="source" scoped="" ref="0x415b10f0"/>
        <function-ref name="address" scoped="" ref="0x415b11d0"/>
        <function-ref name="destination" scoped="" ref="0x415b12b0"/>
        <function-ref name="setSource" scoped="" ref="0x415b1390"/>
        <function-ref name="setDestination" scoped="" ref="0x415b1470"/>
        <function-ref name="type" scoped="" ref="0x415b1550"/>
        <function-ref name="setType" scoped="" ref="0x415b1630"/>
        <function-ref name="isForMe" scoped="" ref="0x415b1710"/>
        <function-ref name="setGroup" scoped="" ref="0x415b17f0"/>
        <function-ref name="localGroup" scoped="" ref="0x415b18d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ecbca0" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ecbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecbe78"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eca010"/>
        <function-ref name="getPayload" scoped="" ref="0x40eca0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eca1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ecb988" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ecb988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ecbb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40eca3f0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eca3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eca5c8"/>
        <function-ref name="source" scoped="" ref="0x40eca6a8"/>
        <function-ref name="address" scoped="" ref="0x40eca788"/>
        <function-ref name="destination" scoped="" ref="0x40eca868"/>
        <function-ref name="setSource" scoped="" ref="0x40eca948"/>
        <function-ref name="setDestination" scoped="" ref="0x40ecaa28"/>
        <function-ref name="type" scoped="" ref="0x40ecab08"/>
        <function-ref name="setType" scoped="" ref="0x40ecabe8"/>
        <function-ref name="isForMe" scoped="" ref="0x40ecacc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40ecada8"/>
        <function-ref name="localGroup" scoped="" ref="0x40ecae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ec6010" loc="35:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ec6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ec61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40ec6378" loc="36:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ec6378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ec6550"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ec6630"/>
        <function-ref name="led1On" scoped="" ref="0x40ec6710"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ec67f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ec68d0"/>
        <function-ref name="get" scoped="" ref="0x40ec69b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40ec6a90"/>
        <function-ref name="led2Off" scoped="" ref="0x40ec6e10"/>
        <function-ref name="set" scoped="" ref="0x40ec6b70"/>
        <function-ref name="led0On" scoped="" ref="0x40ec6c50"/>
        <function-ref name="led2On" scoped="" ref="0x40ec6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x40f512d0" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x40f512d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="settings" ref="0x4037f110"/>
            <typename><typedef-ref name="settings_t" ref="0x4037fb08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40f518f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x40f06450" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x40f06450"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="settings" ref="0x4037f110"/>
            <typename><typedef-ref name="settings_t" ref="0x4037fb08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40f51010"/>
        <function-ref name="get" scoped="" ref="0x40f06a98"/>
        <function-ref name="set" scoped="" ref="0x40f06d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x415f15f0" loc="62:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x415f15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415f17c8"/>
        <function-ref name="runTask" scoped="" ref="0x415f18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x415f21e8" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x415f21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x415f24a0"/>
        <function-ref name="storeData" scoped="" ref="0x415f2820"/>
        <function-ref name="newData" scoped="" ref="0x415f2580"/>
        <function-ref name="start" scoped="" ref="0x415f2660"/>
        <function-ref name="requestSeqno" scoped="" ref="0x415f2740"/>
        <function-ref name="stop" scoped="" ref="0x415f23c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x415a3840" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x415a3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="settings" ref="0x4037f110"/>
            <typename><typedef-ref name="settings_t" ref="0x4037fb08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x415a3e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x415f2980" loc="52:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x415f2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x415f2b58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x415f2c38"/>
        <function-ref name="led1On" scoped="" ref="0x415f2d18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x415f2df8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x415f2ed8"/>
        <function-ref name="get" scoped="" ref="0x415f1010"/>
        <function-ref name="led1Off" scoped="" ref="0x415f10f0"/>
        <function-ref name="led0On" scoped="" ref="0x415f1470"/>
        <function-ref name="set" scoped="" ref="0x415f12b0"/>
        <function-ref name="led2On" scoped="" ref="0x415f11d0"/>
        <function-ref name="led2Off" scoped="" ref="0x415f1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x415a4a00" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x415a4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="settings" ref="0x4037f110"/>
            <typename><typedef-ref name="settings_t" ref="0x4037fb08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x415a3580"/>
        <function-ref name="get" scoped="" ref="0x415a3068"/>
        <function-ref name="set" scoped="" ref="0x415a32e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x415a4558" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x415a4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x415a4730"/>
        <function-ref name="stop" scoped="" ref="0x415a4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40f053c0" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40f053c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f05598"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40f05678"/>
        <function-ref name="reset" scoped="" ref="0x40f05758"/>
        <function-ref name="start" scoped="" ref="0x40f05838"/>
        <function-ref name="stop" scoped="" ref="0x40f05918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40f53278" loc="47:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40f53278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f53460"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40f53540"/>
        <function-ref name="reset" scoped="" ref="0x40f53620"/>
        <function-ref name="start" scoped="" ref="0x40f53700"/>
        <function-ref name="stop" scoped="" ref="0x40f537e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x415df2e8" loc="54:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x415df2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x415df4c0"/>
        <function-ref name="clear" scoped="" ref="0x415df5a0"/>
        <function-ref name="toggle" scoped="" ref="0x415df680"/>
        <function-ref name="get" scoped="" ref="0x415df760"/>
        <function-ref name="assign" scoped="" ref="0x415df840"/>
        <function-ref name="setAll" scoped="" ref="0x415df920"/>
        <function-ref name="set" scoped="" ref="0x415dfa00"/>
        <function-ref name="size" scoped="" ref="0x415dfae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x415dfc40" loc="55:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x415dfc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x415dfe18"/>
        <function-ref name="clear" scoped="" ref="0x415dfef8"/>
        <function-ref name="toggle" scoped="" ref="0x415de010"/>
        <function-ref name="get" scoped="" ref="0x415de0f0"/>
        <function-ref name="assign" scoped="" ref="0x415de1d0"/>
        <function-ref name="setAll" scoped="" ref="0x415de2b0"/>
        <function-ref name="set" scoped="" ref="0x415de390"/>
        <function-ref name="size" scoped="" ref="0x415de470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x415de5b0" loc="56:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x415de5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x415de788"/>
        <function-ref name="rand32" scoped="" ref="0x415de868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x415e3980" loc="50:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x415e3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x415e3b68"/>
        <function-ref name="incrementCounter" scoped="" ref="0x415e3c48"/>
        <function-ref name="reset" scoped="" ref="0x415e3d28"/>
        <function-ref name="start" scoped="" ref="0x415e3e08"/>
        <function-ref name="stop" scoped="" ref="0x415e3ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415e35d0" loc="49:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415e35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415e37a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x415dd5f0" loc="146:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x415dd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415dd7c8"/>
        <function-ref name="runTask" scoped="" ref="0x415dd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x415de9a8" loc="57:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x415de9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x415deb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x415dec60"/>
        <function-ref name="led1On" scoped="" ref="0x415ded40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x415dee20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x415def00"/>
        <function-ref name="get" scoped="" ref="0x415dd010"/>
        <function-ref name="led1Off" scoped="" ref="0x415dd0f0"/>
        <function-ref name="led0On" scoped="" ref="0x415dd470"/>
        <function-ref name="set" scoped="" ref="0x415dd2b0"/>
        <function-ref name="led2On" scoped="" ref="0x415dd1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x415dd390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x415e1100" loc="53:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415e0be0"/>
        <function-ref name="fired" scoped="" ref="0x415e1e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x415e05a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x415e0348"/>
        <function-ref name="getdt" scoped="" ref="0x415df0b8"/>
        <function-ref name="gett0" scoped="" ref="0x415e0e38"/>
        <function-ref name="isRunning" scoped="" ref="0x415e00f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x415e1728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x415e08c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x415e19a8"/>
        <function-ref name="stop" scoped="" ref="0x415e1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x415db010" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415d9b00"/>
        <function-ref name="fired" scoped="" ref="0x415dbd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x415d94c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x415d9268"/>
        <function-ref name="getdt" scoped="" ref="0x415d8010"/>
        <function-ref name="gett0" scoped="" ref="0x415d9d58"/>
        <function-ref name="isRunning" scoped="" ref="0x415d9010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x415db638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x415d97e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x415db8b8"/>
        <function-ref name="stop" scoped="" ref="0x415dbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415d8d00" loc="35:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415d8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415d8ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x415d7060" loc="36:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x415d7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x415d7238"/>
        <function-ref name="clear" scoped="" ref="0x415d7318"/>
        <function-ref name="toggle" scoped="" ref="0x415d73f8"/>
        <function-ref name="get" scoped="" ref="0x415d74d8"/>
        <function-ref name="assign" scoped="" ref="0x415d75b8"/>
        <function-ref name="setAll" scoped="" ref="0x415d7698"/>
        <function-ref name="set" scoped="" ref="0x415d7778"/>
        <function-ref name="size" scoped="" ref="0x415d7858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415d64c0" loc="35:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415d64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415d6698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x415d67f8" loc="36:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x415d67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x415d69d0"/>
        <function-ref name="clear" scoped="" ref="0x415d6ab0"/>
        <function-ref name="toggle" scoped="" ref="0x415d6b90"/>
        <function-ref name="get" scoped="" ref="0x415d6c70"/>
        <function-ref name="assign" scoped="" ref="0x415d6d50"/>
        <function-ref name="setAll" scoped="" ref="0x415d6e30"/>
        <function-ref name="set" scoped="" ref="0x415d6f10"/>
        <function-ref name="size" scoped="" ref="0x415d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f4e070" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.SettingsReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f4e070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4e248"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4e328"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4e408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4e4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f4fd38" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.SettingsReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f4fd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4ff10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f4e708" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.SettingsReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f4e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f4e8e0"/>
        <function-ref name="source" scoped="" ref="0x40f4e9c0"/>
        <function-ref name="address" scoped="" ref="0x40f4eaa0"/>
        <function-ref name="destination" scoped="" ref="0x40f4eb80"/>
        <function-ref name="setSource" scoped="" ref="0x40f4ec60"/>
        <function-ref name="setDestination" scoped="" ref="0x40f4ed40"/>
        <function-ref name="type" scoped="" ref="0x40f4ee20"/>
        <function-ref name="setType" scoped="" ref="0x40f4ef00"/>
        <function-ref name="isForMe" scoped="" ref="0x40f4a010"/>
        <function-ref name="setGroup" scoped="" ref="0x40f4a0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f4a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40f5eb90" loc="59:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40f5eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40f5ed68"/>
        <function-ref name="setRoot" scoped="" ref="0x40f5ee48"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40f5ef28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40f6f4d0" loc="54:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40f6f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40f6f6a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40f6f788"/>
        <function-ref name="setType" scoped="" ref="0x40f6f868"/>
        <function-ref name="getOrigin" scoped="" ref="0x40f6f948"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40f6fa28"/>
        <function-ref name="getType" scoped="" ref="0x40f6fb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40f90928" loc="64:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40f90928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40f90b80"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40f90c60"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40f90d40"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40f90e20"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40f90f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40f74de8" loc="51:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40f74de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40f76010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f76190" loc="53:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f76190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f76368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f76448"/>
        <function-ref name="getPayload" scoped="" ref="0x40f76528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f76608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f766e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40f40210" loc="50:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40f40210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f403e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f41100" loc="48:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f41100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f412d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f413b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f41498"/>
        <function-ref name="cancel" scoped="" ref="0x40f41578"/>
        <function-ref name="sendDone" scoped="" ref="0x40f41658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40f60e68" loc="57:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40f60e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40f73050"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40f73130"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40f73210"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40f732f0"/>
        <function-ref name="getEtx" scoped="" ref="0x40f733d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40f734b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40f73590"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40f73670"/>
        <function-ref name="getParent" scoped="" ref="0x40f73750"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40f73830"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40f73910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f41b10" loc="49:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f41b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f41ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40f5e728" loc="58:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40f5e728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40f5e900"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40f5e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40f66920" loc="55:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40f66920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40f66af8"/>
        <function-ref name="option" scoped="" ref="0x40f66bd8"/>
        <function-ref name="setEtx" scoped="" ref="0x40f66cb8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40f66d98"/>
        <function-ref name="clearOption" scoped="" ref="0x40f66e78"/>
        <function-ref name="getEtx" scoped="" ref="0x40f75010"/>
        <function-ref name="getOrigin" scoped="" ref="0x40f750f0"/>
        <function-ref name="setType" scoped="" ref="0x40f751d0"/>
        <function-ref name="setOption" scoped="" ref="0x40f752b0"/>
        <function-ref name="matchPacket" scoped="" ref="0x40f75390"/>
        <function-ref name="getThl" scoped="" ref="0x40f75470"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40f75550"/>
        <function-ref name="matchInstance" scoped="" ref="0x40f75630"/>
        <function-ref name="getType" scoped="" ref="0x40f75790"/>
        <function-ref name="setThl" scoped="" ref="0x40f75870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f428f0" loc="47:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f42ac8"/>
        <function-ref name="stop" scoped="" ref="0x40f42ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40f65c40" loc="63:/opt/tinyos-2.1.1/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40f65c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40f65e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40f88800" loc="81:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40f88800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40f889d8"/>
        <function-ref name="setRoot" scoped="" ref="0x40f88ab8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40f88b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40f8b060" loc="75:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40f8b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40f8b238"/>
        <function-ref name="setOrigin" scoped="" ref="0x40f8b318"/>
        <function-ref name="setType" scoped="" ref="0x40f8b3f8"/>
        <function-ref name="getOrigin" scoped="" ref="0x40f8b4d8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40f8b5b8"/>
        <function-ref name="getType" scoped="" ref="0x40f8b698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40f83988" loc="79:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40f83988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40f83b60"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40f83c40"/>
        <function-ref name="txNoAck" scoped="" ref="0x40f83d20"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40f83e00"/>
        <function-ref name="evicted" scoped="" ref="0x40f83ee0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40f88010"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40f880f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40f881d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40f87530" loc="86:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40f87530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40f87708"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40f877e8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40f878c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40f879a8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40f87a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40f8c5b0" loc="72:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40f8c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40f8c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f8c908" loc="74:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f8c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f8cae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f8cbc0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f8cca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f8cd80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f8ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40f8def8" loc="71:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40f8def8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f8c0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f93db8" loc="69:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f93db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f8d010"/>
        <function-ref name="getPayload" scoped="" ref="0x40f8d0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f8d1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40f8d2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f8d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40f8a918" loc="78:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40f8a918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40f8aaf0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40f8abd0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40f8acb0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40f8ad90"/>
        <function-ref name="getEtx" scoped="" ref="0x40f8ae70"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40f89010"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40f890f0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40f891d0"/>
        <function-ref name="getParent" scoped="" ref="0x40f892b0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40f89390"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40f89470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f8d848" loc="70:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f8d848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f8da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40f88398" loc="80:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40f88398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40f88570"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40f88650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40f8b838" loc="76:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40f8b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40f8ba10"/>
        <function-ref name="option" scoped="" ref="0x40f8baf0"/>
        <function-ref name="setEtx" scoped="" ref="0x40f8bbd0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40f8bcb0"/>
        <function-ref name="clearOption" scoped="" ref="0x40f8bd90"/>
        <function-ref name="getEtx" scoped="" ref="0x40f8be70"/>
        <function-ref name="getOrigin" scoped="" ref="0x40f8a010"/>
        <function-ref name="setType" scoped="" ref="0x40f8a0f0"/>
        <function-ref name="setOption" scoped="" ref="0x40f8a1d0"/>
        <function-ref name="matchPacket" scoped="" ref="0x40f8a2b0"/>
        <function-ref name="getThl" scoped="" ref="0x40f8a390"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40f8a470"/>
        <function-ref name="matchInstance" scoped="" ref="0x40f8a550"/>
        <function-ref name="getType" scoped="" ref="0x40f8a6b0"/>
        <function-ref name="setThl" scoped="" ref="0x40f8a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f93688" loc="68:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f93688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f93860"/>
        <function-ref name="stop" scoped="" ref="0x40f93940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40f87100" loc="85:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40f87100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40f87358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4104be58" loc="142:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4104be58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4104a050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x41049150" loc="145:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x41049150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x41049328"/>
        <function-ref name="setRoot" scoped="" ref="0x41049408"/>
        <function-ref name="unsetRoot" scoped="" ref="0x410494e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x410574b8" loc="126:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x410574b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41057690"/>
        <function-ref name="getPayload" scoped="" ref="0x41057770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41057850"/>
        <function-ref name="cancel" scoped="" ref="0x41057930"/>
        <function-ref name="sendDone" scoped="" ref="0x41057a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x410477e8" loc="156:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x410477e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x410479c0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x41047aa0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x41047b80"/>
        <function-ref name="logEventRoute" scoped="" ref="0x41047c60"/>
        <function-ref name="logEventDbg" scoped="" ref="0x41047d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x410598e8" loc="116:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x410598e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x41059ac0"/>
        <function-ref name="setOrigin" scoped="" ref="0x41059ba0"/>
        <function-ref name="setType" scoped="" ref="0x41059c80"/>
        <function-ref name="getOrigin" scoped="" ref="0x41059d60"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x41059e40"/>
        <function-ref name="getType" scoped="" ref="0x41059f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x41053360" loc="129:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x41053360"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x41053538"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x41053618"/>
        <function-ref name="txNoAck" scoped="" ref="0x410536f8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x410537d8"/>
        <function-ref name="evicted" scoped="" ref="0x410538b8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x41053998"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x41053a78"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x41053b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x4104b100" loc="140:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x4104b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
              <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x4104b728"/>
        <function-ref name="flush" scoped="" ref="0x4104bc28"/>
        <function-ref name="lookup" scoped="" ref="0x4104b9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x4105bf10" loc="114:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x4105bf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x41059110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41059250" loc="115:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41059250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41059428"/>
        <function-ref name="payloadLength" scoped="" ref="0x41059508"/>
        <function-ref name="getPayload" scoped="" ref="0x410595e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410596c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410597a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4105bb50" loc="113:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4105bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4105bd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x410473f0" loc="149:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x410473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x410475c8"/>
        <function-ref name="rand32" scoped="" ref="0x410476a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4105b030" loc="111:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4105b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4105b218"/>
        <function-ref name="getPayload" scoped="" ref="0x4105b2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4105b3d8"/>
        <function-ref name="cancel" scoped="" ref="0x4105b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x4105b598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x410560f0" loc="128:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x410560f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41055c70"/>
        <function-ref name="fired" scoped="" ref="0x41056ef0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41055630"/>
        <function-ref name="isOneShot" scoped="" ref="0x410553d8"/>
        <function-ref name="getdt" scoped="" ref="0x41053150"/>
        <function-ref name="gett0" scoped="" ref="0x41055ec8"/>
        <function-ref name="isRunning" scoped="" ref="0x41055180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41056798"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41055950"/>
        <function-ref name="startOneShot" scoped="" ref="0x41056a18"/>
        <function-ref name="stop" scoped="" ref="0x41056c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x41047ea0" loc="162:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x41047ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410450c0"/>
        <function-ref name="stopDone" scoped="" ref="0x410451a0"/>
        <function-ref name="start" scoped="" ref="0x41045280"/>
        <function-ref name="stop" scoped="" ref="0x41045360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x410454e0" loc="240:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x410454e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410456b8"/>
        <function-ref name="runTask" scoped="" ref="0x41045798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x41052a98" loc="137:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x41052a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f7c498"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f7c720"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x410517e0"/>
        <function-ref name="enqueue" scoped="" ref="0x41051ec0"/>
        <function-ref name="element" scoped="" ref="0x4104f240"/>
        <function-ref name="maxSize" scoped="" ref="0x41051588"/>
        <function-ref name="dequeue" scoped="" ref="0x41051b50"/>
        <function-ref name="empty" scoped="" ref="0x410510d8"/>
        <function-ref name="size" scoped="" ref="0x41051330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x4104a4c8" loc="144:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x4104a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x4104a6a0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x4104a780"/>
        <function-ref name="numNeighbors" scoped="" ref="0x4104a860"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x4104a940"/>
        <function-ref name="getEtx" scoped="" ref="0x4104aa20"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x4104ab00"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x4104abe0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x4104acc0"/>
        <function-ref name="getParent" scoped="" ref="0x4104ada0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x4104ae80"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x41049010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41052330" loc="131:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41052330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41052508"/>
        <function-ref name="payloadLength" scoped="" ref="0x410525e8"/>
        <function-ref name="getPayload" scoped="" ref="0x410526c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410527a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41052888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4105c858" loc="109:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4105c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4105ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4105b770" loc="112:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4105b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4105b958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x41057070" loc="118:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x41057070"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x41057248"/>
        <function-ref name="setClientCongested" scoped="" ref="0x41057328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x41053c98" loc="130:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x41053c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x41053e70"/>
        <function-ref name="routeFound" scoped="" ref="0x41052010"/>
        <function-ref name="nextHop" scoped="" ref="0x410520f0"/>
        <function-ref name="noRoute" scoped="" ref="0x410521d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41048770" loc="148:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41048770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41048948"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41048a28"/>
        <function-ref name="led1On" scoped="" ref="0x41048b08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41048be8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41048cc8"/>
        <function-ref name="get" scoped="" ref="0x41048da8"/>
        <function-ref name="led1Off" scoped="" ref="0x41048e88"/>
        <function-ref name="led2On" scoped="" ref="0x410472b0"/>
        <function-ref name="set" scoped="" ref="0x410470f0"/>
        <function-ref name="led2Off" scoped="" ref="0x41047010"/>
        <function-ref name="led0On" scoped="" ref="0x410471d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x41057b50" loc="127:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41057b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41057d28"/>
        <function-ref name="noAck" scoped="" ref="0x41057e08"/>
        <function-ref name="wasAcked" scoped="" ref="0x41057ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x41058078" loc="117:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x41058078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x41058250"/>
        <function-ref name="option" scoped="" ref="0x41058330"/>
        <function-ref name="setEtx" scoped="" ref="0x41058410"/>
        <function-ref name="setOrigin" scoped="" ref="0x410584f0"/>
        <function-ref name="clearOption" scoped="" ref="0x410585d0"/>
        <function-ref name="getEtx" scoped="" ref="0x410586b0"/>
        <function-ref name="getOrigin" scoped="" ref="0x41058790"/>
        <function-ref name="setType" scoped="" ref="0x41058870"/>
        <function-ref name="setOption" scoped="" ref="0x41058950"/>
        <function-ref name="matchPacket" scoped="" ref="0x41058a30"/>
        <function-ref name="getThl" scoped="" ref="0x41058b10"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x41058bf0"/>
        <function-ref name="matchInstance" scoped="" ref="0x41058cd0"/>
        <function-ref name="getType" scoped="" ref="0x41058e30"/>
        <function-ref name="setThl" scoped="" ref="0x41058f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x4104f640" loc="138:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x4104f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f7c498"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f7c720"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4104e718"/>
        <function-ref name="maxSize" scoped="" ref="0x4104e130"/>
        <function-ref name="empty" scoped="" ref="0x4104fc68"/>
        <function-ref name="put" scoped="" ref="0x4104e388"/>
        <function-ref name="size" scoped="" ref="0x4104fec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41049ae8" loc="147:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41049ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41049cc0"/>
        <function-ref name="source" scoped="" ref="0x41049da0"/>
        <function-ref name="address" scoped="" ref="0x41049e80"/>
        <function-ref name="destination" scoped="" ref="0x41048010"/>
        <function-ref name="setSource" scoped="" ref="0x410480f0"/>
        <function-ref name="setDestination" scoped="" ref="0x410481d0"/>
        <function-ref name="type" scoped="" ref="0x410482b0"/>
        <function-ref name="setType" scoped="" ref="0x41048390"/>
        <function-ref name="isForMe" scoped="" ref="0x41048470"/>
        <function-ref name="setGroup" scoped="" ref="0x41048550"/>
        <function-ref name="localGroup" scoped="" ref="0x41048630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4105cb70" loc="110:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4105cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4105cd48"/>
        <function-ref name="stop" scoped="" ref="0x4105ce28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x4104a1b0" loc="143:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x4104a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4104a388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x4104eb50" loc="139:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x4104eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
            <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4104dc78"/>
        <function-ref name="maxSize" scoped="" ref="0x4104d690"/>
        <function-ref name="empty" scoped="" ref="0x4104d1e0"/>
        <function-ref name="put" scoped="" ref="0x4104d8e8"/>
        <function-ref name="size" scoped="" ref="0x4104d438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x410496c0" loc="146:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x410496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x410499a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4107bb18" loc="42:/opt/tinyos-2.1.1/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4107bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
            <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4107ac78"/>
        <function-ref name="maxSize" scoped="" ref="0x4107a690"/>
        <function-ref name="empty" scoped="" ref="0x4107a1e0"/>
        <function-ref name="put" scoped="" ref="0x4107a8e8"/>
        <function-ref name="size" scoped="" ref="0x4107a438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4167b1e0" loc="56:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4167b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
            <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416792b8"/>
        <function-ref name="maxSize" scoped="" ref="0x4167bcb8"/>
        <function-ref name="empty" scoped="" ref="0x4167b808"/>
        <function-ref name="put" scoped="" ref="0x4167bf10"/>
        <function-ref name="size" scoped="" ref="0x4167ba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4167cd88" loc="55:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4167cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4167b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41064010" loc="42:/opt/tinyos-2.1.1/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41064010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f7c498"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f7c720"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410630e8"/>
        <function-ref name="maxSize" scoped="" ref="0x41064ae8"/>
        <function-ref name="empty" scoped="" ref="0x41064638"/>
        <function-ref name="put" scoped="" ref="0x41064d40"/>
        <function-ref name="size" scoped="" ref="0x41064890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416718f8" loc="56:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416718f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f7c498"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f7c720"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416709d0"/>
        <function-ref name="maxSize" scoped="" ref="0x416703e8"/>
        <function-ref name="empty" scoped="" ref="0x41671f20"/>
        <function-ref name="put" scoped="" ref="0x41670640"/>
        <function-ref name="size" scoped="" ref="0x41670190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41671550" loc="55:/opt/tinyos-2.1.1/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41671550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41671728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41061408" loc="43:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41061408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f7c498"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f7c720"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41060150"/>
        <function-ref name="enqueue" scoped="" ref="0x41060830"/>
        <function-ref name="element" scoped="" ref="0x41060b80"/>
        <function-ref name="maxSize" scoped="" ref="0x41061ee0"/>
        <function-ref name="dequeue" scoped="" ref="0x410604c0"/>
        <function-ref name="empty" scoped="" ref="0x41061a30"/>
        <function-ref name="size" scoped="" ref="0x41061c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x4108cdc0" loc="39:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x4108cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
              <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x4108a408"/>
        <function-ref name="flush" scoped="" ref="0x4108a908"/>
        <function-ref name="lookup" scoped="" ref="0x4108a688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x416b67f8" loc="46:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x416b67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
              <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x416b6e20"/>
        <function-ref name="flush" scoped="" ref="0x416b4338"/>
        <function-ref name="lookup" scoped="" ref="0x416b40b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416b6430" loc="45:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416b6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416b6608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x416b4578" loc="49:/opt/tinyos-2.1.1/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x416b4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x416b4750"/>
        <function-ref name="option" scoped="" ref="0x416b4830"/>
        <function-ref name="setEtx" scoped="" ref="0x416b4910"/>
        <function-ref name="setOrigin" scoped="" ref="0x416b49f0"/>
        <function-ref name="clearOption" scoped="" ref="0x416b4ad0"/>
        <function-ref name="getEtx" scoped="" ref="0x416b4bb0"/>
        <function-ref name="getOrigin" scoped="" ref="0x416b4c90"/>
        <function-ref name="setType" scoped="" ref="0x416b4d70"/>
        <function-ref name="setOption" scoped="" ref="0x416b4e50"/>
        <function-ref name="matchPacket" scoped="" ref="0x416b3010"/>
        <function-ref name="getThl" scoped="" ref="0x416b30f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x416b31d0"/>
        <function-ref name="matchInstance" scoped="" ref="0x416b32b0"/>
        <function-ref name="getType" scoped="" ref="0x416b3410"/>
        <function-ref name="setThl" scoped="" ref="0x416b34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x410ab838" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410ab838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410a8368"/>
        <function-ref name="fired" scoped="" ref="0x410aa5e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410aacf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x410aaa98"/>
        <function-ref name="getdt" scoped="" ref="0x410a8818"/>
        <function-ref name="gett0" scoped="" ref="0x410a85c0"/>
        <function-ref name="isRunning" scoped="" ref="0x410aa840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410abe60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410a8048"/>
        <function-ref name="startOneShot" scoped="" ref="0x410aa110"/>
        <function-ref name="stop" scoped="" ref="0x410aa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x410a7670" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410a5170"/>
        <function-ref name="fired" scoped="" ref="0x410a6408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410a6b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x410a68b8"/>
        <function-ref name="getdt" scoped="" ref="0x410a5620"/>
        <function-ref name="gett0" scoped="" ref="0x410a53c8"/>
        <function-ref name="isRunning" scoped="" ref="0x410a6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410a7c98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410a6e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x410a7f18"/>
        <function-ref name="stop" scoped="" ref="0x410a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410d6300" loc="49:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410d6300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410d64d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x4109db10" loc="39:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x4109db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x4109dce8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x4109ddc8"/>
        <function-ref name="txNoAck" scoped="" ref="0x4109dea8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x4109c010"/>
        <function-ref name="evicted" scoped="" ref="0x4109c0f0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x4109c1d0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x4109c2b0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x4109c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4109c858" loc="41:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4109c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4109ca30"/>
        <function-ref name="payloadLength" scoped="" ref="0x4109cb10"/>
        <function-ref name="getPayload" scoped="" ref="0x4109cbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4109ccd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4109cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x410d4698" loc="46:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410d4698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d4870"/>
        <function-ref name="getPayload" scoped="" ref="0x410d4950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d4a30"/>
        <function-ref name="cancel" scoped="" ref="0x410d4b10"/>
        <function-ref name="sendDone" scoped="" ref="0x410d4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4109d090" loc="37:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4109d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4109d268"/>
        <function-ref name="getPayload" scoped="" ref="0x4109d348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4109d428"/>
        <function-ref name="cancel" scoped="" ref="0x4109d508"/>
        <function-ref name="sendDone" scoped="" ref="0x4109d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x410d6a28" loc="51:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x410d6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x410d6c80"/>
        <function-ref name="rand32" scoped="" ref="0x410d6d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x410d7ad0" loc="48:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x410d7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410d7ca8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410d7d88"/>
        <function-ref name="getPayload" scoped="" ref="0x410d7e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d6010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4109c500" loc="40:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4109c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4109c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x410d4e18" loc="47:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x410d4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410d7010"/>
        <function-ref name="source" scoped="" ref="0x410d70f0"/>
        <function-ref name="address" scoped="" ref="0x410d71d0"/>
        <function-ref name="destination" scoped="" ref="0x410d72b0"/>
        <function-ref name="setSource" scoped="" ref="0x410d7390"/>
        <function-ref name="setDestination" scoped="" ref="0x410d7470"/>
        <function-ref name="type" scoped="" ref="0x410d7550"/>
        <function-ref name="setType" scoped="" ref="0x410d7630"/>
        <function-ref name="isForMe" scoped="" ref="0x410d7710"/>
        <function-ref name="setGroup" scoped="" ref="0x410d77f0"/>
        <function-ref name="localGroup" scoped="" ref="0x410d78d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4109d770" loc="38:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4109d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4109d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x410d4300" loc="42:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x410d4300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x410d44d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4109ebd0" loc="36:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4109ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4109eda8"/>
        <function-ref name="stop" scoped="" ref="0x4109ee88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x410d66d0" loc="50:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x410d66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x410d68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41125a28" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41125a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41125c00"/>
        <function-ref name="getPayload" scoped="" ref="0x41125ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41125dc0"/>
        <function-ref name="cancel" scoped="" ref="0x41125ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x41124010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41124150" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41124150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41124328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41124408"/>
        <function-ref name="getPayload" scoped="" ref="0x411244e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411245c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411246a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411247e8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411247e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411249c0"/>
        <function-ref name="source" scoped="" ref="0x41124aa0"/>
        <function-ref name="address" scoped="" ref="0x41124b80"/>
        <function-ref name="destination" scoped="" ref="0x41124c60"/>
        <function-ref name="setSource" scoped="" ref="0x41124d40"/>
        <function-ref name="setDestination" scoped="" ref="0x41124e20"/>
        <function-ref name="type" scoped="" ref="0x41124f00"/>
        <function-ref name="setType" scoped="" ref="0x41123010"/>
        <function-ref name="isForMe" scoped="" ref="0x411230f0"/>
        <function-ref name="setGroup" scoped="" ref="0x411231d0"/>
        <function-ref name="localGroup" scoped="" ref="0x411232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41123410" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41123410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411235e8"/>
        <function-ref name="noAck" scoped="" ref="0x411236c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411237a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4169f800" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4169f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4169f9d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4169fab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4169fb98"/>
        <function-ref name="cancel" scoped="" ref="0x4169fc78"/>
        <function-ref name="sendDone" scoped="" ref="0x4169fd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4169fe98" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4169fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4169c0c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4169c1a0"/>
        <function-ref name="getPayload" scoped="" ref="0x4169c280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4169c360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4169c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4169c580" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4169c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4169c758"/>
        <function-ref name="source" scoped="" ref="0x4169c838"/>
        <function-ref name="address" scoped="" ref="0x4169c918"/>
        <function-ref name="destination" scoped="" ref="0x4169c9f8"/>
        <function-ref name="setSource" scoped="" ref="0x4169cad8"/>
        <function-ref name="setDestination" scoped="" ref="0x4169cbb8"/>
        <function-ref name="type" scoped="" ref="0x4169cc98"/>
        <function-ref name="setType" scoped="" ref="0x4169cd78"/>
        <function-ref name="isForMe" scoped="" ref="0x4169ce58"/>
        <function-ref name="setGroup" scoped="" ref="0x4169b010"/>
        <function-ref name="localGroup" scoped="" ref="0x4169b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4169b250" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4169b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4169b428"/>
        <function-ref name="noAck" scoped="" ref="0x4169b508"/>
        <function-ref name="wasAcked" scoped="" ref="0x4169b5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41699ea8" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41699ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416eb0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x416eb1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416eb280"/>
        <function-ref name="cancel" scoped="" ref="0x416eb360"/>
        <function-ref name="sendDone" scoped="" ref="0x416eb440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416eb5b0" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416eb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416eb788"/>
        <function-ref name="getPayload" scoped="" ref="0x416eb868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416eb948"/>
        <function-ref name="cancel" scoped="" ref="0x416eba28"/>
        <function-ref name="sendDone" scoped="" ref="0x416ebb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416ebc48" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416ebc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416ebe20"/>
        <function-ref name="source" scoped="" ref="0x416ebf00"/>
        <function-ref name="address" scoped="" ref="0x416ea010"/>
        <function-ref name="destination" scoped="" ref="0x416ea0f0"/>
        <function-ref name="setSource" scoped="" ref="0x416ea1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x416ea2b0"/>
        <function-ref name="type" scoped="" ref="0x416ea390"/>
        <function-ref name="setType" scoped="" ref="0x416ea470"/>
        <function-ref name="isForMe" scoped="" ref="0x416ea550"/>
        <function-ref name="setGroup" scoped="" ref="0x416ea630"/>
        <function-ref name="localGroup" scoped="" ref="0x416ea710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41122c80" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41122c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41122e58"/>
        <function-ref name="payloadLength" scoped="" ref="0x41121010"/>
        <function-ref name="getPayload" scoped="" ref="0x411210f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411211d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411212b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41122968" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41122968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41122b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411213f0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411215c8"/>
        <function-ref name="source" scoped="" ref="0x411216a8"/>
        <function-ref name="address" scoped="" ref="0x41121788"/>
        <function-ref name="destination" scoped="" ref="0x41121868"/>
        <function-ref name="setSource" scoped="" ref="0x41121948"/>
        <function-ref name="setDestination" scoped="" ref="0x41121a28"/>
        <function-ref name="type" scoped="" ref="0x41121b08"/>
        <function-ref name="setType" scoped="" ref="0x41121be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41121cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41121da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41121e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4111f788" loc="39:/opt/tinyos-2.1.1/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4111f788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4111f960"/>
        <function-ref name="payloadLength" scoped="" ref="0x4111fa40"/>
        <function-ref name="getPayload" scoped="" ref="0x4111fb20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111fc00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4111fce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4111f470" loc="38:/opt/tinyos-2.1.1/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4111f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4111f648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4111fe20" loc="40:/opt/tinyos-2.1.1/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4111fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4111e010"/>
        <function-ref name="source" scoped="" ref="0x4111e0f0"/>
        <function-ref name="address" scoped="" ref="0x4111e1d0"/>
        <function-ref name="destination" scoped="" ref="0x4111e2b0"/>
        <function-ref name="setSource" scoped="" ref="0x4111e390"/>
        <function-ref name="setDestination" scoped="" ref="0x4111e470"/>
        <function-ref name="type" scoped="" ref="0x4111e550"/>
        <function-ref name="setType" scoped="" ref="0x4111e630"/>
        <function-ref name="isForMe" scoped="" ref="0x4111e710"/>
        <function-ref name="setGroup" scoped="" ref="0x4111e7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4111e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x411c87d8" loc="99:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x411c87d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x411c89b0"/>
        <function-ref name="setRoot" scoped="" ref="0x411c8a90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x411c8b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x411bcbb8" loc="252:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x411bcbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411bcd90"/>
        <function-ref name="runTask" scoped="" ref="0x411bce70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x411be970" loc="114:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x411be970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x411beb48"/>
        <function-ref name="logEventMsg" scoped="" ref="0x411bec28"/>
        <function-ref name="logEventSimple" scoped="" ref="0x411bed08"/>
        <function-ref name="logEventRoute" scoped="" ref="0x411bede8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x411beec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x411c5488" loc="108:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x411c5488"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x411c5660"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x411c5740"/>
        <function-ref name="txNoAck" scoped="" ref="0x411c5820"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x411c5900"/>
        <function-ref name="evicted" scoped="" ref="0x411c59e0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x411c5ac0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x411c5ba0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x411c5c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x411c7d28" loc="102:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x411c7d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x411c7f00"/>
        <function-ref name="setEtx" scoped="" ref="0x411c6010"/>
        <function-ref name="clearOption" scoped="" ref="0x411c60f0"/>
        <function-ref name="getEtx" scoped="" ref="0x411c61d0"/>
        <function-ref name="setOption" scoped="" ref="0x411c62b0"/>
        <function-ref name="setParent" scoped="" ref="0x411c6390"/>
        <function-ref name="getParent" scoped="" ref="0x411c6470"/>
        <function-ref name="getOption" scoped="" ref="0x411c6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x411c4a30" loc="110:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x411c4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411c4c08"/>
        <function-ref name="stopDone" scoped="" ref="0x411c4ce8"/>
        <function-ref name="start" scoped="" ref="0x411c4dc8"/>
        <function-ref name="stop" scoped="" ref="0x411c4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x411be578" loc="113:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x411be578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x411be750"/>
        <function-ref name="rand32" scoped="" ref="0x411be830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x411c8cb0" loc="100:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x411c8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x411c8e88"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x411c7010"/>
        <function-ref name="numNeighbors" scoped="" ref="0x411c70f0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x411c71d0"/>
        <function-ref name="getEtx" scoped="" ref="0x411c72b0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x411c7390"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x411c7470"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x411c7550"/>
        <function-ref name="getParent" scoped="" ref="0x411c7630"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x411c7710"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x411c77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x411bc780" loc="375:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x411bc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411bc958"/>
        <function-ref name="runTask" scoped="" ref="0x411bca38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411c6690" loc="103:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411c6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411c6868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x411c69f8" loc="106:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x411c69f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411c6bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x411c6cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411c6d90"/>
        <function-ref name="cancel" scoped="" ref="0x411c6e70"/>
        <function-ref name="sendDone" scoped="" ref="0x411c5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x411c30c0" loc="111:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x411c30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411c2ba8"/>
        <function-ref name="fired" scoped="" ref="0x411c3e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411c2568"/>
        <function-ref name="isOneShot" scoped="" ref="0x411c2310"/>
        <function-ref name="getdt" scoped="" ref="0x411c0068"/>
        <function-ref name="gett0" scoped="" ref="0x411c2e00"/>
        <function-ref name="isRunning" scoped="" ref="0x411c20b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411c36e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411c2888"/>
        <function-ref name="startOneShot" scoped="" ref="0x411c3968"/>
        <function-ref name="stop" scoped="" ref="0x411c3be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x411c0328" loc="112:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x411c0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411bfe98"/>
        <function-ref name="fired" scoped="" ref="0x411bf150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411bf858"/>
        <function-ref name="isOneShot" scoped="" ref="0x411bf600"/>
        <function-ref name="getdt" scoped="" ref="0x411be368"/>
        <function-ref name="gett0" scoped="" ref="0x411be110"/>
        <function-ref name="isRunning" scoped="" ref="0x411bf3a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411c09d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411bfb78"/>
        <function-ref name="startOneShot" scoped="" ref="0x411c0c50"/>
        <function-ref name="stop" scoped="" ref="0x411c0ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x411bc030" loc="115:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x411bc030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x411bc208"/>
        <function-ref name="setClientCongested" scoped="" ref="0x411bc2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x411bc428" loc="117:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x411bc428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x411bc600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x411c5170" loc="107:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x411c5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411c5348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x411c5dc0" loc="109:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411c5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411c4010"/>
        <function-ref name="source" scoped="" ref="0x411c40f0"/>
        <function-ref name="address" scoped="" ref="0x411c41d0"/>
        <function-ref name="destination" scoped="" ref="0x411c42b0"/>
        <function-ref name="setSource" scoped="" ref="0x411c4390"/>
        <function-ref name="setDestination" scoped="" ref="0x411c4470"/>
        <function-ref name="type" scoped="" ref="0x411c4550"/>
        <function-ref name="setType" scoped="" ref="0x411c4630"/>
        <function-ref name="isForMe" scoped="" ref="0x411c4710"/>
        <function-ref name="setGroup" scoped="" ref="0x411c47f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411c48d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x411c7930" loc="101:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411c7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411c7b08"/>
        <function-ref name="stop" scoped="" ref="0x411c7be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x411c8220" loc="98:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x411c8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x411c83f8"/>
        <function-ref name="routeFound" scoped="" ref="0x411c84d8"/>
        <function-ref name="nextHop" scoped="" ref="0x411c85b8"/>
        <function-ref name="noRoute" scoped="" ref="0x411c8698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411b7e20" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411b7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033d9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4033db98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411b5920"/>
        <function-ref name="fired" scoped="" ref="0x411b6bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411b52e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x411b5088"/>
        <function-ref name="getdt" scoped="" ref="0x411b5dd0"/>
        <function-ref name="gett0" scoped="" ref="0x411b5b78"/>
        <function-ref name="isRunning" scoped="" ref="0x411b6e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411b6468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411b5600"/>
        <function-ref name="startOneShot" scoped="" ref="0x411b66e8"/>
        <function-ref name="stop" scoped="" ref="0x411b6968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411f31f8" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411f31f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411f33d0"/>
        <function-ref name="getPayload" scoped="" ref="0x411f34b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f3590"/>
        <function-ref name="cancel" scoped="" ref="0x411f3670"/>
        <function-ref name="sendDone" scoped="" ref="0x411f3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411f3890" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411f3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411f3a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x411f3b48"/>
        <function-ref name="getPayload" scoped="" ref="0x411f3c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f3d08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411f3de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411f3f28" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411f3f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411f1110"/>
        <function-ref name="source" scoped="" ref="0x411f11f0"/>
        <function-ref name="address" scoped="" ref="0x411f12d0"/>
        <function-ref name="destination" scoped="" ref="0x411f13b0"/>
        <function-ref name="setSource" scoped="" ref="0x411f1490"/>
        <function-ref name="setDestination" scoped="" ref="0x411f1570"/>
        <function-ref name="type" scoped="" ref="0x411f1650"/>
        <function-ref name="setType" scoped="" ref="0x411f1730"/>
        <function-ref name="isForMe" scoped="" ref="0x411f1810"/>
        <function-ref name="setGroup" scoped="" ref="0x411f18f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411f19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411f1b30" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411f1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411f1d08"/>
        <function-ref name="noAck" scoped="" ref="0x411f1de8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411f1ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416f09b8" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416f09b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416f0b90"/>
        <function-ref name="getPayload" scoped="" ref="0x416f0c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416f0d50"/>
        <function-ref name="cancel" scoped="" ref="0x416f0e30"/>
        <function-ref name="sendDone" scoped="" ref="0x416f0f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41743070" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41743070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41743248"/>
        <function-ref name="payloadLength" scoped="" ref="0x41743328"/>
        <function-ref name="getPayload" scoped="" ref="0x41743408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417434e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417435c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41743708" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41743708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417438e0"/>
        <function-ref name="source" scoped="" ref="0x417439c0"/>
        <function-ref name="address" scoped="" ref="0x41743aa0"/>
        <function-ref name="destination" scoped="" ref="0x41743b80"/>
        <function-ref name="setSource" scoped="" ref="0x41743c60"/>
        <function-ref name="setDestination" scoped="" ref="0x41743d40"/>
        <function-ref name="type" scoped="" ref="0x41743e20"/>
        <function-ref name="setType" scoped="" ref="0x41743f00"/>
        <function-ref name="isForMe" scoped="" ref="0x41742010"/>
        <function-ref name="setGroup" scoped="" ref="0x417420f0"/>
        <function-ref name="localGroup" scoped="" ref="0x417421d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41742330" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41742330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41742508"/>
        <function-ref name="noAck" scoped="" ref="0x417425e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x417426c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4173c060" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4173c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4173c238"/>
        <function-ref name="getPayload" scoped="" ref="0x4173c318"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4173c3f8"/>
        <function-ref name="cancel" scoped="" ref="0x4173c4d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4173c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4173c728" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4173c728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4173c900"/>
        <function-ref name="getPayload" scoped="" ref="0x4173c9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4173cac0"/>
        <function-ref name="cancel" scoped="" ref="0x4173cba0"/>
        <function-ref name="sendDone" scoped="" ref="0x4173cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4173cdc0" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4173cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4173b010"/>
        <function-ref name="source" scoped="" ref="0x4173b0f0"/>
        <function-ref name="address" scoped="" ref="0x4173b1d0"/>
        <function-ref name="destination" scoped="" ref="0x4173b2b0"/>
        <function-ref name="setSource" scoped="" ref="0x4173b390"/>
        <function-ref name="setDestination" scoped="" ref="0x4173b470"/>
        <function-ref name="type" scoped="" ref="0x4173b550"/>
        <function-ref name="setType" scoped="" ref="0x4173b630"/>
        <function-ref name="isForMe" scoped="" ref="0x4173b710"/>
        <function-ref name="setGroup" scoped="" ref="0x4173b7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4173b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411ef510" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411ef510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411ef6e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x411ef7c8"/>
        <function-ref name="getPayload" scoped="" ref="0x411ef8a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411ef988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411efa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411ef1f8" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411ef1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411ef3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411efba8" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411efba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411efd80"/>
        <function-ref name="source" scoped="" ref="0x411efe60"/>
        <function-ref name="address" scoped="" ref="0x411ee010"/>
        <function-ref name="destination" scoped="" ref="0x411ee0f0"/>
        <function-ref name="setSource" scoped="" ref="0x411ee1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x411ee2b0"/>
        <function-ref name="type" scoped="" ref="0x411ee390"/>
        <function-ref name="setType" scoped="" ref="0x411ee470"/>
        <function-ref name="isForMe" scoped="" ref="0x411ee550"/>
        <function-ref name="setGroup" scoped="" ref="0x411ee630"/>
        <function-ref name="localGroup" scoped="" ref="0x411ee710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411da920" loc="41:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411da920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411daaf8"/>
        <function-ref name="getPayload" scoped="" ref="0x411dabd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411dacb8"/>
        <function-ref name="cancel" scoped="" ref="0x411dad98"/>
        <function-ref name="sendDone" scoped="" ref="0x411dae78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4120e010" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4120e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4120e1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4120e2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4120e3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4120e488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4120e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4120e6a8" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4120e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4120e880"/>
        <function-ref name="source" scoped="" ref="0x4120e960"/>
        <function-ref name="address" scoped="" ref="0x4120ea40"/>
        <function-ref name="destination" scoped="" ref="0x4120eb20"/>
        <function-ref name="setSource" scoped="" ref="0x4120ec00"/>
        <function-ref name="setDestination" scoped="" ref="0x4120ece0"/>
        <function-ref name="type" scoped="" ref="0x4120edc0"/>
        <function-ref name="setType" scoped="" ref="0x4120eea0"/>
        <function-ref name="isForMe" scoped="" ref="0x4120d010"/>
        <function-ref name="setGroup" scoped="" ref="0x4120d0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4120d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4120d330" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4120d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4120d508"/>
        <function-ref name="noAck" scoped="" ref="0x4120d5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4120d6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4172c2d8" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4172c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4172c4b0"/>
        <function-ref name="getPayload" scoped="" ref="0x4172c590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4172c670"/>
        <function-ref name="cancel" scoped="" ref="0x4172c750"/>
        <function-ref name="sendDone" scoped="" ref="0x4172c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4172c9a0" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4172c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4172cb78"/>
        <function-ref name="getPayload" scoped="" ref="0x4172cc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4172cd38"/>
        <function-ref name="cancel" scoped="" ref="0x4172ce18"/>
        <function-ref name="sendDone" scoped="" ref="0x4172cef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4172b070" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4172b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4172b248"/>
        <function-ref name="source" scoped="" ref="0x4172b328"/>
        <function-ref name="address" scoped="" ref="0x4172b408"/>
        <function-ref name="destination" scoped="" ref="0x4172b4e8"/>
        <function-ref name="setSource" scoped="" ref="0x4172b5c8"/>
        <function-ref name="setDestination" scoped="" ref="0x4172b6a8"/>
        <function-ref name="type" scoped="" ref="0x4172b788"/>
        <function-ref name="setType" scoped="" ref="0x4172b868"/>
        <function-ref name="isForMe" scoped="" ref="0x4172b948"/>
        <function-ref name="setGroup" scoped="" ref="0x4172ba28"/>
        <function-ref name="localGroup" scoped="" ref="0x4172bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41219990" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41219990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41219b68"/>
        <function-ref name="getPayload" scoped="" ref="0x41219c48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41219d28"/>
        <function-ref name="cancel" scoped="" ref="0x41219e08"/>
        <function-ref name="sendDone" scoped="" ref="0x41219ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x412147d8" loc="40:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412147d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412149c0"/>
        <function-ref name="getPayload" scoped="" ref="0x41214aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41214b80"/>
        <function-ref name="cancel" scoped="" ref="0x41214c60"/>
        <function-ref name="sendDone" scoped="" ref="0x41214d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41214068" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41214068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41214250"/>
        <function-ref name="getPayload" scoped="" ref="0x41214330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41214410"/>
        <function-ref name="cancel" scoped="" ref="0x412144f0"/>
        <function-ref name="sendDone" scoped="" ref="0x412145d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x41213a70" loc="42:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41213a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41213c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x41213d28"/>
        <function-ref name="getPayload" scoped="" ref="0x41213e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41213ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41212010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x41212190" loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x41212190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41212368"/>
        <function-ref name="runTask" scoped="" ref="0x41212448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x412125c8" loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x412125c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412127a0"/>
        <function-ref name="runTask" scoped="" ref="0x41212880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41214e80" loc="41:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41214e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41213070"/>
        <function-ref name="source" scoped="" ref="0x41213150"/>
        <function-ref name="address" scoped="" ref="0x41213230"/>
        <function-ref name="destination" scoped="" ref="0x41213310"/>
        <function-ref name="setSource" scoped="" ref="0x412133f0"/>
        <function-ref name="setDestination" scoped="" ref="0x412134d0"/>
        <function-ref name="type" scoped="" ref="0x412135b0"/>
        <function-ref name="setType" scoped="" ref="0x41213690"/>
        <function-ref name="isForMe" scoped="" ref="0x41213770"/>
        <function-ref name="setGroup" scoped="" ref="0x41213850"/>
        <function-ref name="localGroup" scoped="" ref="0x41213930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4120b510" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.ReceiveTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4120b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4120b6e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4120b7c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4120b8a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4120b988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4120ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4120b1f8" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.ReceiveTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4120b1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4120b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4120bba8" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.ReceiveTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4120bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4120bd80"/>
        <function-ref name="source" scoped="" ref="0x4120be60"/>
        <function-ref name="address" scoped="" ref="0x4120a010"/>
        <function-ref name="destination" scoped="" ref="0x4120a0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4120a1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4120a2b0"/>
        <function-ref name="type" scoped="" ref="0x4120a390"/>
        <function-ref name="setType" scoped="" ref="0x4120a470"/>
        <function-ref name="isForMe" scoped="" ref="0x4120a550"/>
        <function-ref name="setGroup" scoped="" ref="0x4120a630"/>
        <function-ref name="localGroup" scoped="" ref="0x4120a710"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x403c8700" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
              <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403c81b8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x403c8398" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403c8578" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.1/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x403cd210" loc="43:/opt/tinyos-2.1.1/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x403c9a40" loc="41:/opt/tinyos-2.1.1/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x403c9e38" loc="42:/opt/tinyos-2.1.1/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40387010" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4038e738" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4038e5e0" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4038d730" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4038d5d8" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40387e38" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4038ec48" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x403c39a8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403c3610" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x403c3848" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x403c24a0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403c2348" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x403c3138" loc="57:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x403bba98" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x403bb940" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="40:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4038c4f0" loc="40:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4038c4f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x4038cc98" loc="52:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4038c4f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4038cb40" loc="52:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4038c4f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x403c71c8" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403c7690" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403cf7f8" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403cfc40" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403d80f8" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403d8968" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403d66a0" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403d6b48" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403d8520" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403d52a8" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403d5150" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403cf3d0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403d8de8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403d6258" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x403cc3d0" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403cde58" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x403cc088" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403cc268" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403d3190" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403cad60" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403d3010" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403ca800" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x403cb088" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403ccf18" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x403cbd78" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403cba20" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x403cbc18" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403e45b8" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403f0010" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403f1e48" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403e8630" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403e8c68" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403e8b10" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403f1348" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403f11f0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403f18a0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403f7ee0" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404002e8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403f7750" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40400ab8" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403f7b10" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404006c0" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403f7010" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403f73a0" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402ee898" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f01c8" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402eecd8" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f7138" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402f7650" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403607e0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40373138" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40326798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40366c58" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404fbe90" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404fbd38" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405058e0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40505788" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40503878" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40503518" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405036f8" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40504ef0" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40504558" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40504218" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405043f8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4050eb60" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4050eb60"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4050ecc8" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4050ecc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40510ec0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4050ecc8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40510d68" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4051b9c0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051b868" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40510370" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40510218" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4051a4b8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4050ecc8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051a148" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4051a358" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4050ecc8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40512710" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405125b8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40511220" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405110c8" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40511ca8" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40511b50" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x405089e8" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40508890" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4050d310" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4050d1b8" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40502258" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405028f0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40502798" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4050cc18" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4050c8b0" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4050cab8" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4050def8" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4050db90" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4050dd98" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4050a320" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4050a1c8" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4050ae58" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4050ab28" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4050acf8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403b1d30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405097d0" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40509678" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40514688" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40514328" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40514528" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40514f00" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x4052e550" loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052e3f8" loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x4052f458" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052f300" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x405305d8" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40530480" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x4051ced0" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x4051cd78" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x40530bd0" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x40530a78" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x4052fd08" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052fbb0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40536060" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4052dcd0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4052dee8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x40528568" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40528210" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x40528408" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x405261c8" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40527e20" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x40526068" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x40528bf0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x401bb1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40528a98" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x405279e0" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40527888" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x4051ed28" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4051ebd0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x405272f8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405271a0" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40539010" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052ae80" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x4052b3a8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052b010" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x4052b248" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x4052a688" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052a530" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4052a010" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052bbe8" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4052be20" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40539930" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405397d8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4051d950" loc="47:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051d7f8" loc="47:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4053e638" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053e2f8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4053e4d8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4053b208" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053ce90" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4053b088" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4053c930" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4053d2a0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053d148" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4053c010" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053dbe0" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4053ddd8" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40541990" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40541070" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40534a40" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40541520" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4053f0c8" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405564c0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40556178" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x40556360" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40554010" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x40553720" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40554f08" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x405533d8" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405535b8" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40554a18" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405546c0" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405548b8" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x40556b10" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x405569b8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x405614e0" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40561038" loc="35:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x40552c88" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x40391e80"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x40390ea0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40552af0" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x4055d748" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x4038f580"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x403964c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055d5b0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x405594e8" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x405587f0" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x40558388" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x4054d630" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x40559010" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x40559a00" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x40559ec0" loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x4054db38" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x4055be60" loc="71:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x4055b010" loc="56:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x4055b9f8" loc="66:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x4055b8a0" loc="66:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x4055b428" loc="61:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x4055c4a0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x4055c348" loc="45:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x4055cb08" loc="51:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x4055c9b0" loc="51:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x40596508" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x405961a0" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x405963a8" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x405977c8" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x405971e8" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x40599dd0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x40597088" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x4058bab8" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4058b960" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x40597ce0" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x4058aeb0" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4058ad58" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4058a480" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4058a328" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x40595010" loc="110:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x405998c0" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40599768" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x40596aa8" loc="105:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x4058a8d8" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x4058b4b0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4058bec8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x40599310" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40593038" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40593038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x405934e8" loc="55:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40593c98" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40593038"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40593968" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40593b38" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40593038"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x405abf18" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40389ba0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405abdc0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x405aa5c8" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40389ba0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405aa470" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4059dbb8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4059dbb8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4059dd20" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405a7010" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4059acb0" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405a9990" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405a9640" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
          </variable>
          <variable name="dt" ref="0x405a9830" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405a9138" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405a74a0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4059a370" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4059a218" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059dd20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4059a850" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x405b0010" loc="50:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x405b0880" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x405b0480" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x405a4a90" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403ba010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x405a4728" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403ba010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x405a4930" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x405b9478" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40389ba0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x405ad010" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40389ba0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x405a3758" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x405a3c30" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405a3e30" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x405addf8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40389ba0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x405ad5b8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x405ada90" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405adc90" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x405a2720" loc="57:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x405a22c0" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x405a5e90" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x405a5928" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40619940" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035e8e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4035eb08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x4061b340" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40350c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40350e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4061b1e8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40350c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40350e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4061be20" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40357398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403575c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x4060dc40" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034caa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x4034ccd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40619488" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40357398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403575c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40619330" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40357398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403575c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40618010" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035e8e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4035eb08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40619df8" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035e8e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4035eb08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x4061c678" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403552c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403554e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x4061c1a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40350c30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40350e58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x4061ccc0" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034caa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x4034ccd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4061cb68" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034caa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x4034ccd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x4061b960" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403552c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403554e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4061b808" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403552c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403554e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40617180" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40617180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40626c48" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40626af0" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40626260" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40617678" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40617180"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406161e0" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40617180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40616088" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40617180"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40616620" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406266c0" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40617bf0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40617180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40617a98" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40617180"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40616a28" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40616e20" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40623158" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40623158"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40620090" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40621038" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40623650" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40623158"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40621440" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406204f0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40623bd8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40623158"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40623a80" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40623158"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40621848" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40621c40" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40604d18" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40604d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x4060f4f0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40610c38" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40611230" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40604d18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x4060fa80" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4060f928" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x4060ff10" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40610010" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40611bd8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4060f0c8" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406117a8" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40604d18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40611650" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40604d18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40610418" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40610810" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x4062c848" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40346c78"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40346ea0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40629e20" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40348cd0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40348ef8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40629368" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40349590"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403497b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40629970" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40349590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403497b8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40629818" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40349590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403497b8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40628480" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40348cd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40348ef8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40628328" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40348cd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40348ef8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x4062ce68" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40346c78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40346ea0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4062cd10" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40346c78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40346ea0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x40637010" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406374e0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40638bc8" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406379a0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406380f8" loc="21:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343e08"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x4034a048"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x406386e8" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343e08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4034a048"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40638590" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343e08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4034a048"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406ffdb8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ffdb8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406fff20" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406fff20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406fa420" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406fff20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x406fae48" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x406fa948" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406f8288" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x4075ce20" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407577e8" loc="55:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x407573a0" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40757248" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x4075c918" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40773138" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40772070" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4075ed28" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x40773b98" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x40773a40" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4075e920" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40773588" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4077c770" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x407bbdb8" loc="24:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x407b82d0" loc="31:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x407b87b0" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x407da7a8" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407da448" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407da648" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x407d8ef0" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407d8990" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407d8b90" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x407d8d88" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x407d8170" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40389ba0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407d9db8" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407d8010" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x407dbb88" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40389ba0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407db828" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407dba28" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x407d9570" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407d9010" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407d9210" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x407d9408" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407e0c08" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x407e0698" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x407e08b0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407e0aa0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407de298" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x407ddae0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x407ddcf8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407ddee8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x407de128" loc="72:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x407e3848" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x407e36f0" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x4082ca68" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4082c910" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x408456e8" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40845590" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40845010" loc="52:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40845d30" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40845bd8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40854548" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x4084fc38" loc="109:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40852dd8" loc="100:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x4084e288" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x4084e130" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x408540f8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40851d48" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40851bf0" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40852010" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40853e48" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40854dd8" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x4084b318" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x4084b1c0" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40852468" loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x4084ec10" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x4084eab8" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x4084d4b0" loc="120:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x4084f7f0" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x4084f698" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x4084dd78" loc="124:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40851380" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40851228" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40853390" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40853238" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x408529b8" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40852860" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x4084f210" loc="106:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x4084e6b0" loc="112:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x4084d038" loc="115:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x4084d908" loc="122:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x408517b8" loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40854970" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40853958" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40853800" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40848070" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40848570" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x408842f0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408847d8" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x408ab138" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x408ab710" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x408a93a8" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x408adec8" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x408c2d20" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x408ac718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408c2bc8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x408ac718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x408c59b0" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x408c2088" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x408ac718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408c5f18" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x408ac718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x408c2638" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x408ac718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x40940570" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40974750" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x409741d0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x409745f0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40977cf8" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40977878" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40977720" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40960918" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409607c0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40960010" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40963e70" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4097fb08" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4097f9b0" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4097f220" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4097f0c8" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a45e68" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a45e68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40a42358" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a80808" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a80808"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40a79038" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40a7de28" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40a7a010" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40a7cc48" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40a7ce30" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40a7c7a0" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40a799b0" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40a79480" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40a7c2e0" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40a80e60" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a80d08" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40a7a9f8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40a7a6b0" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40a7a898" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40a7d590" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a7d438" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a7da60" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40b50580" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b50580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40b50bd0" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b50580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40b50a78" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b50580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40c4e1c8" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c4fe10" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40c4e068" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40c53f08" loc="15:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40c4f800" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c4f488" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40c4f6a0" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40c6a158" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40c70d10" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40c4a7e8" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40c6f460" loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40c6e588" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c6e430" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40c6f988" loc="68:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40c4af18" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c4adc0" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40c6ea90" loc="89:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40c6fee8" loc="74:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40c49878" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40c49e40" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40c49268" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40c49110" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40c74628" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c744d0" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40c4b7a8" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40c71010" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c4be38" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40c716a8" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c71550" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d028c0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d02570" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d02760" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40cfdc28" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40cfdad0" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40cfc480" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cfc130" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cfc320" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40cfd090" loc="65:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40d29370" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cfcda8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d29010" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d29208" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40cfd618" loc="72:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40cff730" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cff1e0" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cff3d0" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40cff5c8" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d17468" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d17310" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40d17d00" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d17998" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40d17ba0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40d394c8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40d3ac50" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40d37aa8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d37950" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40d371a8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40d3a3d8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40d3a818" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40d390c8" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40d398c8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40d39dd0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d39c78" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40d37578" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="49:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x40e50610" loc="82:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x40e50210" loc="77:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40e23d40" loc="72:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40e23448" loc="60:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40e23938" loc="66:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x40e24ef0" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x40e24d78" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x40e21ab0" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40e21550" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40e21740" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x40e21948" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x40e20298" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x40e245a8" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x40e21ed8" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bc400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x40e24970" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="36:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40ebb7a0" loc="36:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ebb7a0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x40eee760" loc="61:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ebbc48" loc="47:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ebb7a0"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40eee2a0" loc="56:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ebb7a0"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x40eee148" loc="56:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ebb7a0"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x40ef71c8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40ef6718" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40ef65c0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40ef6cd8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40ef6b80" loc="64:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ef7b80" loc="46:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40ef7a28" loc="46:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x40ef44c0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40ef4180" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x40ef4360" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x40ef75d0" loc="39:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ef6168" loc="52:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40ef6010" loc="52:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40ef4940" loc="77:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40f6f368" loc="50:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6f010" loc="50:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40f6f208" loc="50:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40f727c0" loc="44:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f72458" loc="44:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40f72660" loc="44:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40f71530" loc="47:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f711a8" loc="47:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40f713d0" loc="47:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40f72058" loc="43:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f76ec8" loc="43:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40f71b20" loc="49:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f719c8" loc="49:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40f72d98" loc="46:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f72c40" loc="46:/opt/tinyos-2.1.1/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="48:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x40f5faf0" loc="50:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40f5f998" loc="50:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x40f91af0" loc="62:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40f91370" loc="62:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40f91560" loc="62:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40f91778" loc="62:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40f91980" loc="62:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x40f92360" loc="53:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40f92010" loc="53:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x40f92200" loc="53:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40f907c0" loc="68:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40f90010" loc="68:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40f90228" loc="68:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40f90440" loc="68:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40f90650" loc="68:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x40f92f10" loc="56:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40f927a0" loc="56:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x40f929a0" loc="56:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x40f92ba0" loc="56:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x40f92da0" loc="56:/opt/tinyos-2.1.1/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.1/tos/interfaces/Intercept.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40f740a0" loc="31:/opt/tinyos-2.1.1/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.1/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f40b60" loc="31:/opt/tinyos-2.1.1/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40f40d40" loc="31:/opt/tinyos-2.1.1/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f40f20" loc="31:/opt/tinyos-2.1.1/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="33:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x40f60168" loc="84:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40f60010" loc="84:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x40f62838" loc="71:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x40f61b08" loc="83:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x40f64db0" loc="59:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40f647f0" loc="52:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.</short>
          <long>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.  The pointer is allocated by the&#10; caller.  If the parent is invalid, return FAIL (no info).  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x40f64698" loc="52:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x40f62320" loc="66:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x40f61098" loc="76:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40f62d18" loc="76:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x40f62f20" loc="76:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40f60d00" loc="86:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40f60ba8" loc="86:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40f64168" loc="42:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40f64010" loc="42:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x40f60758" loc="85:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40f60600" loc="85:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x40f616a0" loc="81:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="78:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40f61548" loc="81:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40f5e010" loc="7:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40f5e5c0" loc="14:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40f5e468" loc="14:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007/11/28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x40f69af8" loc="64:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f697a0" loc="64:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40f69998" loc="64:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x40f6d5e0" loc="52:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6d260" loc="52:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40f6d480" loc="52:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40f6a028" loc="58:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6bcc0" loc="58:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40f6beb0" loc="58:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40f6ad48" loc="61:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6a9e0" loc="61:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40f6abe8" loc="61:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40f6ee20" loc="49:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6ea80" loc="49:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40f6ecc0" loc="49:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40f6b8e0" loc="57:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6b788" loc="57:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40f6a5e0" loc="60:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6a488" loc="60:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40f677b0" loc="67:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f67478" loc="67:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40f67650" loc="67:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40f6e660" loc="46:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6e2c0" loc="46:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40f6e500" loc="46:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x40f667b8" loc="70:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40f66448" loc="70:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40f66658" loc="70:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40f6db60" loc="54:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6da08" loc="54:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40f69350" loc="63:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f691f8" loc="63:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x40f66010" loc="69:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40f67c80" loc="69:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40f67e90" loc="69:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40f67090" loc="66:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f69f28" loc="66:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40f6b350" loc="55:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f6b010" loc="55:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40f6b1f0" loc="55:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos-2.1.1/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x40f657c0" loc="46:/opt/tinyos-2.1.1/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40f49c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="35:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2007/11/16 23:14:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x40f85708" loc="51:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40f855b0" loc="51:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x40f86aa0" loc="44:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40f86948" loc="44:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x40f85cb8" loc="55:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40f85b60" loc="55:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x40f864c8" loc="41:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40f86370" loc="41:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40f83820" loc="61:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40f836c8" loc="61:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x40f832b8" loc="58:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40f83160" loc="58:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x40f85168" loc="47:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40f85010" loc="47:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x40f89ea8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40f89d50" loc="38:/opt/tinyos-2.1.1/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="33:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40fc9480" loc="33:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fc9480"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40fc9a40" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fc9480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40fc98e8" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fc9480"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40fc64a8" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40fc6058" loc="48:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fc9480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40fc9ed0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fc9480"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40fa0270" loc="43:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fa0270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40f9a468" loc="73:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fa0270"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40f99330" loc="90:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fa0270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f991d8" loc="90:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fa0270"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40032740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x40032740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40f99c28" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fa0270"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40f99ad0" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40f9a038" loc="65:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40f9ab10" loc="81:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40fa0270"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40fa0710" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40fa0b58" loc="58:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos-2.1.1/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40f9e878" loc="49:/opt/tinyos-2.1.1/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40f9ec30" loc="51:/opt/tinyos-2.1.1/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40f9e390" loc="48:/opt/tinyos-2.1.1/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40f9c010" loc="52:/opt/tinyos-2.1.1/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f95350" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f95350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40fcc010" loc="97:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f95350"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40f94258" loc="80:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40f957f0" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40f94860" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f3bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f95350"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f94708" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f95350"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40f95d00" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="39:/opt/tinyos-2.1.1/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2008/09/27 17:00:54 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x410d4198" loc="43:/opt/tinyos-2.1.1/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4109b9b0" loc="43:/opt/tinyos-2.1.1/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4109be38" loc="43:/opt/tinyos-2.1.1/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x410d4030" loc="43:/opt/tinyos-2.1.1/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bb708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009/09/21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x4114b8b0" loc="51:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114b758" loc="51:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x41148a50" loc="57:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41148700" loc="57:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x411488f0" loc="57:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x4114b170" loc="48:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114dd60" loc="48:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4114b010" loc="48:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x41148168" loc="56:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bbd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41148010" loc="56:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x4114d798" loc="47:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114d418" loc="47:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4114d638" loc="47:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x4114a978" loc="54:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114a610" loc="54:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4114a818" loc="54:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x4114a058" loc="53:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403ba270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114bec8" loc="53:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x41150e50" loc="46:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402eab90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41150ad0" loc="46:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403bc5c0"/>
                <typename><typedef-ref name="message_t" ref="0x403bb3a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x41150cf0" loc="46:/opt/tinyos-2.1.1/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40f45388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
